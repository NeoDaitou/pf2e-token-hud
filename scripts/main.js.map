{
  "version": 3,
  "sources": ["../src/actions/use-resolve.js", "../src/pf2e/classes.js", "../src/pf2e/dc.js", "../src/pf2e/dom.js", "../src/pf2e/misc.js", "../src/pf2e/scripts.js", "../src/pf2e/inline-roll.js", "../src/shared.js", "../src/popup.js", "../src/pf2e/item.js", "../src/pf2e/weapon.js", "../src/pf2e/success.js", "../src/actions/recall-knowledge.js", "../src/sidebars/skills.js", "../src/sidebars/extras.js", "../src/sidebars/actions.js", "../src/sidebars/hazard.js", "../src/pf2e/identify.js", "../src/sidebars/items.js", "../src/sidebars/spells.js", "../src/hud.js", "../src/module.js", "../src/keybindings.js", "../src/settings.js", "../src/main.js"],
  "sourcesContent": ["import { localize, templatePath } from '../module.js'\r\n\r\nconst RESOLVE_UUID = 'Compendium.pf2e.feats-srd.Item.jFmdevE4nKevovzo'\r\n\r\nexport async function useResolve(actor) {\r\n    function toChat(content) {\r\n        ChatMessage.create({\r\n            user: game.user.id,\r\n            content,\r\n            speaker: ChatMessage.getSpeaker({ actor }),\r\n        })\r\n    }\r\n\r\n    const { name, attributes } = actor\r\n    const { sp, resolve } = attributes\r\n    const fullStamina = localize('hud.resolve.full', { name })\r\n    const noResolve = game.i18n.format('PF2E.Actions.SteelYourResolve.NoStamina', { name })\r\n\r\n    if (sp.value === sp.max) return ui.notifications.warn(fullStamina)\r\n    if (resolve.value < 1) return ui.notifications.warn(noResolve)\r\n\r\n    const hasSteel = actor.itemTypes.feat.find(item => item.sourceId === RESOLVE_UUID)\r\n    const content = await renderTemplate(templatePath('dialogs/resolve'), {\r\n        hasSteel,\r\n        i18n: str => localize(`hud.resolve.${str}`),\r\n    })\r\n\r\n    new Dialog({\r\n        title: localize('hud.resolve.title'),\r\n        content,\r\n        buttons: {\r\n            yes: {\r\n                icon: \"<i class='fas fa-check'></i>\",\r\n                label: localize('hud.resolve.yes'),\r\n                callback: async html => {\r\n                    const { attributes } = actor\r\n                    const { sp, resolve } = attributes\r\n\r\n                    if (sp.value === sp.max) return toChat(fullStamina)\r\n                    if (resolve.value < 1) return toChat(noResolve)\r\n\r\n                    const selected = html.find('input:checked').val()\r\n                    const ratio = `${sp.value}/${sp.max}`\r\n\r\n                    if (selected === 'breather') {\r\n                        toChat(localize('hud.resolve.breather.used', { name, ratio }))\r\n                        await actor.update({\r\n                            'system.attributes.sp.value': sp.max,\r\n                            'system.attributes.resolve.value': resolve.value - 1,\r\n                        })\r\n                    } else {\r\n                        toChat(game.i18n.format('PF2E.Actions.SteelYourResolve.RecoverStamina', { name, ratio }))\r\n                        const newSP = sp.value + Math.floor(sp.max / 2)\r\n                        await actor.update({\r\n                            'system.attributes.sp.value': Math.min(newSP, sp.max),\r\n                            'system.attributes.resolve.value': resolve.value - 1,\r\n                        })\r\n                    }\r\n                },\r\n            },\r\n            no: {\r\n                icon: \"<i class='fas fa-times'></i>\",\r\n                label: localize('hud.resolve.no'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n", "export function getDamageRollClass() {\r\n    return CONFIG.Dice.rolls.find(R => R.name === 'DamageRoll')\r\n}\r\n\r\nexport function getDamageInstanceClass() {\r\n    return CONFIG.Dice.rolls.find(R => R.name === 'DamageInstance')\r\n}\r\n\r\nexport function getChatMessageClass() {\r\n    return CONFIG.ChatMessage.documentClass\r\n}\r\n\r\nexport function getMeasuredTemplateDocumentClass() {\r\n    return CONFIG.MeasuredTemplate.documentClass\r\n}\r\n\r\nexport function getMeasuredTemplateObjectClass() {\r\n    return CONFIG.MeasuredTemplate.objectClass\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nconst dcAdjustments = new Map([\r\n    ['incredibly-easy', -10],\r\n    ['very-easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very-hard', 5],\r\n    ['incredibly-hard', 10],\r\n])\r\n\r\nconst dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nfunction adjustDC(dc, adjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nfunction rarityToDCAdjustment(rarity = 'common') {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc, rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function calculateDC(level, { proficiencyWithoutLevel, rarity = 'common' } = {}) {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n", "export function htmlQueryAll(parent, selectors) {\r\n    if (!(parent instanceof Element || parent instanceof Document)) return []\r\n    return Array.from(parent.querySelectorAll(selectors))\r\n}\r\n\r\nexport function htmlClosest(child, selectors) {\r\n    if (!(child instanceof Element)) return null\r\n    return child.closest(selectors)\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nconst actionImgMap = {\r\n    0: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    free: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    1: 'systems/pf2e/icons/actions/OneAction.webp',\r\n    2: 'systems/pf2e/icons/actions/TwoActions.webp',\r\n    3: 'systems/pf2e/icons/actions/ThreeActions.webp',\r\n    '1 or 2': 'systems/pf2e/icons/actions/OneTwoActions.webp',\r\n    '1 to 3': 'systems/pf2e/icons/actions/OneThreeActions.webp',\r\n    '2 or 3': 'systems/pf2e/icons/actions/TwoThreeActions.webp',\r\n    reaction: 'systems/pf2e/icons/actions/Reaction.webp',\r\n    passive: 'systems/pf2e/icons/actions/Passive.webp',\r\n}\r\n\r\nconst actionGlyphMap = {\r\n    0: 'F',\r\n    free: 'F',\r\n    1: 'A',\r\n    2: 'D',\r\n    3: 'T',\r\n    '1 or 2': 'A/D',\r\n    '1 to 3': 'A - T',\r\n    '2 or 3': 'D/T',\r\n    reaction: 'R',\r\n}\r\n\r\nexport function getActionIcon(action, fallback = 'systems/pf2e/icons/actions/Empty.webp') {\r\n    if (action === null) return actionImgMap['passive']\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n    return actionImgMap[sanitized] ?? fallback\r\n}\r\n\r\nexport function getActionGlyph(action) {\r\n    if (!action && action !== 0) return ''\r\n\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n\r\n    return actionGlyphMap[sanitized] ?? ''\r\n}\r\n\r\nexport function ErrorPF2e(message) {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\nexport function getSelectedOrOwnActors(types, useOwnCharacter = true) {\r\n    const actors = canvas.tokens.controlled\r\n        .flatMap(token => (token.actor ? token.actor : []))\r\n        .filter(actor => actor.isOwner)\r\n        .filter(actor => !types || actor.isOfType(...types))\r\n\r\n    if (actors.length === 0 && game.user.character && useOwnCharacter) actors.push(game.user.character)\r\n\r\n    return actors\r\n}\r\n\r\nexport function tupleHasValue(array, value) {\r\n    return array.includes(value)\r\n}\r\n\r\nexport function objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nconst wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text, { camel = null } = {}) {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    // A hyphen by its lonesome would be wiped: return it as-is\r\n    if (text === '-') return text\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['\u2019]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\n/**\r\n * Given an array and a key function, create a map where the key is the value that\r\n * gets returned when each item is pushed into the function. Accumulate\r\n * items in an array that have the same key\r\n * @param array\r\n * @param criterion\r\n * @return\r\n */\r\nexport function groupBy(array, criterion) {\r\n    const result = new Map()\r\n    for (const elem of array) {\r\n        const key = criterion(elem)\r\n        const group = result.get(key)\r\n        if (group) {\r\n            group.push(elem)\r\n        } else {\r\n            result.set(key, [elem])\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport function sortBy(mapping) {\r\n    return (a, b) => {\r\n        const value1 = mapping(a)\r\n        const value2 = mapping(b)\r\n        return value1 < value2 ? -1 : value1 === value2 ? 0 : 1\r\n    }\r\n}\r\n\r\nexport function sum(values) {\r\n    return values.reduce((a, b) => a + b, 0)\r\n}\r\n\r\nexport function setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nexport function traitSlugToObject(trait, dictionary) {\r\n    // Look up trait labels from `npcAttackTraits` instead of `weaponTraits` in case a battle form attack is\r\n    // in use, which can include what are normally NPC-only traits\r\n    const traitObject = {\r\n        name: trait,\r\n        label: game.i18n.localize(dictionary[trait] ?? trait),\r\n    }\r\n    if (objectHasKey(CONFIG.PF2E.traitsDescriptions, trait)) {\r\n        traitObject.description = CONFIG.PF2E.traitsDescriptions[trait]\r\n    }\r\n\r\n    return traitObject\r\n}\r\n", "function isRelevantEvent(event) {\r\n    return !!event && 'ctrlKey' in event && 'metaKey' in event && 'shiftKey' in event\r\n}\r\n\r\nexport function eventToRollParams(event) {\r\n    const skipDefault = !game.user.settings.showRollDialogs\r\n    if (!isRelevantEvent(event)) return { skipDialog: skipDefault }\r\n\r\n    const params = { skipDialog: event.shiftKey ? !skipDefault : skipDefault }\r\n    if (event.ctrlKey || event.metaKey) {\r\n        params.rollMode = game.user.isGM ? 'gmroll' : 'blindroll'\r\n    }\r\n\r\n    return params\r\n}\r\n", "import { isInstanceOf } from '../module.js'\r\nimport { getChatMessageClass, getMeasuredTemplateDocumentClass, getMeasuredTemplateObjectClass } from './classes.js'\r\nimport { calculateDC } from './dc.js'\r\nimport { htmlClosest, htmlQueryAll } from './dom.js'\r\nimport { ErrorPF2e, getActionGlyph, sluggify, tupleHasValue } from './misc.js'\r\nimport { eventToRollParams } from './scripts.js'\r\n\r\nconst SAVE_TYPES = ['fortitude', 'reflex', 'will']\r\n\r\nconst inlineSelector = ['action', 'check', 'effect-area'].map(keyword => `[data-pf2-${keyword}]`).join(',')\r\n\r\nfunction injectRepostElement(links, foundryDoc) {\r\n    for (const link of links) {\r\n        if (!foundryDoc || foundryDoc.isOwner) link.classList.add('with-repost')\r\n\r\n        const repostButtons = htmlQueryAll(link, 'i[data-pf2-repost]')\r\n        if (repostButtons.length > 0) {\r\n            if (foundryDoc && !foundryDoc.isOwner) {\r\n                for (const button of repostButtons) {\r\n                    button.remove()\r\n                }\r\n                link.classList.remove('with-repost')\r\n            }\r\n            continue\r\n        }\r\n\r\n        if (foundryDoc && !foundryDoc.isOwner) continue\r\n\r\n        const newButton = document.createElement('i')\r\n        const icon = link.parentElement?.dataset?.pf2Checkgroup !== undefined ? 'fa-comment-alt-dots' : 'fa-comment-alt'\r\n        newButton.classList.add('fa-solid', icon)\r\n        newButton.dataset.pf2Repost = ''\r\n        newButton.title = game.i18n.localize('PF2E.Repost')\r\n        link.appendChild(newButton)\r\n\r\n        newButton.addEventListener('click', event => {\r\n            event.stopPropagation()\r\n            const target = event.target\r\n            if (!(target instanceof HTMLElement)) return\r\n            const parent = target?.parentElement\r\n            if (!parent) return\r\n\r\n            const document = resolveDocument(target, foundryDoc)\r\n            repostAction(parent, document)\r\n        })\r\n    }\r\n}\r\n\r\nfunction flavorDamageRolls(html, actor = null) {\r\n    for (const rollLink of htmlQueryAll(html, 'a.inline-roll[data-damage-roll]')) {\r\n        const itemId = htmlClosest(rollLink, '[data-item-id]')?.dataset.itemId\r\n        const item = actor?.items.get(itemId ?? '')\r\n        if (item) rollLink.dataset.flavor ||= item.name\r\n    }\r\n}\r\n\r\nfunction makeRepostHtml(target, defaultVisibility) {\r\n    const flavor = target.attributes.getNamedItem('data-pf2-repost-flavor')?.value ?? ''\r\n    const showDC = target.attributes.getNamedItem('data-pf2-show-dc')?.value ?? defaultVisibility\r\n    return `<span data-visibility=\"${showDC}\">${flavor}</span> ${target.outerHTML}`.trim()\r\n}\r\n\r\nfunction repostAction(target, foundryDoc = null) {\r\n    if (!['pf2Action', 'pf2Check', 'pf2EffectArea'].some(d => d in target.dataset)) {\r\n        return\r\n    }\r\n\r\n    const actor = resolveActor(foundryDoc, target)\r\n    const defaultVisibility = (actor ?? foundryDoc)?.hasPlayerOwner ? 'all' : 'gm'\r\n    const content = (() => {\r\n        if (target.parentElement?.dataset?.pf2Checkgroup !== undefined) {\r\n            const content = htmlQueryAll(target.parentElement, inlineSelector)\r\n                .map(target => makeRepostHtml(target, defaultVisibility))\r\n                .join('<br>')\r\n\r\n            return `<div data-pf2-checkgroup>${content}</div>`\r\n        } else {\r\n            return makeRepostHtml(target, defaultVisibility)\r\n        }\r\n    })()\r\n\r\n    const ChatMessagePF2e = getChatMessageClass()\r\n    const speaker = actor\r\n        ? ChatMessagePF2e.getSpeaker({ actor, token: actor.getActiveTokens(false, true).shift() })\r\n        : ChatMessagePF2e.getSpeaker()\r\n\r\n    // If the originating document is a journal entry, include its UUID as a flag. If a chat message, copy over\r\n    // the origin flag.\r\n    const message = game.messages.get(htmlClosest(target, '[data-message-id]')?.dataset.messageId ?? '')\r\n    const flags =\r\n        foundryDoc instanceof JournalEntry\r\n            ? { pf2e: { journalEntry: foundryDoc.uuid } }\r\n            : message?.flags.pf2e.origin\r\n            ? { pf2e: { origin: deepClone(message.flags.pf2e.origin) } }\r\n            : {}\r\n\r\n    ChatMessagePF2e.create({\r\n        speaker,\r\n        content,\r\n        flags,\r\n    })\r\n}\r\n\r\n/**\r\n * actions & checks use the actor directly instead of selections\r\n */\r\nexport function listenInlineRoll(html, foundryDoc) {\r\n    foundryDoc ??= resolveDocument(html, foundryDoc)\r\n\r\n    const links = htmlQueryAll(html, inlineSelector).filter(l => ['A', 'SPAN'].includes(l.nodeName))\r\n    injectRepostElement(links, foundryDoc)\r\n\r\n    flavorDamageRolls(html, foundryDoc instanceof Actor ? foundryDoc : null)\r\n\r\n    for (const link of links.filter(l => l.dataset.pf2Action)) {\r\n        const { pf2Action, pf2Glyph, pf2Variant, pf2Dc, pf2ShowDc, pf2Skill } = link.dataset\r\n        link.addEventListener('click', event => {\r\n            const action = game.pf2e.actions[pf2Action ? sluggify(pf2Action, { camel: 'dromedary' }) : '']\r\n            const visibility = pf2ShowDc ?? 'all'\r\n            if (pf2Action && action) {\r\n                action({\r\n                    event,\r\n                    glyph: pf2Glyph,\r\n                    variant: pf2Variant,\r\n                    difficultyClass: pf2Dc ? { scope: 'check', value: Number(pf2Dc) || 0, visibility } : undefined,\r\n                    skill: pf2Skill,\r\n                })\r\n            } else {\r\n                console.warn(`PF2e System | Skip executing unknown action '${pf2Action}'`)\r\n            }\r\n        })\r\n    }\r\n\r\n    for (const link of links.filter(l => l.dataset.pf2Check && !l.dataset.invalid)) {\r\n        const { pf2Check, pf2Dc, pf2Traits, pf2Label, pf2Defense, pf2Adjustment, pf2Roller, pf2RollOptions } = link.dataset\r\n\r\n        if (!pf2Check) return\r\n\r\n        link.addEventListener('click', async event => {\r\n            const parent = resolveActor(foundryDoc, link)\r\n            const actors = [parent]\r\n            const extraRollOptions = [\r\n                ...(pf2Traits?.split(',').map(o => o.trim()) ?? []),\r\n                ...(pf2RollOptions?.split(',').map(o => o.trim()) ?? []),\r\n            ]\r\n            const eventRollParams = eventToRollParams(event)\r\n\r\n            switch (pf2Check) {\r\n                case 'flat': {\r\n                    for (const actor of actors) {\r\n                        const flatCheck = new Statistic(actor, {\r\n                            label: '',\r\n                            slug: 'flat',\r\n                            modifiers: [],\r\n                            check: { type: 'flat-check' },\r\n                        })\r\n                        const dc = Number.isInteger(Number(pf2Dc)) ? { label: pf2Label, value: Number(pf2Dc) } : null\r\n                        flatCheck.roll({ ...eventRollParams, extraRollOptions, dc })\r\n                    }\r\n                    break\r\n                }\r\n                default: {\r\n                    const isSavingThrow = tupleHasValue(SAVE_TYPES, pf2Check)\r\n\r\n                    // Get actual traits for display in chat cards\r\n                    const traits = isSavingThrow ? [] : extraRollOptions.filter(t => t in CONFIG.PF2E.actionTraits) ?? []\r\n\r\n                    for (const actor of actors) {\r\n                        const statistic = (() => {\r\n                            if (pf2Check in CONFIG.PF2E.magicTraditions) {\r\n                                const bestSpellcasting =\r\n                                    actor.spellcasting\r\n                                        .filter(c => c.tradition === pf2Check)\r\n                                        .flatMap(s => s.statistic ?? [])\r\n                                        .sort((a, b) => b.check.mod - a.check.mod)\r\n                                        .shift() ?? null\r\n                                if (bestSpellcasting) return bestSpellcasting\r\n                            }\r\n                            return actor.getStatistic(pf2Check)\r\n                        })()\r\n\r\n                        if (!statistic) {\r\n                            console.warn(ErrorPF2e(`Skip rolling unknown statistic ${pf2Check}`).message)\r\n                            continue\r\n                        }\r\n\r\n                        const targetActor = pf2Defense ? game.user.targets.first()?.actor : null\r\n\r\n                        const dcValue = (() => {\r\n                            const adjustment = Number(pf2Adjustment) || 0\r\n                            if (pf2Dc === '@self.level') {\r\n                                return calculateDC(actor.level) + adjustment\r\n                            }\r\n                            return Number(pf2Dc ?? 'NaN') + adjustment\r\n                        })()\r\n\r\n                        const dc = (() => {\r\n                            if (Number.isInteger(dcValue)) {\r\n                                return { label: pf2Label, value: dcValue }\r\n                            } else if (pf2Defense) {\r\n                                const defenseStat = targetActor?.getStatistic(pf2Defense)\r\n                                return defenseStat\r\n                                    ? {\r\n                                          statistic: defenseStat.dc,\r\n                                          scope: 'check',\r\n                                          value: defenseStat.dc.value,\r\n                                      }\r\n                                    : null\r\n                            }\r\n                            return null\r\n                        })()\r\n\r\n                        // Retrieve the item if:\r\n                        // (2) The item is an action or,\r\n                        // (1) The check is a saving throw and the item is not a weapon.\r\n                        // Exclude weapons so that roll notes on strikes from incapacitation abilities continue to work.\r\n                        const item = (() => {\r\n                            const itemFromDoc =\r\n                                foundryDoc instanceof Item\r\n                                    ? foundryDoc\r\n                                    : foundryDoc instanceof ChatMessage\r\n                                    ? foundryDoc.item\r\n                                    : null\r\n\r\n                            return itemFromDoc?.isOfType('action', 'feat', 'campaignFeature') ||\r\n                                (isSavingThrow && !itemFromDoc?.isOfType('weapon'))\r\n                                ? itemFromDoc\r\n                                : null\r\n                        })()\r\n\r\n                        const args = {\r\n                            ...eventRollParams,\r\n                            extraRollOptions,\r\n                            origin: isSavingThrow && parent instanceof Actor ? parent : null,\r\n                            dc,\r\n                            target: !isSavingThrow && dc?.statistic ? targetActor : null,\r\n                            item,\r\n                            traits,\r\n                        }\r\n\r\n                        // Use a special header for checks against defenses\r\n                        const itemIsEncounterAction = !!(item?.isOfType('action', 'feat') && item.actionCost)\r\n                        if (itemIsEncounterAction && pf2Defense) {\r\n                            const subtitleLocKey =\r\n                                pf2Check in CONFIG.PF2E.magicTraditions\r\n                                    ? 'PF2E.ActionsCheck.spell'\r\n                                    : statistic.check.type === 'attack-roll'\r\n                                    ? 'PF2E.ActionsCheck.x-attack-roll'\r\n                                    : 'PF2E.ActionsCheck.x'\r\n                            args.label = await renderTemplate('systems/pf2e/templates/chat/action/header.hbs', {\r\n                                glyph: getActionGlyph(item.actionCost),\r\n                                subtitle: game.i18n.format(subtitleLocKey, { type: statistic.label }),\r\n                                title: item.name,\r\n                            })\r\n                        }\r\n\r\n                        statistic.roll(args)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const templateConversion = {\r\n        burst: 'circle',\r\n        cone: 'cone',\r\n        cube: 'rect',\r\n        emanation: 'circle',\r\n        line: 'ray',\r\n        rect: 'rect',\r\n        square: 'rect',\r\n    }\r\n\r\n    for (const link of links.filter(l => l.hasAttribute('data-pf2-effect-area'))) {\r\n        const { pf2EffectArea, pf2Distance, pf2TemplateData, pf2Traits, pf2Width } = link.dataset\r\n        link.addEventListener('click', () => {\r\n            if (typeof pf2EffectArea !== 'string') {\r\n                console.warn(`PF2e System | Could not create template'`)\r\n                return\r\n            }\r\n\r\n            const templateData = JSON.parse(pf2TemplateData ?? '{}')\r\n            templateData.distance ||= Number(pf2Distance)\r\n            templateData.fillColor ||= game.user.color\r\n            templateData.t = templateConversion[pf2EffectArea]\r\n\r\n            switch (templateData.t) {\r\n                case 'ray':\r\n                    templateData.width =\r\n                        Number(pf2Width) || CONFIG.MeasuredTemplate.defaults.width * (canvas.dimensions?.distance ?? 1)\r\n                    break\r\n                case 'cone':\r\n                    templateData.angle = CONFIG.MeasuredTemplate.defaults.angle\r\n                    break\r\n                case 'rect': {\r\n                    const distance = templateData.distance ?? 0\r\n                    templateData.distance = Math.hypot(distance, distance)\r\n                    templateData.width = distance\r\n                    templateData.direction = 45\r\n                    break\r\n                }\r\n            }\r\n\r\n            if (pf2Traits) {\r\n                templateData.flags = {\r\n                    pf2e: {\r\n                        origin: {\r\n                            traits: pf2Traits.split(','),\r\n                        },\r\n                    },\r\n                }\r\n            }\r\n\r\n            const templateDoc = new (getMeasuredTemplateDocumentClass())(templateData, { parent: canvas.scene })\r\n            new (getMeasuredTemplateObjectClass())(templateDoc).drawPreview()\r\n        })\r\n    }\r\n\r\n    for (const link of html.querySelectorAll('a[data-damage-roll]')) {\r\n        link.dataset.itemUuid = foundryDoc.uuid\r\n    }\r\n}\r\n\r\n/** If the provided document exists returns it, otherwise attempt to derive it from the sheet */\r\nfunction resolveDocument(html, foundryDoc) {\r\n    if (foundryDoc) return foundryDoc\r\n\r\n    const sheet = ui.windows[Number(html.closest('.app.sheet')?.dataset.appid)] ?? null\r\n\r\n    const document = sheet?.document\r\n    return document instanceof Actor || document instanceof JournalEntry ? document : null\r\n}\r\n\r\n/** Retrieves the actor for the given document, or the document itself if its already an actor */\r\nfunction resolveActor(foundryDoc, anchor) {\r\n    if (isInstanceOf(foundryDoc, 'ActorPF2e')) return foundryDoc\r\n    if (isInstanceOf(foundryDoc, 'ItemPF2e') || isInstanceOf(foundryDoc, 'ChatMessagePF2e')) return foundryDoc.actor\r\n\r\n    // Retrieve item/actor from anywhere via UUID\r\n    const itemUuid = anchor.dataset.itemUuid\r\n    const itemByUUID = itemUuid && !itemUuid.startsWith('Compendium.') ? fromUuidSync(itemUuid) : null\r\n    return itemByUUID instanceof Item ? itemByUUID.actor : null\r\n}\r\n", "import { getFlag, localize, setFlag } from './module.js'\r\nimport { listenInlineRoll } from './pf2e/inline-roll.js'\r\n\r\nexport const RANKS = ['U', 'T', 'E', 'M', 'L']\r\n\r\nexport async function getItemSummary(el, actor) {\r\n    const dataset = el.data()\r\n    const item = dataset.itemId ? actor.items.get(dataset.itemId) : await fromUuid(dataset.uuid)\r\n    const data = await item?.getChatData({ secrets: actor.isOwner }, dataset)\r\n    if (!data) return\r\n\r\n    const description = document.createElement('div')\r\n    description.classList.add('description')\r\n\r\n    await actor.sheet.itemRenderer.renderItemSummary(description, item, data)\r\n    listenInlineRoll(description, item)\r\n\r\n    return description\r\n}\r\n\r\nexport function addNameTooltipListeners(el) {\r\n    el.on('mouseenter', event => {\r\n        event.preventDefault()\r\n\r\n        const target = event.currentTarget.querySelector('.name')\r\n        const { width } = target.getBoundingClientRect()\r\n        if (target.scrollWidth <= Math.ceil(width)) return\r\n\r\n        const name = target.innerHTML.trim()\r\n        game.tooltip.activate(event.currentTarget, { text: name })\r\n    })\r\n\r\n    el.on('mouseleave', event => {\r\n        event.preventDefault()\r\n        game.tooltip.deactivate()\r\n    })\r\n\r\n    el.on('mousedown', event => {\r\n        game.tooltip.deactivate()\r\n    })\r\n}\r\n\r\nexport function editItem(event, actor) {\r\n    event.preventDefault()\r\n    const item = getItemFromEvent(event, actor)\r\n    item?.sheet.render(true, { focus: true })\r\n}\r\n\r\nexport async function deleteItem(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const item = getItemFromEvent(event, actor)\r\n    if (!item) return\r\n\r\n    if (event.ctrlKey) return item.delete()\r\n\r\n    new Dialog({\r\n        title: localize('deleteItem.title'),\r\n        content: `<p>${game.i18n.format('PF2E.DeleteQuestion', { name: item.name })}</p>`,\r\n        buttons: {\r\n            ok: {\r\n                icon: '<i class=\"fa-solid fa-trash\"></i>',\r\n                label: localize('deleteItem.ok'),\r\n                callback: () => item.delete(),\r\n            },\r\n            cancel: {\r\n                icon: '<i class=\"fas fa-times\"></i>',\r\n                label: localize('deleteItem.cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nexport function getItemFromEvent(event, actor) {\r\n    const { itemId } = event.currentTarget.closest('[data-item-id]').dataset\r\n    return actor.items.get(itemId)\r\n}\r\n\r\nexport function getMacros(actor) {\r\n    return actor.isOwner\r\n        ? getFlag(actor, `macros.${game.user.id}`)\r\n              ?.map(uuid => {\r\n                  const macro = fromUuidSync(uuid)\r\n                  if (!macro) return null\r\n                  return { img: macro.img, name: macro.name, uuid }\r\n              })\r\n              .filter(Boolean)\r\n        : undefined\r\n}\r\n\r\nexport function onDroppedMacro(event, actor) {\r\n    const { type, uuid } = TextEditor.getDragEventData(event.originalEvent) ?? {}\r\n    if (type !== 'Macro' || !fromUuidSync(uuid)) return\r\n\r\n    const flag = `macros.${game.user.id}`\r\n    const macros = getFlag(actor, flag)?.slice() ?? []\r\n    if (macros.includes(uuid)) return\r\n\r\n    macros.push(uuid)\r\n    setFlag(actor, flag, macros)\r\n}\r\n\r\nexport function deleteMacro(event, actor) {\r\n    const flag = `macros.${game.user.id}`\r\n    const macros = getFlag(actor, flag)?.slice()\r\n    if (!macros?.length) return\r\n\r\n    const { uuid } = event.currentTarget.closest('.macro').dataset\r\n    const index = macros.indexOf(uuid)\r\n    if (index === -1) return\r\n\r\n    macros.splice(index, 1)\r\n    setFlag(actor, flag, macros)\r\n}\r\n\r\nexport function getUniqueTarget(condition = () => true) {\r\n    const targets = game.user.targets\r\n    const target = targets.size === 1 ? targets.first() : null\r\n    return target && condition(target) ? target : null\r\n}\r\n\r\nexport function filterIn(value, filter) {\r\n    if (!filter) return true\r\n    return value.toLowerCase().includes(filter)\r\n}\r\n\r\nexport function localeCompare(a, b) {\r\n    return a.localeCompare(b, game.i18n.lang)\r\n}\r\n", "import { enrichHTML, getHud, localize } from './module.js'\r\nimport { getItemSummary } from './shared.js'\r\n\r\nexport async function popup(title, content, actor) {\r\n    const hud = getHud()\r\n    const el = hud?.element\r\n    if (!el) return\r\n\r\n    el.find('> .popup').remove()\r\n\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = `<div class=\"popup\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">${title}</div>\r\n        <a class=\"observable\" data-action=\"close-popup\"><i class=\"fas fa-times\"></i> ${localize('popup.close')}</a>\r\n    </div>\r\n</div>`\r\n\r\n    const popup = tmp.firstElementChild\r\n    if (typeof content === 'string') {\r\n        content = await enrichHTML(content, actor)\r\n        popup.insertAdjacentHTML('beforeend', content)\r\n    } else {\r\n        popup.append(content)\r\n    }\r\n\r\n    popup.querySelector('[data-action=close-popup]').addEventListener('click', () => popup.remove())\r\n\r\n    el.append(popup)\r\n    hud.lock()\r\n}\r\n\r\nexport async function showItemSummary(el, actor, title) {\r\n    title ??= el.find('.name').html()\r\n    const description = await getItemSummary(el, actor)\r\n    if (description) popup(title.trim(), description, actor)\r\n}\r\n", "/**\r\n * This one is used to create chat message for items directly picked from compendiums\r\n * So it is not technically a direct copy/paste of the system code but a slightly rearanged version\r\n */\r\n\r\nimport { getChatMessageClass } from './classes'\r\nimport { ErrorPF2e, getActionGlyph, traitSlugToObject } from './misc'\r\n\r\nexport async function unownedItemToMessage(event, item, actor, { rollMode = undefined, create = true, data = {} }) {\r\n    const template = `systems/pf2e/templates/chat/${item.type}-card.hbs`\r\n    const token = actor.token\r\n    const nearestItem = event?.currentTarget.closest('.item') ?? {}\r\n    const ChatMessagePF2e = getChatMessageClass()\r\n\r\n    const contextualData = Object.keys(data).length > 0 ? data : nearestItem.dataset || {}\r\n    const templateData = {\r\n        actor: actor,\r\n        tokenId: token ? `${token.parent?.id}.${token.id}` : null,\r\n        item,\r\n        data: await item.getChatData(undefined, contextualData),\r\n    }\r\n\r\n    const chatData = {\r\n        speaker: ChatMessagePF2e.getSpeaker({\r\n            actor: actor,\r\n            token: actor.getActiveTokens(false, true)[0] ?? null,\r\n        }),\r\n        flags: {\r\n            core: {\r\n                canPopout: true,\r\n            },\r\n            pf2e: {\r\n                origin: { uuid: item.uuid, type: item.type },\r\n            },\r\n        },\r\n        type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n    }\r\n\r\n    rollMode ??= event?.ctrlKey || event?.metaKey ? 'blindroll' : game.settings.get('core', 'rollMode')\r\n    if (['gmroll', 'blindroll'].includes(rollMode)) chatData.whisper = ChatMessagePF2e.getWhisperRecipients('GM').map(u => u.id)\r\n    if (rollMode === 'blindroll') chatData.blind = true\r\n\r\n    chatData.content = await renderTemplate(template, templateData)\r\n    return create ? ChatMessagePF2e.create(chatData, { renderSheet: false }) : new ChatMessagePF2e(chatData)\r\n}\r\n\r\nexport async function createSelfEffectMessage(item) {\r\n    if (!item.system.selfEffect) {\r\n        throw ErrorPF2e(\r\n            [\r\n                'Only actions with self-applied effects can be passed to `ActorPF2e#useAction`.',\r\n                'Support will be expanded at a later time.',\r\n            ].join(' ')\r\n        )\r\n    }\r\n\r\n    const { actor, actionCost } = item\r\n    const token = actor.getActiveTokens(true, true).shift() ?? null\r\n\r\n    const ChatMessagePF2e = getChatMessageClass()\r\n    const speaker = ChatMessagePF2e.getSpeaker({ actor, token })\r\n    const flavor = await renderTemplate('systems/pf2e/templates/chat/action/flavor.hbs', {\r\n        action: {\r\n            glyph: getActionGlyph(actionCost),\r\n            title: item.name,\r\n        },\r\n        item,\r\n        traits: item.system.traits.value.map(t => traitSlugToObject(t, CONFIG.PF2E.actionTraits)),\r\n    })\r\n\r\n    // Get a preview slice of the message\r\n    const previewLength = 100\r\n    const descriptionPreview = (() => {\r\n        if (item.actor.pack) return null\r\n        const tempDiv = document.createElement('div')\r\n        const documentTypes = [...CONST.DOCUMENT_LINK_TYPES, 'Compendium', 'UUID']\r\n        const linkPattern = new RegExp(`@(${documentTypes.join('|')})\\\\[([^#\\\\]]+)(?:#([^\\\\]]+))?](?:{([^}]+)})?`, 'g')\r\n        tempDiv.innerHTML = item.description.replace(linkPattern, (_match, ...args) => args[3])\r\n\r\n        return tempDiv.innerText.slice(0, previewLength)\r\n    })()\r\n    const description = {\r\n        full: descriptionPreview && descriptionPreview.length < previewLength ? item.description : null,\r\n        preview: descriptionPreview,\r\n    }\r\n    const content = await renderTemplate('systems/pf2e/templates/chat/action/self-effect.hbs', {\r\n        actor: item.actor,\r\n        description,\r\n    })\r\n    const flags = { pf2e: { context: { type: 'self-effect', item: item.id } } }\r\n\r\n    return ChatMessagePF2e.create({ speaker, flavor, content, flags })\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nexport async function toggleWeaponTrait({ weapon, trait, selection }) {\r\n    const current = weapon.system.traits.toggles[trait].selection\r\n    if (current === selection) return false\r\n\r\n    const item = weapon.actor?.items.get(weapon.id)\r\n    if (item?.isOfType('weapon') && item === weapon) {\r\n        await item.update({ [`system.traits.toggles.${trait}.selection`]: selection })\r\n    } else if (item?.isOfType('weapon') && weapon.altUsageType === 'melee') {\r\n        await item.update({ [`system.meleeUsage.traitToggles.${trait}`]: selection })\r\n    } else {\r\n        const rule = item?.rules.find(r => r.key === 'Strike' && !r.ignored && r.slug === weapon.slug)\r\n        await rule?.toggleTrait({ trait, selection })\r\n    }\r\n\r\n    return true\r\n}\r\n", "/**\r\n * Those are copied from the PF2e system because they are not accesible to us in the global\r\n * adjusted to be independent function\r\n */\r\n\r\nexport const DEGREE_OF_SUCCESS = {\r\n    CRITICAL_FAILURE: 0,\r\n    FAILURE: 1,\r\n    SUCCESS: 2,\r\n    CRITICAL_SUCCESS: 3,\r\n}\r\n\r\nconst DEGREE_ADJUSTMENT_AMOUNTS = {\r\n    LOWER_BY_TWO: -2,\r\n    LOWER: -1,\r\n    INCREASE: 1,\r\n    INCREASE_BY_TWO: 2,\r\n    TO_CRITICAL_FAILURE: 'criticalFailure',\r\n    TO_FAILURE: 'failure',\r\n    TO_SUCCESS: 'success',\r\n    TO_CRITICAL_SUCCESS: 'criticalSuccess',\r\n}\r\n\r\nfunction adjustDegreeOfSuccess(amount, degreeOfSuccess) {\r\n    switch (amount) {\r\n        case 'criticalFailure':\r\n            return 0\r\n        case 'failure':\r\n            return 1\r\n        case 'success':\r\n            return 2\r\n        case 'criticalSuccess':\r\n            return 3\r\n        default:\r\n            return Math.clamped(degreeOfSuccess + amount, 0, 3)\r\n    }\r\n}\r\n\r\nfunction adjustDegreeByDieValue(dieResult, degree) {\r\n    if (dieResult === 20) {\r\n        return adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.INCREASE, degree)\r\n    } else if (dieResult === 1) {\r\n        return adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.LOWER, degree)\r\n    }\r\n\r\n    return degree\r\n}\r\n\r\nexport function calculateDegreeOfSuccess(rollTotal, dieResult, dc) {\r\n    if (rollTotal - dc >= 10) {\r\n        return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.CRITICAL_SUCCESS)\r\n    } else if (dc - rollTotal >= 10) {\r\n        return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.CRITICAL_FAILURE)\r\n    } else if (rollTotal >= dc) {\r\n        return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.SUCCESS)\r\n    }\r\n\r\n    return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.FAILURE)\r\n}\r\n", "import { localize, modifier, templatePath } from '../module.js'\r\nimport { calculateDegreeOfSuccess } from '../pf2e/success.js'\r\nimport { getUniqueTarget, RANKS } from '../shared.js'\r\n\r\nconst SKILLS = ['arcana', 'crafting', 'medicine', 'nature', 'occultism', 'religion', 'society']\r\n\r\nconst SUCCESS = {\r\n    0: { icon: '<i class=\"fa-solid fa-xmark-large\"></i><i class=\"fa-solid fa-xmark-large\"></i>', name: 'criticalFailure' },\r\n    1: { icon: '<i class=\"fa-solid fa-xmark-large\"></i>', name: 'failure' },\r\n    2: { icon: '<i class=\"fa-solid fa-check\"></i>', name: 'success' },\r\n    3: { icon: '<i class=\"fa-solid fa-check\"></i><i class=\"fa-solid fa-check\"></i>', name: 'criticalSuccess' },\r\n}\r\n\r\nexport async function rollRecallKnowledges(actor) {\r\n    const roll = await new Roll('1d20').evaluate({ async: true })\r\n    const dieResult = roll.dice[0].total\r\n    const dieSuccess = dieResult === 1 ? '0' : dieResult === 20 ? '3' : ''\r\n    const lores = Object.values(actor.skills).filter(skill => skill.lore)\r\n    const target = getUniqueTarget(target => target.actor?.identificationDCs)?.actor\r\n\r\n    let data = {\r\n        dieSuccess,\r\n        dieResult,\r\n        target,\r\n        i18n: str => localize(`actions.recall-knowledge.${str}`),\r\n    }\r\n\r\n    if (target) {\r\n        const { standard, skills, lore } = target.identificationDCs\r\n\r\n        let skillsDCs = standard.progression.slice()\r\n        skillsDCs.length = 4\r\n        skillsDCs = [...skillsDCs]\r\n\r\n        const loresDCs = lore.map(({ progression }) => {\r\n            let dcs = progression\r\n            dcs.length = 6\r\n            return [...dcs]\r\n        })\r\n\r\n        data.skillsDCs = skillsDCs\r\n        data.loresDCs = loresDCs\r\n\r\n        data.skills = await Promise.all(\r\n            skills.map(slug => {\r\n                const skill = actor.skills[slug]\r\n                return rollSkill(skill, dieResult, skillsDCs)\r\n            })\r\n        )\r\n\r\n        data.lores = await Promise.all(lores.map(lore => rollSkill(lore, dieResult)))\r\n    } else {\r\n        data.skills = await Promise.all(\r\n            [...SKILLS.map(slug => actor.skills[slug]), ...lores].map(skill => rollSkill(skill, dieResult))\r\n        )\r\n    }\r\n\r\n    const flavor = await renderTemplate(templatePath('chat/recall-knowledge'), data)\r\n\r\n    ChatMessage.create({\r\n        flavor,\r\n        speaker: ChatMessage.getSpeaker({ actor }),\r\n        rollMode: CONST.DICE_ROLL_MODES.BLIND,\r\n        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\r\n    })\r\n}\r\n\r\nasync function rollSkill(skill, dieResult, dcs) {\r\n    const { rank, label } = skill\r\n\r\n    const roll = await skill.roll({\r\n        createMessage: false,\r\n        skipDialog: true,\r\n        extraRollOptions: ['action:recall-knowledge'],\r\n    })\r\n\r\n    const mod = roll.total - roll.dice[0].total\r\n    const total = dieResult + mod\r\n\r\n    return {\r\n        mod,\r\n        rank,\r\n        label,\r\n        total,\r\n        modifier: modifier(mod),\r\n        rankLabel: RANKS[rank],\r\n        checks: dcs?.map(dc => {\r\n            if (!dc) return `-`\r\n            const success = calculateDegreeOfSuccess(total, dieResult, dc)\r\n            return {\r\n                success,\r\n                icon: SUCCESS[success].icon,\r\n                title: SUCCESS[success].name,\r\n            }\r\n        }),\r\n    }\r\n}\r\n", "import { getSetting, hasFeat, localize, modifier, templatePath } from '../module.js'\r\nimport { unownedItemToMessage } from '../pf2e/item.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { filterIn, localeCompare } from '../shared.js'\r\n\r\nconst MODULE_ID = 'pf2e-token-hud'\r\n\r\nconst UNTRAINED_IMPROVISATION = 'Compendium.pf2e.feats-srd.Item.9jGaBxLUtevZYcZO'\r\n\r\nconst CROWBAR_UUIDS = new Set([\r\n    'Compendium.pf2e.equipment-srd.Item.44F1mfJei4GY8f2X',\r\n    'Compendium.pf2e.equipment-srd.Item.4kz3vhkKPUuXBpxk',\r\n])\r\nconst BON_MOT_UUID = 'Compendium.pf2e.feats-srd.Item.0GF2j54roPFIDmXf'\r\nconst NATURAL_MEDICINE_UUID = 'Compendium.pf2e.feats-srd.Item.WC4xLBGmBsdOdHWu'\r\nconst FOLLOW_THE_EXPERT_UUID = 'Compendium.pf2e.other-effects.Item.VCSpuc3Tf3XWMkd3'\r\n\r\nconst LABELS = {\r\n    initiative: 'PF2E.InitiativeLabel',\r\n    'recall-knowledge': 'PF2E.RecallKnowledge.Label',\r\n    'cover-tracks': 'PF2E.TravelSpeed.ExplorationActivities.CoverTracks',\r\n    earnIncome: `${MODULE_ID}.skills.actions.earnIncome`,\r\n    treatWounds: `${MODULE_ID}.skills.actions.treatWounds`,\r\n    'borrow-arcane-spell': `${MODULE_ID}.skills.actions.borrow-arcane-spell`,\r\n    'identify-magic': `${MODULE_ID}.skills.actions.identify-magic`,\r\n    'identify-alchemy': `${MODULE_ID}.skills.actions.identify-alchemy`,\r\n    'learn-spell': `${MODULE_ID}.skills.actions.learn-spell`,\r\n    'crafting-goods': `${MODULE_ID}.skills.actions.crafting-goods`,\r\n    'staging-performance': `${MODULE_ID}.skills.actions.staging-performance`,\r\n}\r\n\r\nconst ACTIONS_UUIDS = {\r\n    aid: 'Compendium.pf2e.actionspf2e.Item.HCl3pzVefiv9ZKQW',\r\n    'sense-motive': 'Compendium.pf2e.actionspf2e.Item.1xRFPTFtWtGJ9ELw',\r\n    seek: 'Compendium.pf2e.actionspf2e.Item.BlAOM2X92SI6HMtJ',\r\n    balance: 'Compendium.pf2e.actionspf2e.Item.M76ycLAqHoAgbcej',\r\n    escape: 'Compendium.pf2e.actionspf2e.Item.SkZAQRkLLkmBQNB9',\r\n    'follow-the-expert': 'Compendium.pf2e.actionspf2e.Item.tfa4Sh7wcxCEqL29',\r\n    'tumble-through': 'Compendium.pf2e.actionspf2e.Item.21WIfSu7Xd7uKqV8',\r\n    'maneuver-in-flight': 'Compendium.pf2e.actionspf2e.Item.Qf1ylAbdVi1rkc8M',\r\n    squeeze: 'Compendium.pf2e.actionspf2e.Item.kMcV8e5EZUxa6evt',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.Item.1OagaWtBpVXExToo',\r\n    'borrow-arcane-spell': 'Compendium.pf2e.actionspf2e.Item.OizxuPb44g3eHPFh',\r\n    'decipher-writing': 'Compendium.pf2e.actionspf2e.Item.d9gbpiQjChYDYA2L',\r\n    'identify-magic': 'Compendium.pf2e.actionspf2e.Item.eReSHVEPCsdkSL4G',\r\n    'learn-spell': 'Compendium.pf2e.actionspf2e.Item.Q5iIYCFdqJFM31GW',\r\n    climb: 'Compendium.pf2e.actionspf2e.Item.pprgrYQ1QnIDGZiy',\r\n    forceOpen: 'Compendium.pf2e.actionspf2e.Item.SjmKHgI7a5Z9JzBx',\r\n    grapple: 'Compendium.pf2e.actionspf2e.Item.PMbdMWc2QroouFGD',\r\n    highJump: 'Compendium.pf2e.actionspf2e.Item.2HJ4yuEFY1Cast4h',\r\n    longJump: 'Compendium.pf2e.actionspf2e.Item.JUvAvruz7yRQXfz2',\r\n    shove: 'Compendium.pf2e.actionspf2e.Item.7blmbDrQFNfdT731',\r\n    swim: 'Compendium.pf2e.actionspf2e.Item.c8TGiZ48ygoSPofx',\r\n    trip: 'Compendium.pf2e.actionspf2e.Item.ge56Lu1xXVFYUnLP',\r\n    disarm: 'Compendium.pf2e.actionspf2e.Item.Dt6B1slsBy8ipJu9',\r\n    repair: 'Compendium.pf2e.actionspf2e.Item.bT3skovyLUtP22ME',\r\n    craft: 'Compendium.pf2e.actionspf2e.Item.rmwa3OyhTZ2i2AHl',\r\n    'crafting-goods': '',\r\n    earnIncome: 'Compendium.pf2e.actionspf2e.Item.QyzlsLrqM0EEwd7j',\r\n    'identify-alchemy': 'Compendium.pf2e.actionspf2e.Item.Q4kdWVOf2ztIBFg1',\r\n    createADiversion: 'Compendium.pf2e.actionspf2e.Item.GkmbTGfg8KcgynOA',\r\n    impersonate: 'Compendium.pf2e.actionspf2e.Item.AJstokjdG6iDjVjE',\r\n    lie: 'Compendium.pf2e.actionspf2e.Item.ewwCglB7XOPLUz72',\r\n    feint: 'Compendium.pf2e.actionspf2e.Item.QNAVeNKtHA0EUw4X',\r\n    bonMot: BON_MOT_UUID,\r\n    gatherInformation: 'Compendium.pf2e.actionspf2e.Item.plBGdZhqq5JBl1D8',\r\n    makeAnImpression: 'Compendium.pf2e.actionspf2e.Item.OX4fy22hQgUHDr0q',\r\n    request: 'Compendium.pf2e.actionspf2e.Item.DCb62iCBrJXy0Ik6',\r\n    coerce: 'Compendium.pf2e.actionspf2e.Item.tHCqgwjtQtzNqVvd',\r\n    demoralize: 'Compendium.pf2e.actionspf2e.Item.2u915NdUyQan6uKF',\r\n    'administer-first-aid': 'Compendium.pf2e.actionspf2e.Item.MHLuKy4nQO2Z4Am1',\r\n    'treat-disease': 'Compendium.pf2e.actionspf2e.Item.TC7OcDa7JlWbqMaN',\r\n    'treat-poison': 'Compendium.pf2e.actionspf2e.Item.KjoCEEmPGTeFE4hh',\r\n    treatWounds: 'Compendium.pf2e.actionspf2e.Item.1kGNdIIhuglAjIp9',\r\n    'command-an-animal': 'Compendium.pf2e.actionspf2e.Item.q9nbyIF0PEBqMtYe',\r\n    perform: 'Compendium.pf2e.actionspf2e.Item.EEDElIyin4z60PXx',\r\n    'staging-performance': '',\r\n    subsist: 'Compendium.pf2e.actionspf2e.Item.49y9Ec4bDii8pcD3',\r\n    'create-forgery': 'Compendium.pf2e.actionspf2e.Item.ftG89SjTSa9DYDOD',\r\n    'conceal-an-object': 'Compendium.pf2e.actionspf2e.Item.qVNVSmsgpKFGk9hV',\r\n    hide: 'Compendium.pf2e.actionspf2e.Item.XMcnh4cSI32tljXa',\r\n    sneak: 'Compendium.pf2e.actionspf2e.Item.VMozDqMMuK5kpoX4',\r\n    senseDirection: 'Compendium.pf2e.actionspf2e.Item.fJImDBQfqfjKJOhk',\r\n    'cover-tracks': 'Compendium.pf2e.actionspf2e.Item.SB7cMECVtE06kByk',\r\n    track: 'Compendium.pf2e.actionspf2e.Item.EA5vuSgJfiHH7plD',\r\n    'palm-an-object': 'Compendium.pf2e.actionspf2e.Item.ijZ0DDFpMkWqaShd',\r\n    steal: 'Compendium.pf2e.actionspf2e.Item.RDXXE7wMrSPCLv5k',\r\n    'disable-device': 'Compendium.pf2e.actionspf2e.Item.cYdz2grcOcRt4jk6',\r\n    'pick-a-lock': 'Compendium.pf2e.actionspf2e.Item.2EE4aF4SZpYf0R6H',\r\n}\r\n\r\nconst DUPLICATE_SKILLS = {\r\n    escape: { slug: 'escape', cost: '1', type: 2, noSkill: true },\r\n    'recall-knowledge': { slug: 'recall-knowledge', cost: '1', secret: true },\r\n    'decipher-writing': { slug: 'decipher-writing', type: 2, trained: true },\r\n    'identify-magic': { slug: 'identify-magic', trained: true },\r\n    'learn-spell': { slug: 'learn-spell', trained: true },\r\n}\r\n\r\nconst SKILLS = [\r\n    {\r\n        slug: 'perception',\r\n        actions: [\r\n            { slug: 'sense-motive', cost: '1', type: 2 },\r\n            { slug: 'seek', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'acrobatics',\r\n        actions: [\r\n            { slug: 'balance', cost: '1', type: 2 },\r\n            // 'escape',\r\n            { slug: 'tumble-through', cost: '1', type: 2 },\r\n            { slug: 'maneuver-in-flight', cost: '1', type: 2, trained: true },\r\n            { slug: 'squeeze', type: 2, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'arcana',\r\n        actions: [\r\n            // 'recall-knowledge',\r\n            { slug: 'borrow-arcane-spell', trained: true },\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'athletics',\r\n        actions: [\r\n            { slug: 'climb', cost: '1', type: 1 },\r\n            // 'escape',\r\n            {\r\n                slug: 'forceOpen',\r\n                cost: '1',\r\n                type: 1,\r\n                map: true,\r\n                modifiers: [\r\n                    {\r\n                        condition: actor =>\r\n                            !actor.itemTypes.equipment.some(item => item.isHeld && CROWBAR_UUIDS.has(item.sourceId)),\r\n                        modifiers: [\r\n                            {\r\n                                slug: 'crowbar-missing',\r\n                                modifier: -2,\r\n                                type: 'circumstance',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            { slug: 'grapple', cost: '1', type: 1, map: true },\r\n            { slug: 'highJump', cost: '1', type: 1 },\r\n            { slug: 'longJump', cost: '1', type: 1 },\r\n            { slug: 'shove', cost: '1', type: 1, map: true },\r\n            { slug: 'swim', cost: '1', type: 1 },\r\n            { slug: 'trip', cost: '1', type: 2, map: true },\r\n            { slug: 'disarm', cost: '1', type: 1, map: true, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'crafting',\r\n        actions: [\r\n            // 'recall-knowledge',\r\n            { slug: 'repair', type: 1 },\r\n            { slug: 'craft', type: 1, trained: true },\r\n            { slug: 'crafting-goods', trained: true },\r\n            { slug: 'earnIncome', type: 3, trained: true },\r\n            { slug: 'identify-alchemy', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'deception',\r\n        actions: [\r\n            { slug: 'createADiversion', cost: '1', type: 1, variants: ['distracting-words', 'gesture', 'trick'] },\r\n            { slug: 'impersonate', type: 1 },\r\n            { slug: 'lie', type: 1 },\r\n            { slug: 'feint', cost: '1', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'diplomacy',\r\n        actions: [\r\n            {\r\n                slug: 'bonMot',\r\n                cost: '1',\r\n                type: 1,\r\n                condition: actor => hasFeat(actor, BON_MOT_UUID),\r\n            },\r\n            { slug: 'gatherInformation', type: 1 },\r\n            { slug: 'makeAnImpression', type: 1 },\r\n            { slug: 'request', cost: '1', type: 1 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'intimidation',\r\n        actions: [\r\n            { slug: 'coerce', type: 2 },\r\n            { slug: 'demoralize', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'medicine',\r\n        actions: [\r\n            {\r\n                slug: 'administer-first-aid',\r\n                cost: '2',\r\n                type: 2,\r\n                variants: ['stabilize', 'stop-bleeding'],\r\n                rollOption: 'administer-first-aid',\r\n            },\r\n            { slug: 'treat-disease', type: 2, trained: true },\r\n            { slug: 'treat-poison', cost: '1', type: 2, trained: true },\r\n            { slug: 'treatWounds', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'nature',\r\n        actions: [\r\n            { slug: 'command-an-animal', cost: '1', type: 2 }, //\r\n            // 'recall-knowledge',\r\n            'identify-magic',\r\n            'learn-spell',\r\n            { slug: 'treatWounds', type: 1, trained: true, condition: actor => hasFeat(actor, NATURAL_MEDICINE_UUID) },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'occultism',\r\n        actions: [\r\n            // 'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'performance',\r\n        actions: [\r\n            {\r\n                slug: 'perform',\r\n                cost: '1',\r\n                type: 1,\r\n                variants: ['acting', 'comedy', 'dance', 'keyboards', 'oratory', 'percussion', 'singing', 'strings', 'winds'],\r\n            },\r\n            { slug: 'staging-performance', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'religion',\r\n        actions: [\r\n            // 'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'society',\r\n        actions: [\r\n            // 'recall-knowledge', //\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'create-forgery', type: 2, trained: true },\r\n            'decipher-writing',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'stealth',\r\n        actions: [\r\n            { slug: 'conceal-an-object', cost: '1', type: 2 },\r\n            { slug: 'hide', cost: '1', type: 2 },\r\n            { slug: 'sneak', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'survival',\r\n        actions: [\r\n            { slug: 'senseDirection', type: 1 },\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'cover-tracks', trained: true },\r\n            { slug: 'track', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'thievery',\r\n        actions: [\r\n            { slug: 'palm-an-object', cost: '1', type: 2 },\r\n            { slug: 'steal', cost: '1', type: 2 },\r\n            { slug: 'disable-device', cost: '2', type: 2, trained: true },\r\n            { slug: 'pick-a-lock', cost: '2', type: 2, trained: true },\r\n        ],\r\n    },\r\n]\r\n\r\nSKILLS.forEach(skill => {\r\n    skill.actions = skill.actions.map(action => (typeof action === 'string' ? DUPLICATE_SKILLS[action] : action))\r\n\r\n    const { slug, actions } = skill\r\n    for (let action of actions) {\r\n        const unslugged = action.slug.replace(/-(.)/g, (_, c) => c.toUpperCase()).capitalize()\r\n\r\n        action.skillSlug = slug\r\n        action.uuid = ACTIONS_UUIDS[action.slug]\r\n        action.label = LABELS[action.slug] ?? `PF2E.Actions.${unslugged}.Title`\r\n\r\n        if (action.variants) {\r\n            action.variants = action.variants.map(variant => ({\r\n                slug: variant,\r\n                label: `${MODULE_ID}.skills.actions.${variant}`,\r\n            }))\r\n        } else if (action.map) {\r\n            action.variants = [\r\n                { label: 'PF2E.Roll.Normal' },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -5 },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -10 },\r\n            ]\r\n        }\r\n\r\n        action.modifiers?.forEach(({ modifiers }) => {\r\n            modifiers.forEach(modifier => {\r\n                modifier.label = `${MODULE_ID}.skills.modifiers.${modifier.slug}`\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nexport const SKILLS_SLUGS = SKILLS.map(skill => skill.slug)\r\n\r\nconst SKILLS_MAP = SKILLS.reduce((skills, { slug, actions }) => {\r\n    skills[slug] = {\r\n        slug,\r\n        actions: actions.reduce((actions, action) => {\r\n            actions[action.slug] = action\r\n            return actions\r\n        }, {}),\r\n    }\r\n    return skills\r\n}, {})\r\n\r\nexport const skillActionsUUIDS = new Set(Object.values(ACTIONS_UUIDS).filter(Boolean))\r\n\r\nexport function getSkillLabel(slug) {\r\n    return game.i18n.localize(slug === 'perception' ? 'PF2E.PerceptionLabel' : CONFIG.PF2E.skillList[slug])\r\n}\r\n\r\nexport async function getSkillsData(actor, token, filter) {\r\n    const skills = []\r\n    const isCharacter = actor.isOfType('character')\r\n\r\n    const noUntrained =\r\n        isCharacter && getSetting('untrained') && !actor.itemTypes.feat.some(feat => feat.sourceId === UNTRAINED_IMPROVISATION)\r\n\r\n    for (let i = 0; i < SKILLS.length; i++) {\r\n        const { slug, actions } = SKILLS[i]\r\n        const { label, rank, mod } = actor.getStatistic(slug)\r\n\r\n        const name = game.i18n.localize(label)\r\n        const actionsList = actions\r\n            .filter(\r\n                ({ condition, trained }) =>\r\n                    (!noUntrained || !isCharacter || !trained || actor.skills[slug].rank >= 1) && (!condition || condition(actor))\r\n            )\r\n            .map(action => ({\r\n                ...action,\r\n                name: game.i18n.localize(action.label),\r\n                variants: action.variants?.map(variant => ({\r\n                    ...variant,\r\n                    name: game.i18n.localize(variant.label),\r\n                })),\r\n            }))\r\n\r\n        const passedFilter = filterIn(name, filter)\r\n        let filteredActions = actionsList\r\n        if (!passedFilter) {\r\n            filteredActions = actionsList.filter(\r\n                ({ name, variants }) => filterIn(name, filter) || variants?.some(variant => filterIn(variant.name, filter))\r\n            )\r\n            if (!filteredActions.length) continue\r\n        }\r\n\r\n        skills[i] = {\r\n            slug,\r\n            name,\r\n            rank,\r\n            modifier: modifier(mod),\r\n            actions: passedFilter ? actionsList : filteredActions,\r\n        }\r\n    }\r\n\r\n    skills.sort((a, b) => (a.slug === 'perception' ? -1 : b.slug === 'perception' ? 1 : localeCompare(a.name, b.name)))\r\n\r\n    const lores = Object.values(actor.skills)\r\n        .filter(({ lore, label }) => lore && filterIn(label, filter))\r\n        .map(({ label, rank, mod, slug }) => ({\r\n            slug,\r\n            label,\r\n            rank,\r\n            modifier: modifier(mod),\r\n        }))\r\n\r\n    const loresModifierWidth = lores.reduce((width, lore) => (lore.modifier.length > width ? lore.modifier.length : width), 2)\r\n\r\n    return {\r\n        contentData: {\r\n            follow: localize(`skills.actions.${isFollowingAnExpert(actor) ? 'following' : 'follow'}`),\r\n            skills,\r\n            lores,\r\n            loresModifierWidth,\r\n        },\r\n        doubled: getSetting('skills-columns'),\r\n    }\r\n}\r\n\r\nexport function addSkillsListeners(el, actor, token) {\r\n    el.find('[data-action=action-description]').on('click', event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        showItemSummary(action, actor, action.find('.name').children().html())\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    el.find('[data-action=follow-the-expert]').on('click', async event => {\r\n        event.preventDefault()\r\n\r\n        const following = isFollowingAnExpert(actor)\r\n        if (following) return await following.delete()\r\n\r\n        const source = (await fromUuid(FOLLOW_THE_EXPERT_UUID)).toObject()\r\n        setProperty(source, 'flags.core.sourceId', FOLLOW_THE_EXPERT_UUID)\r\n        await actor.createEmbeddedDocuments('Item', [source])\r\n    })\r\n\r\n    el.find('[data-action=roll-skill]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slug } = event.currentTarget.dataset\r\n        actor.getStatistic(slug)?.roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=roll-action]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const { skillSlug, slug } = target.closest('.action').data()\r\n        const { variant, map } = target.data()\r\n        const variants = event.type === 'contextmenu' ? await variantsDialog(skillSlug) : undefined\r\n        if (variants !== null) rollAction({ event, actor, token, skillSlug, slug, variant, map, skill: variants?.selected })\r\n    })\r\n\r\n    el.find('[data-action=action-chat]').on('click', async event => {\r\n        event.preventDefault()\r\n        const { uuid } = event.currentTarget.closest('.action').dataset\r\n        const item = await fromUuid(uuid)\r\n        if (item) unownedItemToMessage(event, item, actor, { create: true })\r\n    })\r\n}\r\n\r\nfunction isFollowingAnExpert(actor) {\r\n    return actor.itemTypes.effect.find(effect => effect.sourceId === FOLLOW_THE_EXPERT_UUID)\r\n}\r\n\r\nexport async function variantsDialog(base, dc) {\r\n    const skills = SKILLS_SLUGS.map(slug => ({ slug, label: getSkillLabel(slug) }))\r\n\r\n    const content = await renderTemplate(templatePath('dialogs/variant'), {\r\n        i18n: str => localize(`skills.variant.${str}`),\r\n        dc,\r\n        skills,\r\n        selected: base,\r\n    })\r\n\r\n    return Dialog.prompt({\r\n        title: localize('skills.variant.title'),\r\n        label: localize('skills.variant.button'),\r\n        callback: html => ({ selected: html.find('select').val(), dc: html.find('input').val() }),\r\n        rejectClose: false,\r\n        content,\r\n        options: { width: 280 },\r\n    })\r\n}\r\n\r\nfunction rollAction({ event, actor, skillSlug, slug, variant, map, skill, token }) {\r\n    const action = SKILLS_MAP[skillSlug].actions[slug]\r\n    const type = action.type === 3 ? 3 : game.pf2e.actions.has(slug) ? 2 : 1\r\n\r\n    skill ??= action.noSkill ? undefined : skillSlug\r\n\r\n    const rollOptions = action.rollOption ? [`action:${action.rollOption}`] : undefined\r\n    if (rollOptions && variant) rollOptions.push(`action:${action.rollOption}:${variant}`)\r\n\r\n    const options = {\r\n        event,\r\n        actors: [actor],\r\n        tokens: [token],\r\n        variant,\r\n        rollOptions,\r\n        rollMode: action.secret ? 'blindroll' : 'roll',\r\n    }\r\n\r\n    options.modifiers = []\r\n\r\n    if (action.modifiers) {\r\n        for (const { condition, modifiers } of action.modifiers) {\r\n            if (condition && !condition(actor)) continue\r\n            for (const modifier of modifiers) {\r\n                options.modifiers.push(new game.pf2e.Modifier(modifier))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action.custom) {\r\n        action.custom(actor, options)\r\n        return\r\n    } else if (!type) {\r\n        actor.getStatistic(skill)?.roll(options)\r\n        return\r\n    }\r\n\r\n    // old actions\r\n    if (type === 1) {\r\n        options.skill = skill\r\n        if (map) options.modifiers.push(new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: map }))\r\n        game.pf2e.actions[slug](options)\r\n    }\r\n    // new actions\r\n    else if (type === 2) {\r\n        options.statistic = skill\r\n        if (map) options.multipleAttackPenalty = map / -5\r\n        game.pf2e.actions.get(slug).use(options)\r\n    }\r\n    // exception for old actions that only accept one actor argument\r\n    else if (type === 3) {\r\n        game.pf2e.actions[slug](actor)\r\n    }\r\n}\r\n", "import { rollRecallKnowledges } from '../actions/recall-knowledge.js'\r\nimport { localize } from '../module.js'\r\nimport { unownedItemToMessage } from '../pf2e/item.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, deleteMacro, filterIn, getMacros, onDroppedMacro } from '../shared.js'\r\nimport { variantsDialog, getSkillLabel, SKILLS_SLUGS } from './skills.js'\r\n\r\nexport const extrasUUIDS = {\r\n    aid: 'Compendium.pf2e.actionspf2e.Item.HCl3pzVefiv9ZKQW',\r\n    escape: 'Compendium.pf2e.actionspf2e.Item.SkZAQRkLLkmBQNB9',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.Item.1OagaWtBpVXExToo',\r\n    'point-out': 'Compendium.pf2e.actionspf2e.Item.sn2hIy1iIJX9Vpgj',\r\n}\r\n\r\nexport async function getExtrasData(actor, token, filter) {\r\n    const { attributes } = actor\r\n    const { initiative } = attributes\r\n\r\n    return {\r\n        contentData: {\r\n            noMacro: localize('extras.no-macro'),\r\n            macros: getMacros(actor)?.filter(macro => filterIn(macro.name, filter)),\r\n            initiative: initiative && {\r\n                selected: initiative.statistic,\r\n                skills: SKILLS_SLUGS.map(slug => ({ slug, label: getSkillLabel(slug) })),\r\n            },\r\n            hasDailies: game.modules.get('pf2e-dailies')?.active,\r\n            hasPerception: game.modules.get('pf2e-perception')?.active,\r\n            uuids: extrasUUIDS,\r\n        },\r\n    }\r\n}\r\n\r\nexport function addExtrasListeners(el, actor, token) {\r\n    function action(action, callback, type = 'click') {\r\n        el.find(`[data-action=${action}]`).on(type, event => {\r\n            event.preventDefault()\r\n            callback(event)\r\n        })\r\n    }\r\n\r\n    action('action-description', event => {\r\n        const action = $(event.currentTarget).closest('.row')\r\n        showItemSummary(action, actor)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    addNameTooltipListeners(el.find('.macro'))\r\n\r\n    async function getMacro(event) {\r\n        const { uuid } = event.currentTarget.closest('.macro').dataset\r\n        return fromUuid(uuid)\r\n    }\r\n\r\n    action('delete-macro', event => deleteMacro(event, actor))\r\n\r\n    action('edit-macro', async event => {\r\n        const macro = await getMacro(event)\r\n        macro?.sheet.render(true)\r\n    })\r\n\r\n    action('use-macro', async event => {\r\n        const macro = await getMacro(event)\r\n        macro?.execute({ actor, token })\r\n    })\r\n\r\n    el.on('drop', event => onDroppedMacro(event, actor))\r\n\r\n    action('action-chat', async event => {\r\n        const { uuid } = event.currentTarget.closest('.row').dataset\r\n        const item = await fromUuid(uuid)\r\n        if (item) unownedItemToMessage(event, item, actor, { create: true })\r\n    })\r\n\r\n    el.find('input[name], select[name]').on('change', async event => {\r\n        const target = event.currentTarget\r\n        const value = target.type === 'number' ? target.valueAsNumber : target.value\r\n        await actor.update({ [target.name]: value })\r\n    })\r\n\r\n    action('roll-initiative', async event => {\r\n        await actor.initiative.roll({ event })\r\n    })\r\n\r\n    action('prepare-dailies', event => {\r\n        const dailies = game.modules.get('pf2e-dailies')\r\n        if (dailies?.active) dailies.api.openDailiesInterface(actor)\r\n    })\r\n\r\n    action('rest-for-the-night', event => {\r\n        game.pf2e.actions.restForTheNight({ actors: [actor], tokens: [token] })\r\n    })\r\n\r\n    action('roll-recall-knowledge', event => {\r\n        rollRecallKnowledges(actor)\r\n    })\r\n\r\n    action(\r\n        'roll-aid',\r\n        async event => {\r\n            const variants = await variantsDialog(null, 20)\r\n            const note = { text: '@UUID[Compendium.pf2e.other-effects.Item.AHMUpMbaVkZ5A1KX]' }\r\n            if (variants !== null)\r\n                game.pf2e.actions.get('aid').use({\r\n                    event,\r\n                    actors: [actor],\r\n                    tokens: [token],\r\n                    statistic: variants?.selected,\r\n                    difficultyClass: { value: variants?.dc },\r\n                    notes: [note],\r\n                })\r\n        },\r\n        'click contextmenu'\r\n    )\r\n\r\n    action('roll-point-out', event => {\r\n        game.pf2e.actions.get('point-out').use({ event, actors: [actor], tokens: [token] })\r\n    })\r\n\r\n    action(\r\n        'roll-escape',\r\n        async event => {\r\n            const variants = event.type === 'contextmenu' ? await variantsDialog() : undefined\r\n            const multipleAttackPenalty = $(event.currentTarget).data().map\r\n            if (variants === null) return\r\n            game.pf2e.actions\r\n                .get('escape')\r\n                .use({ event, actors: [actor], tokens: [token], statistic: variants?.selected, multipleAttackPenalty })\r\n        },\r\n        'click contextmenu'\r\n    )\r\n}\r\n", "import { enrichHTML, getSetting, localize, templatePath } from '../module.js'\r\nimport { createSelfEffectMessage } from '../pf2e/item.js'\r\nimport { getActionIcon } from '../pf2e/misc.js'\r\nimport { toggleWeaponTrait } from '../pf2e/weapon.js'\r\nimport { popup, showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, filterIn, getItemFromEvent, localeCompare } from '../shared.js'\r\nimport { extrasUUIDS } from './extras.js'\r\nimport { skillActionsUUIDS } from './skills.js'\r\n\r\nconst SECTIONS_TYPES = {\r\n    action: { order: 0, label: 'PF2E.ActionsActionsHeader', actionLabel: 'PF2E.ActionTypeAction' },\r\n    reaction: { order: 1, label: 'PF2E.ActionTypeReaction', actionLabel: 'PF2E.ActionTypeReaction' },\r\n    free: { order: 2, label: 'PF2E.ActionTypeFree', actionLabel: 'PF2E.ActionTypeFree' },\r\n    passive: { order: 3, label: 'PF2E.ActionTypePassive', actionLabel: 'PF2E.ActionTypePassive' },\r\n}\r\n\r\nconst TOOLTIPS = {\r\n    delay: [500, 0],\r\n    position: 'top',\r\n    theme: 'crb-hover',\r\n    arrow: false,\r\n}\r\n\r\nexport async function getActionsData(actor, token, filter) {\r\n    const isCharacter = actor.isOfType('character')\r\n    const toggles = actor.synthetics.toggles.slice()\r\n    const sorting = getSetting('actions')\r\n\r\n    const stances = (await getStancesModuleApi()?.getStances(actor))?.sort((a, b) => localeCompare(a.name, b.name))\r\n\r\n    const heroActions = await getHeroActionsApi()?.getHeroActions(actor)\r\n    const heroDiff = heroActions ? actor.heroPoints.value - heroActions.length : undefined\r\n\r\n    const isOwner = actor.isOwner\r\n    const rollData = actor.getRollData()\r\n\r\n    const strikes = actor.system.actions\r\n        ? await Promise.all(\r\n              actor.system.actions.map(async (strike, index) => ({\r\n                  ...strike,\r\n                  index,\r\n                  visible: !isCharacter || strike.visible,\r\n                  damageFormula: await strike.damage?.({ getFormula: true }),\r\n                  criticalFormula: await strike.critical?.({ getFormula: true }),\r\n                  description: strike.description\r\n                      ? await enrichHTML(strike.description, actor, { rollData, isOwner })\r\n                      : undefined,\r\n                  altUsages:\r\n                      strike.altUsages &&\r\n                      (await Promise.all(\r\n                          strike.altUsages.map(async altUsage => ({\r\n                              ...altUsage,\r\n                              usage: altUsage.item.isThrown ? 'thrown' : 'melee',\r\n                              damageFormula: await altUsage.damage?.({ getFormula: true }),\r\n                              criticalFormula: await altUsage.critical?.({ getFormula: true }),\r\n                          }))\r\n                      )),\r\n              }))\r\n          )\r\n        : undefined\r\n\r\n    const blast = isCharacter ? new game.pf2e.ElementalBlast(actor) : undefined\r\n    const blasts = blast\r\n        ? (\r\n              await Promise.all(\r\n                  blast.configs.map(async config => {\r\n                      const damageType = config.damageTypes.find(damage => damage.selected)?.value ?? 'untyped'\r\n\r\n                      const formulaFor = (outcome, melee = true) => {\r\n                          return blast.damage({\r\n                              element: config.element,\r\n                              damageType,\r\n                              melee,\r\n                              outcome,\r\n                              getFormula: true,\r\n                          })\r\n                      }\r\n\r\n                      return {\r\n                          ...config,\r\n                          damageType,\r\n                          formula: {\r\n                              melee: {\r\n                                  damage: await formulaFor('success'),\r\n                                  critical: await formulaFor('criticalSuccess'),\r\n                              },\r\n                              ranged: {\r\n                                  damage: await formulaFor('success', false),\r\n                                  critical: await formulaFor('criticalSuccess', false),\r\n                              },\r\n                          },\r\n                      }\r\n                  })\r\n              )\r\n          ).sort((a, b) => localeCompare(a.label, b.label))\r\n        : undefined\r\n\r\n    let sections = {}\r\n\r\n    const actions = isCharacter ? getCharacterActions(actor, stances) : getNpcActions(actor)\r\n    for (const action of actions) {\r\n        if (!filterIn(action.name, filter)) continue\r\n        if (sorting !== 'split') {\r\n            sections.action ??= []\r\n            sections.action.push(action)\r\n        } else {\r\n            sections[action.type] ??= []\r\n            sections[action.type].push(action)\r\n        }\r\n    }\r\n\r\n    sections = Object.entries(sections).map(([type, actions]) => {\r\n        actions.forEach(action => {\r\n            action.img = getActionIcon(action.cost)\r\n            action.typeLabel = SECTIONS_TYPES[action.type].actionLabel\r\n        })\r\n\r\n        if (sorting !== 'type') {\r\n            actions.sort((a, b) => localeCompare(a.name, b.name))\r\n        } else {\r\n            actions.sort((a, b) => {\r\n                const orderA = SECTIONS_TYPES[a.type].order\r\n                const orderB = SECTIONS_TYPES[b.type].order\r\n                return orderA === orderB ? localeCompare(a.name, b.name) : orderA - orderB\r\n            })\r\n        }\r\n\r\n        return { type, actions, label: SECTIONS_TYPES[type].label }\r\n    })\r\n\r\n    if (sorting === 'split') sections.sort((a, b) => SECTIONS_TYPES[a.type].order - SECTIONS_TYPES[b.type].order)\r\n\r\n    if (toggles.length || stances?.length || strikes?.length || blasts?.length || sections.length || heroActions?.length) {\r\n        const nb =\r\n            Number((stances?.length ?? 0) > 0) +\r\n            Number((strikes?.length ?? 0) > 0) +\r\n            Number((blasts?.length ?? 0) > 0) +\r\n            sections.length +\r\n            Number((heroActions?.length ?? 0) > 0)\r\n\r\n        return {\r\n            contentData: {\r\n                toggles,\r\n                stances,\r\n                strikes,\r\n                blasts,\r\n                sections,\r\n                heroActions: heroActions && {\r\n                    actions: heroActions,\r\n                    draw: Math.max(heroDiff, 0),\r\n                    discard: Math.abs(Math.min(heroDiff, 0)),\r\n                    canTrade: heroActions.length && canTradeHeroActions(),\r\n                },\r\n                i18n: str => localize(`actions.${str}`),\r\n                variantLabel: label => label.replace(/.+\\((.+)\\)/, '$1'),\r\n                damageTypes: CONFIG.PF2E.damageTypes,\r\n            },\r\n            doubled: nb > 1 && getSetting('actions-columns'),\r\n            classes: [getSetting('actions-colors') ? 'attack-damage-system-colors' : ''],\r\n        }\r\n    }\r\n}\r\n\r\nexport function addActionsListeners(el, actor) {\r\n    addNameTooltipListeners(el.find('.toggle'))\r\n    addNameTooltipListeners(el.find('.strike'))\r\n    addNameTooltipListeners(el.find('.action'))\r\n\r\n    function action(action, callback, type = 'click') {\r\n        action = typeof action === 'string' ? [action] : action\r\n        action = action.map(x => `[data-action=${x}]`).join(', ')\r\n        return el.find(action).on(type, event => {\r\n            event.preventDefault()\r\n            callback(event)\r\n        })\r\n    }\r\n\r\n    function getStrike(event) {\r\n        const strikeEl = event.currentTarget.closest('.strike')\r\n        const strike = actor.system.actions[strikeEl.dataset.index]\r\n        if (!strike) return null\r\n\r\n        const { altUsage } = event.currentTarget.dataset\r\n        return ['melee', 'thrown'].includes(altUsage)\r\n            ? strike.altUsages?.find(s => (altUsage === 'thrown' ? s.item.isThrown : s.item.isMelee)) ?? null\r\n            : strike\r\n    }\r\n\r\n    function getUuid(event) {\r\n        return $(event.currentTarget).closest('.action').data().uuid\r\n    }\r\n\r\n    action('action-description', async event => {\r\n        const action = $(event.currentTarget).closest('.action')\r\n        showItemSummary(action, actor)\r\n    })\r\n\r\n    action('hero-action-description', async event => {\r\n        const uuid = getUuid(event)\r\n        const { description, name } = (await getHeroActionsApi()?.getHeroActionDetails(uuid)) ?? {}\r\n        if (description) popup(name, description, actor)\r\n    })\r\n\r\n    action('strike-description', async event => {\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const description = document.createElement('div')\r\n        description.classList.add('description')\r\n        // this one is a copy of the system template, there is nothing to generate it\r\n        description.innerHTML = await renderTemplate(templatePath('strike-description'), strike)\r\n\r\n        popup(strike.label, description, actor)\r\n    })\r\n\r\n    action('blast-description', async event => {\r\n        const blast = event.currentTarget.closest('.blast')\r\n        showItemSummary($(blast), actor)\r\n    })\r\n\r\n    action('trait-description', event => {\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const trait = strike.traits[index]\r\n        if (!trait) return\r\n\r\n        const description = game.i18n.localize(trait.description)\r\n        if (description) popup(game.i18n.localize(trait.label), description, actor)\r\n    })\r\n\r\n    action('stance-description', event => {\r\n        const stance = $(event.currentTarget).closest('.action')\r\n        showItemSummary(stance, actor, stance.data().itemName)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    action('use-action', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item?.isOfType('action', 'feat')) {\r\n            createSelfEffectMessage(item)\r\n        }\r\n    })\r\n\r\n    action('stance-chat', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        console.log(item)\r\n        item?.toMessage(event, { create: true })\r\n    })\r\n\r\n    action('stance-toggle', event => {\r\n        const { effectUuid } = event.currentTarget.closest('.action').dataset\r\n        getStancesModuleApi()?.toggleStance(actor, effectUuid)\r\n    })\r\n\r\n    action('action-chat', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        item?.toMessage(event, { create: true })\r\n    })\r\n\r\n    action('hero-action-chat', async event => {\r\n        await getHeroActionsApi()?.sendActionToChat(actor, getUuid(event))\r\n    })\r\n\r\n    action('draw-hero-action', async event => {\r\n        await getHeroActionsApi()?.drawHeroActions(actor)\r\n    })\r\n\r\n    action('use-hero-action', async event => {\r\n        await getHeroActionsApi()?.useHeroAction(actor, getUuid(event))\r\n    })\r\n\r\n    action('discard-hero-action', async event => {\r\n        await getHeroActionsApi()?.discardHeroActions(actor, getUuid(event))\r\n    })\r\n\r\n    action('trade-hero-action', async event => {\r\n        getHeroActionsApi()?.tradeHeroAction(actor)\r\n    })\r\n\r\n    action('strike-attack', event => {\r\n        const { index, altUsage } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n        strike?.variants[index].roll({ event, altUsage })\r\n    })\r\n\r\n    action(['strike-damage', 'strike-critical'], event => {\r\n        const { action } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n        strike?.[action === 'strike-damage' ? 'damage' : 'critical']({ event })\r\n    }).tooltipster(TOOLTIPS)\r\n\r\n    action(['toggle-roll-option', 'set-suboption'], event => {\r\n        const toggle = event.currentTarget.closest('.toggle')\r\n        const { domain, option, itemId } = toggle.dataset\r\n        const suboption = toggle.querySelector('select')?.value ?? null\r\n        actor.toggleRollOption(domain, option, itemId ?? null, toggle.querySelector('input').checked, suboption)\r\n    })\r\n\r\n    action('strike-auxiliary', event => {\r\n        if (event.currentTarget !== event.target) return\r\n\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const modular = event.currentTarget.querySelector('select')?.value ?? null\r\n\r\n        strike.auxiliaryActions?.[index]?.execute({ selection: modular })\r\n    })\r\n\r\n    action('toggle-versatile', event => {\r\n        const weapon = getStrike(event)?.item\r\n        if (!weapon) return\r\n\r\n        const target = event.currentTarget\r\n        const { value } = target.dataset\r\n        const baseType = weapon?.system.damage.damageType ?? null\r\n        const selection = target.classList.contains('selected') || value === baseType ? null : value\r\n\r\n        toggleWeaponTrait({ trait: 'versatile', weapon, selection })\r\n    }).tooltipster(TOOLTIPS)\r\n\r\n    action(\r\n        'strike-ammo',\r\n        async event => {\r\n            const weapon = getStrike(event)?.item\r\n            if (!weapon) return\r\n\r\n            const ammo = actor.items.get(event.currentTarget.value)\r\n            await weapon.update({ system: { selectedAmmoId: ammo?.id ?? null } })\r\n        },\r\n        'change'\r\n    )\r\n\r\n    if (!actor.isOfType('character')) return\r\n\r\n    const selectors = ['roll-attack', 'roll-damage', 'set-damage-type'].map(s => `[data-action=${s}]`).join(',')\r\n    el.find('.blast').each((_, blastEl) => {\r\n        const { element, damageType } = blastEl.dataset\r\n        const blast = new game.pf2e.ElementalBlast(actor)\r\n\r\n        $(blastEl)\r\n            .find(selectors)\r\n            .on('click', async event => {\r\n                event.preventDefault()\r\n\r\n                const dataset = event.currentTarget.dataset\r\n                const melee = dataset.melee === 'true'\r\n\r\n                switch (dataset.action) {\r\n                    case 'roll-attack': {\r\n                        const mapIncreases = Math.clamped(Number(dataset.mapIncreases), 0, 2)\r\n                        await blast.attack({ mapIncreases: Math.clamped(mapIncreases, 0, 2), element, damageType, melee, event })\r\n                        break\r\n                    }\r\n                    case 'roll-damage': {\r\n                        await blast.damage({ element, damageType, melee, outcome: dataset.outcome, event })\r\n                        break\r\n                    }\r\n                    case 'set-damage-type': {\r\n                        console.log(element, dataset.value)\r\n                        await blast.setDamageType({ element, damageType: dataset.value })\r\n                    }\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\nfunction getToolBeltModule(setting) {\r\n    const module = game.modules.get('pf2e-toolbelt')\r\n    return module?.active && game.settings.get('pf2e-toolbelt', setting) ? module : undefined\r\n}\r\n\r\nfunction getToolBeltApi(setting) {\r\n    return getToolBeltModule(setting)?.api\r\n}\r\n\r\nfunction getStancesModuleApi() {\r\n    const module = game.modules.get('pf2e-stances')\r\n    return module?.active ? module.api : getToolBeltApi('stances')?.stances\r\n}\r\n\r\nfunction getHeroActionsApi() {\r\n    const module = game.modules.get('pf2e-hero-actions')\r\n    return module?.active ? module.api : getToolBeltApi('hero')?.heroActions\r\n}\r\n\r\nfunction canTradeHeroActions() {\r\n    if (game.modules.get('pf2e-hero-actions')?.active) return game.settings.get('pf2e-hero-actions', 'trade')\r\n    if (getToolBeltModule('hero')) return game.settings.get('pf2e-toolbelt', 'hero-trade')\r\n}\r\n\r\nfunction getCharacterActions(actor, stances) {\r\n    console.log(stances)\r\n    const stancesUUIDS =\r\n        getStancesModuleApi()?.getActionsUUIDS?.() ??\r\n        (stances?.some(stance => stance.actionUUID) ? new Set(stances.map(({ actionUUID }) => actionUUID)) : undefined) ??\r\n        new Set()\r\n\r\n    const actionsUUIDS = new Set([...stancesUUIDS, ...skillActionsUUIDS, ...Object.values(extrasUUIDS)])\r\n    const actions = actor.itemTypes.action.filter(item => !actionsUUIDS.has(item.sourceId))\r\n    const feats = actor.itemTypes.feat.filter(item => item.actionCost && !stancesUUIDS.has(item.sourceId))\r\n\r\n    return (\r\n        [...actions, ...feats]\r\n            // TODO maybe some day i will get back to this and give them their own place\r\n            .filter(actions => {\r\n                const traits = actions.system.traits.value\r\n                return !traits.includes('downtime') && !traits.includes('exploration')\r\n            })\r\n            .map(action => {\r\n                const actionCost = action.actionCost\r\n\r\n                return {\r\n                    id: action.id,\r\n                    type: actionCost?.type ?? 'free',\r\n                    cost: actionCost,\r\n                    name: action.name,\r\n                    hasEffect: !!action.system.selfEffect,\r\n                }\r\n            })\r\n    )\r\n}\r\n\r\nfunction getNpcActions(actor) {\r\n    return actor.itemTypes.action.map(item => {\r\n        const actionCost = item.actionCost\r\n        const actionType = actionCost?.type ?? 'passive'\r\n        const hasAura =\r\n            actionType === 'passive' &&\r\n            (item.system.traits.value.includes('aura') || !!item.system.rules.find(r => r.key === 'Aura'))\r\n\r\n        return {\r\n            id: item.id,\r\n            type: actionType,\r\n            cost: actionCost,\r\n            name: item.name,\r\n            hasDeathNote: item.system.deathNote,\r\n            hasAura,\r\n            hasEffect: !!item.system.selfEffect,\r\n        }\r\n    })\r\n}\r\n", "import { enrichHTML, getSetting, modifier } from '../module.js'\r\nimport { listenInlineRoll } from '../pf2e/inline-roll.js'\r\nimport { showItemSummary } from '../popup.js'\r\n\r\nexport async function getHazardData(actor) {\r\n    const { system } = actor\r\n    const { details, traits, attributes } = system\r\n    const { stealth } = attributes\r\n    const { description, disable, routine, reset, isComplex } = details\r\n    const rollData = actor.getRollData()\r\n    const isOwner = actor.isOwner\r\n\r\n    const enrich = async str => {\r\n        return enrichHTML(str, actor, { isOwner, rollData })\r\n    }\r\n\r\n    return {\r\n        contentData: {\r\n            description: await enrich(description),\r\n            disable: await enrich(disable),\r\n            routine: await enrich(routine),\r\n            reset: await enrich(reset),\r\n            isComplex,\r\n            rarity: { value: traits.rarity, label: CONFIG.PF2E.rarityTraits[traits.rarity] },\r\n            traits: traits.value.map(trait => CONFIG.PF2E.hazardTraits[trait]),\r\n            stealth: modifier(stealth.value),\r\n        },\r\n        style: { ['--max-width']: getSetting('hazard-width') + 'em' },\r\n    }\r\n}\r\n\r\nexport function addHazardListeners(el, actor) {\r\n    el.find('[data-action=action-description]').on('click', event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        showItemSummary(action, actor)\r\n    })\r\n\r\n    listenInlineRoll(el, actor)\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    el.find('[data-action=roll-initiative').on('click', event => {\r\n        event.preventDefault()\r\n        actor.initiative.roll({ event })\r\n    })\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nimport { getChatMessageClass } from './classes.js'\r\nimport { adjustDCByRarity, calculateDC } from './dc.js'\r\n\r\nconst MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'])\r\n\r\nfunction setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nfunction getDcRarity(item) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction getMagicTraditions(item) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nfunction getItemIdentificationDCs(item, { proficiencyWithoutLevel = false, notMatchingTraditionModifier }) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\nfunction objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nexport class IdentifyItemPopup extends FormApplication {\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            id: 'identify-item',\r\n            title: game.i18n.localize('PF2E.identification.Identify'),\r\n            template: 'systems/pf2e/templates/actors/identify-item.hbs',\r\n            width: 'auto',\r\n            classes: ['identify-popup'],\r\n        }\r\n    }\r\n\r\n    get item() {\r\n        return this.object\r\n    }\r\n\r\n    async getData() {\r\n        const item = this.object\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        return {\r\n            ...(await super.getData()),\r\n            isMagic: item.isMagical,\r\n            isAlchemical: item.isAlchemical,\r\n            dcs,\r\n        }\r\n    }\r\n\r\n    activateListeners($form) {\r\n        $form.find('button.update-identification').on('click', event => {\r\n            const $button = $(event.delegateTarget)\r\n            this.submit({ updateData: { status: $button.val() } })\r\n        })\r\n        $form.find('button.post-skill-checks').on('click', async () => {\r\n            const item = this.item\r\n            const itemImg = item.system.identification.unidentified.img\r\n            const itemName = item.system.identification.unidentified.name\r\n            const identifiedName = item.system.identification.identified.name\r\n            const skills = $('div#identify-item')\r\n                .find('tr')\r\n                .toArray()\r\n                .flatMap(row => {\r\n                    const slug = row.dataset.skill\r\n                    const dc = Number(row.dataset.dc)\r\n                    if (!(Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skillList, slug))) {\r\n                        return []\r\n                    }\r\n                    const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n\r\n                    return { slug, name, dc }\r\n                })\r\n\r\n            const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n            const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n                itemImg,\r\n                itemName,\r\n                identifiedName,\r\n                // We don't want to install remeda just for that so we do our own thing\r\n                // rollOptions: R.compact(['concentrate', 'exploration', 'secret', actionOption]),\r\n                rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n                skills,\r\n            })\r\n\r\n            await getChatMessageClass().create({ user: game.user.id, content })\r\n        })\r\n    }\r\n\r\n    async _updateObject(_event, formData) {\r\n        const status = formData['status']\r\n        if (status === 'identified') {\r\n            await this.item.setIdentificationStatus(status)\r\n        }\r\n    }\r\n}\r\n", "import { getFlag, getSetting, localize, setFlag } from '../module.js'\r\nimport { IdentifyItemPopup } from '../pf2e/identify.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, deleteItem, editItem, filterIn, getItemFromEvent, localeCompare } from '../shared.js'\r\n\r\nconst ITEMS_TYPES = {\r\n    weapon: { order: 0, label: 'PF2E.InventoryWeaponsHeader' },\r\n    armor: { order: 1, label: 'PF2E.InventoryArmorHeader' },\r\n    consumable: { order: 2, label: 'PF2E.InventoryConsumablesHeader' },\r\n    equipment: { order: 3, label: 'PF2E.InventoryEquipmentHeader' },\r\n    treasure: { order: 4, label: 'PF2E.InventoryTreasureHeader' },\r\n    backpack: { order: 5, label: 'PF2E.InventoryBackpackHeader' },\r\n}\r\n\r\nexport async function getItemsData(actor, token, filter) {\r\n    const { contents, coins, totalWealth, bulk, invested } = actor.inventory\r\n    const openedContainers = getSetting('containers') || (getFlag(actor, `containers.${game.user.id}`) ?? [])\r\n    const containers = {}\r\n    let categories = {}\r\n\r\n    for (const item of contents) {\r\n        if (!ITEMS_TYPES[item.type]) continue\r\n\r\n        const containerId = item.system.containerId\r\n        if (item.type !== 'backpack' && containerId && (openedContainers === true || openedContainers.includes(containerId))) {\r\n            containers[containerId] ??= []\r\n            containers[containerId].push(item)\r\n        } else {\r\n            categories[item.type] ??= []\r\n            categories[item.type].push(item)\r\n        }\r\n    }\r\n\r\n    categories = Object.entries(categories)\r\n        .map(([type, items]) => {\r\n            items.sort((a, b) => localeCompare(a.name, b.name))\r\n            if (type === 'backpack') {\r\n                for (let i = items.length - 1; i >= 0; i--) {\r\n                    const container = items[i]\r\n                    const contained = containers[container.id]?.filter(item => filterIn(item.name, filter))\r\n                    if (!contained?.length) {\r\n                        if (!filterIn(container.name, filter)) items.splice(i, 1)\r\n                        continue\r\n                    }\r\n                    contained.sort((a, b) => localeCompare(a.name, b.name))\r\n                    items.splice(i + 1, 0, ...contained)\r\n                }\r\n            } else items = items.filter(item => filterIn(item.name, filter))\r\n            return {\r\n                type,\r\n                items,\r\n                label: ITEMS_TYPES[type].label,\r\n            }\r\n        })\r\n        .filter(category => category.items.length)\r\n        .sort((a, b) => ITEMS_TYPES[a.type].order - ITEMS_TYPES[b.type].order)\r\n\r\n    if (categories.length) {\r\n        return {\r\n            doubled: categories.length > 1 && getSetting('items-columns'),\r\n            contentData: {\r\n                canCarry: !!actor.adjustCarryType,\r\n                categories,\r\n                bulk,\r\n                containers: openedContainers,\r\n                i18n: str => localize(`items.${str}`),\r\n                invested: invested ? `${game.i18n.localize('PF2E.InvestedLabel')}: ${invested.value} / ${invested.max}` : '',\r\n                wealth: { coins: coins.goldValue, total: totalWealth.goldValue },\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nexport function addItemsListeners(el, actor, token) {\r\n    const item = el.find('.item')\r\n\r\n    addNameTooltipListeners(item)\r\n\r\n    item.find('[data-action=item-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const item = $(event.currentTarget).closest('.item')\r\n        await showItemSummary(item, actor)\r\n    })\r\n\r\n    item.find('[data-action=toggle-contains-items]').on('click', async event => {\r\n        event.preventDefault()\r\n        const flag = `containers.${game.user.id}`\r\n        const containerId = event.currentTarget.closest('.item').dataset.itemId\r\n        const containers = getFlag(actor, flag)?.slice() ?? []\r\n        const index = containers.indexOf(containerId)\r\n        if (index === -1) containers.push(containerId)\r\n        else containers.splice(index, 1)\r\n        await setFlag(actor, flag, containers)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    item.find('[data-action=item-chat]').on('click', async event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        item?.toMessage(event, { create: true })\r\n    })\r\n\r\n    item.on('dragstart', event => {\r\n        const target = event.target.closest('.item')\r\n        const { itemType, uuid } = target.dataset\r\n\r\n        const img = new Image()\r\n        img.src = target.querySelector('.item-img img').src\r\n        img.style.width = '32px'\r\n        img.style.height = '32px'\r\n        img.style.borderRadius = '4px'\r\n        img.style.position = 'absolute'\r\n        img.style.left = '-1000px'\r\n        document.body.append(img)\r\n\r\n        event.originalEvent.dataTransfer.setDragImage(img, 16, 16)\r\n        event.originalEvent.dataTransfer.setData(\r\n            'text/plain',\r\n            JSON.stringify({ type: 'Item', fromInventory: true, itemType, uuid })\r\n        )\r\n\r\n        target.addEventListener('dragend', () => img.remove(), { once: true })\r\n    })\r\n\r\n    el.find('.quantity input').on('change', async event => {\r\n        await getItemFromEvent(event, actor)?.update({ 'system.quantity': event.currentTarget.valueAsNumber })\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-invest]').on('click', event => {\r\n        event.preventDefault()\r\n        const { itemId } = event.currentTarget.closest('.item').dataset\r\n        actor.toggleInvested(itemId)\r\n    })\r\n\r\n    el.find('[data-action=repair-item]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item) game.pf2e.actions.repair({ item, actors: [actor], tokens: [token] })\r\n    })\r\n\r\n    el.find('[data-action=toggle-identified]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n        if (item.isIdentified) item.setIdentificationStatus('unidentified')\r\n        else new IdentifyItemPopup(item).render(true)\r\n    })\r\n\r\n    el.find('[data-action=edit-item]').on('click', event => {\r\n        event.preventDefault()\r\n        editItem(event, actor)\r\n    })\r\n\r\n    el.find('[data-action=delete-item]').on('click', event => {\r\n        event.preventDefault()\r\n        deleteItem(event, actor)\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-worn').tooltipster({\r\n        animation: null,\r\n        updateAnimation: null,\r\n        animationDuration: 0,\r\n        delay: [0, 0],\r\n        trigger: 'click',\r\n        contentAsHTML: true,\r\n        interactive: true,\r\n        arrow: false,\r\n        side: ['bottom', 'top'],\r\n        theme: 'crb-hover',\r\n        minWidth: 120,\r\n        content: '',\r\n        functionBefore: async function (tooltipster, { event, origin }) {\r\n            const item = getItemFromEvent(event, actor)\r\n            if (!item) return\r\n\r\n            const tmp = document.createElement('div')\r\n            tmp.innerHTML = await renderTemplate('systems/pf2e/templates/actors/partials/carry-type.hbs', { item })\r\n\r\n            const content = tmp.children[1]\r\n            const $content = $(content)\r\n\r\n            $content.find('[data-carry-type]').on('click', async event => {\r\n                const current = item.system.equipped\r\n                let { carryType, handsHeld = 0, inSlot } = $(event.currentTarget).data()\r\n                inSlot = inSlot === 'true'\r\n\r\n                if (\r\n                    carryType !== current.carryType ||\r\n                    inSlot !== current.inSlot ||\r\n                    (carryType === 'held' && handsHeld !== current.handsHeld)\r\n                ) {\r\n                    await actor.adjustCarryType(item, { carryType, handsHeld, inSlot })\r\n                }\r\n            })\r\n\r\n            if (item.type !== 'backpack') {\r\n                const containers = actor.itemTypes.backpack.filter(container => container.isIdentified)\r\n\r\n                if (containers.length) {\r\n                    let rows = ''\r\n                    for (const container of containers) {\r\n                        rows += '<li><a class=\"item-control item-location-option'\r\n                        if (container === item.container) rows += ' selected'\r\n                        rows += `\" data-action=\"send-to-container\" data-container-id=\"${container.id}\">`\r\n                        rows += `<i class=\"fas fa-box\"></i>${container.name}</a></li>`\r\n                    }\r\n\r\n                    $content.find('ul').append(rows)\r\n                    $content.find('[data-action=send-to-container]').on('click', async event => {\r\n                        const { containerId } = event.currentTarget.dataset\r\n                        if (!actor.items.has(containerId)) return\r\n                        tooltipster.close()\r\n                        await item.update({ 'system.containerId': containerId })\r\n                    })\r\n                }\r\n            }\r\n\r\n            tooltipster.content(content)\r\n        },\r\n    })\r\n}\r\n", "import { getSetting, localize, modifier, MODULE_ID, templatePath } from '../module.js'\r\nimport { eventToRollParams } from '../pf2e/scripts.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, filterIn, getItemFromEvent, localeCompare } from '../shared.js'\r\n\r\nexport async function getSpellsData(actor, token, filter) {\r\n    const focusPool = actor.system.resources.focus ?? { value: 0, max: 0 }\r\n    const entries = actor.spellcasting.regular\r\n    const showTradition = getSetting('tradition')\r\n    const stavesActive = game.modules.get('pf2e-staves')?.active\r\n    const spells = []\r\n    const focuses = []\r\n    let hasFocusCantrips = false\r\n\r\n    await Promise.all(\r\n        entries.map(async entry => {\r\n            const entryId = entry.id\r\n            const tradition = showTradition && entry.statistic.label[0]\r\n            const data = await entry.getSheetData()\r\n            const isFocus = data.isFocusPool\r\n            const isCharge = entry.system?.prepared?.value === 'charge'\r\n            const isStaff = getProperty(entry, 'flags.pf2e-staves.staveID') !== undefined\r\n            const charges = { value: getProperty(entry, 'flags.pf2e-staves.charges') ?? 0 }\r\n\r\n            for (const slot of data.levels) {\r\n                if (!slot.active.length || slot.uses?.max === 0) continue\r\n\r\n                const slotSpells = []\r\n                const isCantrip = slot.isCantrip\r\n                const actives = slot.active.filter(x => x && x.uses?.max !== 0)\r\n\r\n                for (let slotId = 0; slotId < actives.length; slotId++) {\r\n                    const { spell, expended, virtual, uses, castLevel } = actives[slotId]\r\n                    if (!filterIn(spell.name, filter)) continue\r\n\r\n                    slotSpells.push({\r\n                        name: spell.name,\r\n                        img: spell.img,\r\n                        tradition,\r\n                        castLevel: castLevel ?? spell.level,\r\n                        slotId,\r\n                        entryId,\r\n                        itemId: spell.id,\r\n                        inputId: data.isInnate ? spell.id : data.id,\r\n                        inputPath: isCharge\r\n                            ? 'flags.pf2e-staves.charges'\r\n                            : data.isInnate\r\n                            ? 'system.location.uses.value'\r\n                            : `system.slots.slot${slot.level}.value`,\r\n                        isCharge,\r\n                        isActiveCharge: isCharge && stavesActive,\r\n                        isVirtual: virtual,\r\n                        isInnate: data.isInnate,\r\n                        isCantrip: isCantrip,\r\n                        isFocus,\r\n                        isPrepared: data.isPrepared,\r\n                        isSpontaneous: data.isSpontaneous || data.isFlexible,\r\n                        slotLevel: slot.level,\r\n                        uses: uses ?? (isCharge ? charges : slot.uses),\r\n                        expended: expended ?? (isFocus && !isCantrip ? focusPool.value <= 0 : false),\r\n                        action: spell.system.time.value,\r\n                        type: isCharge\r\n                            ? isStaff\r\n                                ? `${MODULE_ID}.spells.staff`\r\n                                : `${MODULE_ID}.spells.charges`\r\n                            : data.isInnate\r\n                            ? 'PF2E.PreparationTypeInnate'\r\n                            : data.isSpontaneous\r\n                            ? 'PF2E.PreparationTypeSpontaneous'\r\n                            : data.isFlexible\r\n                            ? 'PF2E.SpellFlexibleLabel'\r\n                            : isFocus\r\n                            ? 'PF2E.SpellFocusLabel'\r\n                            : 'PF2E.SpellPreparedLabel',\r\n                        order: isCharge ? 0 : data.isPrepared ? 1 : isFocus ? 2 : data.isInnate ? 3 : data.isSpontaneous ? 4 : 5,\r\n                    })\r\n                }\r\n\r\n                if (slotSpells.length) {\r\n                    if (isFocus) {\r\n                        if (isCantrip) hasFocusCantrips = true\r\n                        else {\r\n                            focuses.push(...slotSpells)\r\n                            continue\r\n                        }\r\n                    }\r\n\r\n                    spells[slot.level] ??= []\r\n                    spells[slot.level].push(...slotSpells)\r\n                }\r\n            }\r\n        })\r\n    )\r\n\r\n    if (spells.length) {\r\n        const sort = getSetting('spells')\r\n            ? (a, b) => (a.order === b.order ? localeCompare(a.name, b.name) : a.order - b.order)\r\n            : (a, b) => localeCompare(a.name, b.name)\r\n        spells.forEach(entry => entry.sort(sort))\r\n    }\r\n\r\n    if (focuses.length) {\r\n        focuses.sort((a, b) => localeCompare(a.name, b.name))\r\n        spells[12] = focuses\r\n        hasFocusCantrips = false\r\n    }\r\n\r\n    const ritualData = await actor.spellcasting.ritual?.getSheetData()\r\n    const rituals = ritualData?.levels.flatMap((slot, slotId) =>\r\n        slot.active\r\n            .map(({ spell }) => {\r\n                if (!filterIn(spell.name, filter)) return\r\n                return {\r\n                    name: spell.name,\r\n                    img: spell.img,\r\n                    slotId,\r\n                    itemId: spell.id,\r\n                    level: spell.level,\r\n                    time: spell.system.time.value,\r\n                }\r\n            })\r\n            .filter(Boolean)\r\n    )\r\n\r\n    if (spells.length || rituals?.length) {\r\n        const attacks = getSpellAttacks(actor)\r\n\r\n        const nb = spells.length + Number((rituals?.length ?? 0) > 0)\r\n        return {\r\n            contentData: {\r\n                spells,\r\n                rituals,\r\n                focusPool,\r\n                stavesActive,\r\n                hasFocusCantrips,\r\n                attackMod: hasSingleSpellAttack(attacks) ? attacks[0].mod : null,\r\n            },\r\n            doubled: nb > 1 && getSetting('spells-columns'),\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSpellAttacks(actor) {\r\n    return actor.spellcasting\r\n        .filter(entry => entry.statistic)\r\n        .map(({ statistic, name, id }) => ({ name, id, mod: modifier(statistic.mod), statistic }))\r\n}\r\n\r\nfunction hasSingleSpellAttack(attacks) {\r\n    return new Set(attacks.map(({ mod }) => mod)).size === 1\r\n}\r\n\r\nexport function addSpellsListeners(el, actor, token) {\r\n    addNameTooltipListeners(el.find('.spell'))\r\n\r\n    el.find('[data-action=spell-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const spell = $(event.currentTarget).closest('.spell')\r\n        showItemSummary(spell, actor)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    el.find('[data-action=spell-attack]').on('click', async event => {\r\n        event.preventDefault()\r\n\r\n        const attacks = getSpellAttacks(actor)\r\n        if (!attacks.length) return\r\n\r\n        let statistic\r\n        if (!hasSingleSpellAttack(attacks)) {\r\n            const id = await Dialog.wait({\r\n                buttons: {\r\n                    ok: {\r\n                        icon: '<i class=\"fa-solid fa-dice-d20\"></i>',\r\n                        label: localize('spells.attacks.ok'),\r\n                        callback: html => html.find('input:checked').val(),\r\n                    },\r\n                },\r\n                title: localize('spells.attacks.title'),\r\n                content: await renderTemplate(templatePath('dialogs/spell-attacks'), { attacks }),\r\n                close: () => null,\r\n            })\r\n\r\n            if (id) statistic = actor.items.get(id)?.statistic\r\n        } else {\r\n            statistic = attacks[0].statistic\r\n        }\r\n\r\n        const rollParams = eventToRollParams(event)\r\n        const { map } = event.currentTarget.dataset\r\n        if (map) {\r\n            rollParams.modifiers = [new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: Number(map) })]\r\n        }\r\n\r\n        statistic?.check.roll(rollParams)\r\n    })\r\n\r\n    el.find('[data-action=spell-chat]').on('click', async event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        item?.toMessage(event, { create: true })\r\n    })\r\n\r\n    el.find('[data-action=toggle-pips]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const change = event.type === 'click' ? 1 : -1\r\n        const points = (actor.system.resources.focus?.value ?? 0) + change\r\n        await actor.update({ 'system.resources.focus.value': points })\r\n    })\r\n\r\n    el.find('[data-action=toggle-prepared]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slotLevel, slotId, entryId, expended } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId)\r\n        collection?.setSlotExpendedState(slotLevel ?? 0, slotId ?? 0, expended !== true)\r\n    })\r\n\r\n    el.find('[data-action=cast-spell]').on('click', event => {\r\n        event.preventDefault()\r\n\r\n        const { slotLevel, slotId, entryId, itemId } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId, { strict: true })\r\n        if (!collection) return\r\n\r\n        const spell = collection.get(itemId, { strict: true })\r\n        if (!spell) return\r\n\r\n        collection.entry.cast(spell, { slot: slotId, level: slotLevel })\r\n    })\r\n\r\n    el.find('[data-input-path]').on('change', async event => {\r\n        const { inputPath, entryId } = $(event.currentTarget).data()\r\n        const value = event.currentTarget.valueAsNumber\r\n        await actor.updateEmbeddedDocuments('Item', [{ _id: entryId, [inputPath]: value }])\r\n    })\r\n}\r\n", "import { useResolve } from './actions/use-resolve.js'\r\nimport { enrichHTML, getFlag, getSetting, localize, modifier, MODULE_ID, setFlag, templatePath } from './module.js'\r\nimport { getChatMessageClass, getDamageRollClass } from './pf2e/classes.js'\r\nimport { popup } from './popup.js'\r\nimport { getUniqueTarget, localeCompare, RANKS } from './shared.js'\r\nimport { addActionsListeners, getActionsData } from './sidebars/actions.js'\r\nimport { addExtrasListeners, getExtrasData } from './sidebars/extras.js'\r\nimport { addHazardListeners, getHazardData } from './sidebars/hazard.js'\r\nimport { addItemsListeners, getItemsData } from './sidebars/items.js'\r\nimport { addSkillsListeners, getSkillsData } from './sidebars/skills.js'\r\nimport { addSpellsListeners, getSpellsData } from './sidebars/spells.js'\r\n\r\nconst COVER_UUID = 'Compendium.pf2e.other-effects.Item.I9lfZUiCwMiGogVi'\r\n\r\nconst POSITIONS = {\r\n    left: ['left', 'right', 'top', 'bottom'],\r\n    right: ['right', 'left', 'top', 'bottom'],\r\n    top: ['top', 'bottom', 'left', 'right'],\r\n    bottom: ['bottom', 'top', 'left', 'right'],\r\n}\r\n\r\nconst ALLIANCES = {\r\n    opposition: { icon: 'fa-solid fa-face-angry-horns', label: 'PF2E.Actor.Creature.Alliance.Opposition' },\r\n    party: { icon: 'fa-solid fa-face-smile-halo', label: 'PF2E.Actor.Creature.Alliance.Party' },\r\n    neutral: { icon: 'fa-solid fa-face-meh', label: 'PF2E.Actor.Creature.Alliance.Neutral' },\r\n}\r\n\r\nconst SPEEDS = [\r\n    { type: 'land', icon: 'fa-solid fa-shoe-prints' },\r\n    { type: 'burrow', icon: 'fa-solid fa-chevrons-down' },\r\n    { type: 'climb', icon: 'fa-solid fa-spider' },\r\n    { type: 'fly', icon: 'fa-solid fa-feather' },\r\n    { type: 'swim', icon: 'fa-solid fa-person-swimming' },\r\n]\r\n\r\nconst SIDEBARS = {\r\n    actions: { getData: getActionsData, addListeners: addActionsListeners },\r\n    items: { getData: getItemsData, addListeners: addItemsListeners },\r\n    spells: { getData: getSpellsData, addListeners: addSpellsListeners },\r\n    skills: { getData: getSkillsData, addListeners: addSkillsListeners },\r\n    extras: { getData: getExtrasData, addListeners: addExtrasListeners },\r\n    hazard: { getData: getHazardData, addListeners: addHazardListeners },\r\n}\r\n\r\nconst SAVES = {\r\n    fortitude: { icon: 'fa-solid fa-chess-rook', label: 'PF2E.SavesFortitude' },\r\n    reflex: { icon: 'fa-solid fa-person-running', label: 'PF2E.SavesReflex' },\r\n    will: { icon: 'fa-solid fa-brain', label: 'PF2E.SavesWill' },\r\n}\r\n\r\nconst SKILLS = {\r\n    perception: { icon: 'fa-solid fa-eye', label: 'PF2E.PerceptionLabel' },\r\n    stealth: { icon: 'fa-duotone fa-eye-slash', label: 'PF2E.SkillStealth' },\r\n    athletics: { icon: 'fa-solid fa-hand-fist', label: 'PF2E.SkillAthletics' },\r\n}\r\n\r\nexport class HUD extends Application {\r\n    #token = null\r\n    #lastToken = null\r\n    #hoveredToken = null\r\n    #delay = null\r\n    #holding = false\r\n    #closing = null\r\n    #mousedown = [false, false, false]\r\n    #lock = false\r\n    #softLock = false\r\n    #isObserved = false\r\n    #hoverTokenHandler\r\n    #mouseeventHandler\r\n    #deleteTokenHandler\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.forceClose = () => this.close({ force: true })\r\n\r\n        this.#hoverTokenHandler = (token, hover) => {\r\n            if (hover) this.#tokenEnter(token)\r\n            else this.#tokenLeave(token)\r\n        }\r\n\r\n        this.#mouseeventHandler = event => {\r\n            const button = event.button\r\n            if (![0, 2].includes(button)) return\r\n\r\n            if (event.type === 'mouseup') {\r\n                this.#mousedown[button] = false\r\n                return\r\n            }\r\n\r\n            this.#mousedown[button] = true\r\n\r\n            const target = event.target\r\n            const el = this.element[0]\r\n\r\n            if (el) {\r\n                const popup = el.querySelector('.popup')\r\n\r\n                if (popup && !popup.contains(target)) {\r\n                    if (!el.querySelector('.sidebar')) this.forceClose()\r\n                    else return popup.remove()\r\n                }\r\n\r\n                if (target.closest('canvas')) this.forceClose()\r\n\r\n                return\r\n            } else this.#cancelDelay()\r\n\r\n            this.unlock(true)\r\n        }\r\n\r\n        this.#deleteTokenHandler = token => {\r\n            if (this.#token && token.id === this.#token.id) this.forceClose()\r\n        }\r\n\r\n        window.addEventListener('mousedown', this.#mouseeventHandler)\r\n        window.addEventListener('mouseup', this.#mouseeventHandler)\r\n\r\n        Hooks.on('hoverToken', this.#hoverTokenHandler)\r\n        Hooks.on('deleteToken', this.#deleteTokenHandler)\r\n        Hooks.on('canvasPan', this.forceClose)\r\n    }\r\n\r\n    setToken(token, isObserved) {\r\n        if (token !== this.#token) {\r\n            delete this.#token?.actor?.apps[this.appId]\r\n\r\n            this.#token = token\r\n            const actor = token?.actor\r\n            if (actor) actor.apps[this.appId] = this\r\n        }\r\n        this.#isObserved = isObserved ?? this.#checkIfObserved(token)\r\n    }\r\n\r\n    setHolding(held) {\r\n        const holding = getSetting('use-holding')\r\n        if (holding === 'none') return\r\n\r\n        this.#holding = held\r\n\r\n        if (this.#softLock || this.#lock) return\r\n\r\n        if (held) {\r\n            if (!this.#hoveredToken) return\r\n            const isObserved = this.#checkIfObserved(this.#hoveredToken)\r\n            if (holding === 'half' && !game.user.isGM && !isObserved) {\r\n                this.#cancelDelay()\r\n                this.render()\r\n                return\r\n            }\r\n            this.setToken(this.#hoveredToken, isObserved)\r\n            this.render()\r\n        } else {\r\n            if (holding === 'all') this.close()\r\n            else if (game.user.isGM) {\r\n                this.setToken(this.#hoveredToken)\r\n                this.render()\r\n            } else if (this.#isObserved) this.close()\r\n        }\r\n    }\r\n\r\n    #checkIfObserved(token) {\r\n        const actor = token?.actor\r\n        if (!actor) return false\r\n\r\n        let isObserved\r\n        const isParty = actor.system.details.alliance === 'party'\r\n\r\n        if (game.user.isGM && getSetting('use-holding') === 'half' && !this.#holding) isObserved = false\r\n        else if (actor.isOfType('familiar') && !actor.master) isObserved = false\r\n        else isObserved = token.isOwner || (getSetting('observer') && (token.observer || (isParty && getSetting('party'))))\r\n\r\n        return isObserved\r\n    }\r\n\r\n    #tokenEnter(token) {\r\n        if ($(window.document).find(':hover').filter('#combat-popout, #sidebar, #mini-tracker, [id^=pf2e-perception]').length)\r\n            return\r\n\r\n        const actor = token.actor\r\n        if (!actor || actor.isOfType('loot', 'party')) return\r\n\r\n        this.#hoveredToken = token\r\n\r\n        if (token !== this.#lastToken && !this.#lock) this.close()\r\n\r\n        if (this.mousedown || this.#lock || this.#softLock || token === this.#token) return\r\n\r\n        const holding = getSetting('use-holding')\r\n        const isObserved = this.#checkIfObserved(token)\r\n        if (holding !== 'none' && !this.#holding && (holding === 'all' || isObserved)) return\r\n\r\n        this.#cancelClosing(true)\r\n        this.setToken(token, isObserved)\r\n\r\n        if (holding === 'none' || !this.#holding) this.renderWithDelay()\r\n        else this.render()\r\n    }\r\n\r\n    #tokenLeave(token) {\r\n        this.#hoveredToken = null\r\n\r\n        if (this.mousedown || this.#lock || this.#softLock) return\r\n\r\n        this.#closing = setTimeout(() => {\r\n            this.#closing = null\r\n            if (this.#softLock || this.#lock) return\r\n            this.close()\r\n        }, 10)\r\n    }\r\n\r\n    renderWithDelay() {\r\n        let delay = getSetting('delay')\r\n        if (delay) {\r\n            if (delay < 10) delay = 10\r\n            this.#delay = setTimeout(() => {\r\n                this.#delay = null\r\n                this.render()\r\n            }, delay)\r\n        } else this.render()\r\n    }\r\n\r\n    #cancelClosing(close) {\r\n        if (this.#closing === null) return\r\n        clearTimeout(this.#closing)\r\n        this.#closing = null\r\n        if (close) this.close()\r\n    }\r\n\r\n    #cancelDelay() {\r\n        if (this.#delay === null) return\r\n        clearTimeout(this.#delay)\r\n        this.#delay = null\r\n    }\r\n\r\n    delete() {\r\n        this.forceClose()\r\n\r\n        window.removeEventListener('mousedown', this.#mouseeventHandler)\r\n        window.removeEventListener('mouseup', this.#mouseeventHandler)\r\n\r\n        Hooks.off('hoverToken', this.#hoverTokenHandler)\r\n        Hooks.off('deleteToken', this.#deleteTokenHandler)\r\n        Hooks.off('canvasPan', this.forceClose)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('hud'),\r\n        })\r\n    }\r\n\r\n    get mousedown() {\r\n        return this.#mousedown[0] || this.#mousedown[2]\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token?.actor\r\n    }\r\n\r\n    get hasCover() {\r\n        return this.actor?.itemTypes.effect.find(effect => effect.flags.core?.sourceId === COVER_UUID)\r\n    }\r\n\r\n    get isCharacter() {\r\n        return this.actor?.isOfType('character')\r\n    }\r\n\r\n    get sidebar() {\r\n        return this.element?.find('> .sidebar') ?? []\r\n    }\r\n\r\n    get popup() {\r\n        return this.element?.find('> .popup') ?? []\r\n    }\r\n\r\n    get inner() {\r\n        return this.element?.find('> .inner') ?? []\r\n    }\r\n\r\n    async getData() {\r\n        const token = this.#token\r\n        const actor = this.#token?.actor\r\n        if (!actor) return {}\r\n\r\n        let distance = null\r\n        const savesSetting = getSetting('saves')\r\n        const othersSetting = getSetting('others')\r\n        const isCharacter = this.isCharacter\r\n        const { attributes } = actor\r\n        const { hp, sp = { max: 0, value: 0 }, ac } = attributes\r\n        const useStamina = game.settings.get('pf2e', 'staminaVariant')\r\n        const showDistance = getSetting('distance')\r\n        const fontSize = getSetting('scale')\r\n\r\n        if (showDistance === 'all' || (showDistance === 'self' && this.#isObserved)) {\r\n            const unitSplit = getSetting('unit').split(',')\r\n            const multiplier = Number(unitSplit[0]?.trim()) || 1\r\n            const unit = unitSplit[1]?.trim() || game.system.gridUnits\r\n            const decimals = Number(unitSplit[2]?.trim()) || 0\r\n            const selected = canvas.tokens.controlled\r\n\r\n            let isTarget = false\r\n            let target = selected.length === 1 ? selected[0] : null\r\n\r\n            if (!target || target === token) {\r\n                target = getUniqueTarget()\r\n                isTarget = true\r\n            }\r\n\r\n            if (target && target !== token) {\r\n                distance = {\r\n                    unit,\r\n                    icon: isTarget ? '<i class=\"fa-solid fa-crosshairs-simple\"></i>' : '<i class=\"fa-solid fa-expand\"></i>',\r\n                    range: (token.distanceTo(target) * multiplier).toFixed(decimals),\r\n                }\r\n            }\r\n        }\r\n\r\n        let status\r\n        if (!this.#isObserved || getSetting('see-status')) {\r\n            const statuses = getSetting('status')\r\n                .split(',')\r\n                .map(x => x.trim())\r\n                .filter(Boolean)\r\n\r\n            if (statuses.length && hp.max) {\r\n                const max = hp.max + (useStamina ? sp.max : 0)\r\n                const current = hp.value + (useStamina ? sp.value : 0)\r\n                const ratio = Math.clamped(current / max, 0, 1)\r\n                const pick = (() => {\r\n                    const length = statuses.length\r\n                    if (getSetting('last-status')) {\r\n                        if (ratio === 1) return length\r\n                        return Math.ceil(ratio * (length - 1))\r\n                    }\r\n                    return Math.ceil(ratio * length)\r\n                })()\r\n\r\n                status = {\r\n                    hue: ratio * ratio * 122 + 3,\r\n                    value: pick === 0 ? game.i18n.localize('EFFECT.StatusDead') : statuses.at(pick - 1),\r\n                }\r\n            }\r\n        }\r\n\r\n        let sharedData = {\r\n            status,\r\n            distance,\r\n            fontSize,\r\n            tokenId: token.id,\r\n            type: actor.isOfType('creature') ? 'creature' : actor.type,\r\n        }\r\n\r\n        if (!this.#isObserved || (actor.isOfType('familiar') && !actor.master)) return sharedData\r\n\r\n        const { level, saves, isOwner, system, itemTypes } = actor\r\n        const { resistances, weaknesses, immunities } = attributes\r\n\r\n        sharedData = {\r\n            ...sharedData,\r\n            isOwner,\r\n            isObserver: this.#isObserved,\r\n            name: token.document.name,\r\n            hp,\r\n            ac: ac.value,\r\n            level,\r\n            hasActions: itemTypes.action.length || system.actions?.filter(action => action.visible !== false).length,\r\n        }\r\n\r\n        const showRanks = getSetting('ranks')\r\n\r\n        function getStatistic(stat, type, stats) {\r\n            const slug = stat.slug\r\n            const value = type === 'bonus' ? modifier(stat.mod) : stat.dc.value\r\n            return { slug, value, label: stats[slug].label, icon: stats[slug].icon, rank: showRanks && RANKS[stat.rank] }\r\n        }\r\n\r\n        function toIWR(category, header) {\r\n            if (!category.length) return ''\r\n            const rows = category.map(x => toInfo(x.label.replace('-', ' ').titleCase())).join('')\r\n            if (!header) return rows\r\n            return `<li>${game.i18n.localize(header)}<ul>` + rows + '</ul></li>'\r\n        }\r\n\r\n        if (actor.isOfType('hazard')) {\r\n            const { hardness, emitsSound, stealth } = attributes\r\n\r\n            return {\r\n                ...sharedData,\r\n                hardness,\r\n                emitsSound: emitsSound.toString().capitalize(),\r\n                immunities: toIWR(immunities),\r\n                weaknesses: toIWR(weaknesses),\r\n                resistances: toIWR(resistances),\r\n                stealth: {\r\n                    value: stealth.value,\r\n                    details: await enrichHTML(stealth.details, actor),\r\n                },\r\n                saves:\r\n                    savesSetting !== 'none' &&\r\n                    ['fortitude', 'reflex', 'will'].map(slug => {\r\n                        const save = saves[slug]\r\n                        if (!save) return { slug, label: SAVES[slug].label, icon: SAVES[slug].icon }\r\n                        return getStatistic(save, savesSetting, SAVES)\r\n                    }),\r\n            }\r\n        }\r\n\r\n        sharedData = {\r\n            ...sharedData,\r\n            sidebarTitles: {\r\n                actions: `${MODULE_ID}.actions.title`,\r\n                items: `${MODULE_ID}.items.title`,\r\n                spells: `${MODULE_ID}.spells.title`,\r\n                skills: `${MODULE_ID}.skills.title`,\r\n                extras: `${MODULE_ID}.extras.title`,\r\n            },\r\n            hasItems: actor.inventory.size,\r\n        }\r\n\r\n        if (actor.isOfType('vehicle')) {\r\n            const { hardness, collisionDC, collisionDamage } = attributes\r\n            const { details } = system\r\n            const { crew, passengers, pilotingCheck, speed } = details\r\n\r\n            return {\r\n                ...sharedData,\r\n                hardness,\r\n                crew,\r\n                passengers,\r\n                pilotingCheck,\r\n                speed,\r\n                collisionDC: collisionDC.value,\r\n                collisionDamage: collisionDamage.value,\r\n                immunities: toIWR(immunities),\r\n                weaknesses: toIWR(weaknesses),\r\n                resistances: toIWR(resistances),\r\n                fortitude: getStatistic(saves.fortitude, savesSetting, SAVES),\r\n            }\r\n        }\r\n\r\n        const showDeath = getSetting('show-death')\r\n        const { heroPoints, _source } = actor\r\n        const { traits } = system\r\n        const { wounded, dying, shield, resolve, speed, adjustment } = attributes\r\n\r\n        function toInfo(str) {\r\n            return `<li>${str.trim()}</li>`\r\n        }\r\n\r\n        function sort(a, b) {\r\n            return localeCompare(a, b)\r\n        }\r\n\r\n        const languages = traits?.languages?.value\r\n            .map(x => game.i18n.localize(CONFIG.PF2E.languages[x]))\r\n            .filter(Boolean)\r\n            .sort(sort)\r\n            .map(toInfo)\r\n            .join('')\r\n\r\n        const senses = isCharacter ? traits.senses.map(x => x.label) : traits.senses.value?.split(',')\r\n\r\n        const speeds = SPEEDS.map(({ type, icon }, index) => ({\r\n            index,\r\n            icon,\r\n            label: game.i18n.localize(CONFIG.PF2E.speedTypes[type] ?? 'PF2E.SpeedTypesLand'),\r\n            value: (index === 0 ? speed.total : speed.otherSpeeds.find(s => s.type === type)?.total) || 0,\r\n        }))\r\n\r\n        const selectedSpeed = getFlag(actor, `speeds.selected.${game.user.id}`)\r\n        const mainSpeed = (() => {\r\n            let index = 0\r\n            if (selectedSpeed !== undefined) index = selectedSpeed\r\n            else if (getSetting('force-speed') || speeds[0].value === 0) {\r\n                const base = { index: 0, value: speeds[0].value }\r\n                index = speeds.reduce((prev, { value }, index) => (value > prev.value ? { index, value } : prev), base).index\r\n            }\r\n            return speeds.splice(index, 1)[0]\r\n        })()\r\n\r\n        let otherSpeeds = speeds\r\n            .map(({ value, label, index }) => `<li><a data-index=\"${index}\">${label}: ${value}</a></li>`)\r\n            .join('')\r\n        if (speed.details) otherSpeeds += `<li>${game.i18n.localize('PF2E.DetailsHeading')}: ${speed.details}</li>`\r\n\r\n        const allianceSource = _source.system.details?.alliance\r\n        const alliance = allianceSource === null ? 'neutral' : allianceSource ?? 'default'\r\n        const defaultAlliance = actor.hasPlayerOwner ? 'party' : 'opposition'\r\n        const alliances = [\r\n            {\r\n                value: 'default',\r\n                label: game.i18n.format('PF2E.Actor.Creature.Alliance.Default', {\r\n                    alliance: game.i18n.localize(ALLIANCES[defaultAlliance].label),\r\n                }),\r\n            },\r\n            { value: 'opposition', label: game.i18n.localize(ALLIANCES.opposition.label) },\r\n            { value: 'party', label: game.i18n.localize(ALLIANCES.party.label) },\r\n            { value: 'neutral', label: game.i18n.localize(ALLIANCES.neutral.label) },\r\n        ]\r\n            .filter(({ value }) => value !== alliance)\r\n            .map(({ value, label }) => `<li><a data-alliance=\"${value}\">${label}</a></li>`)\r\n            .join('')\r\n\r\n        return {\r\n            ...sharedData,\r\n            sp: useStamina ? sp : { max: 0 },\r\n            hero: heroPoints,\r\n            dying,\r\n            wounded,\r\n            shield,\r\n            resolve,\r\n            adjustment,\r\n            alliance: ALLIANCES[alliance === 'default' ? defaultAlliance : alliance],\r\n            alliances,\r\n            isCharacter,\r\n            showDeathLine: isCharacter && (showDeath === 'always' || dying.value || wounded.value),\r\n            digitalPips: getSetting('pips'),\r\n            hasCover: this.hasCover,\r\n            saves:\r\n                savesSetting !== 'none' &&\r\n                ['fortitude', 'reflex', 'will'].map(slug => getStatistic(saves[slug], savesSetting, SAVES)),\r\n            others:\r\n                othersSetting !== 'none' &&\r\n                ['perception', 'stealth', 'athletics'].map(slug => getStatistic(actor.getStatistic(slug), othersSetting, SKILLS)),\r\n            speeds: {\r\n                main: mainSpeed,\r\n                others: otherSpeeds,\r\n            },\r\n            iwr:\r\n                toIWR(immunities, 'PF2E.ImmunitiesLabel') +\r\n                toIWR(weaknesses, 'PF2E.WeaknessesLabel') +\r\n                toIWR(resistances, 'PF2E.ResistancesLabel'),\r\n            senses: senses?.filter(Boolean).map(toInfo).join(''),\r\n            languages,\r\n            hasSpells: actor.spellcasting.some(x => x.category !== 'items'),\r\n            hasNotes: !isCharacter && (system.details.publicNotes || (system.details.privateNotes && isOwner)),\r\n        }\r\n    }\r\n\r\n    close(options = {}) {\r\n        this.setToken(null)\r\n        this.unlock(true)\r\n        this.#softLock = false\r\n\r\n        this.#cancelDelay()\r\n\r\n        const states = Application.RENDER_STATES\r\n        if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) return\r\n\r\n        this._state = states.CLOSING\r\n\r\n        let el = this.element\r\n        if (!el) return (this._state = states.CLOSED)\r\n        el.css({ minHeight: 0 })\r\n\r\n        for (let cls of this.constructor._getInheritanceChain()) {\r\n            Hooks.call(`close${cls.name}`, this, el)\r\n        }\r\n\r\n        el.remove()\r\n\r\n        this._element = null\r\n        this._state = states.CLOSED\r\n        delete ui.windows[this.appId]\r\n    }\r\n\r\n    async _render(force = false, options = {}) {\r\n        let sidebarType\r\n        let sidebarScrolltop\r\n        let popup\r\n        let popupScrollTop\r\n        let filter\r\n\r\n        if (this.#lastToken === this.#token) {\r\n            const sidebar = this.sidebar[0]\r\n            if (sidebar) {\r\n                sidebarType = sidebar.dataset.type\r\n                sidebarScrolltop = sidebar.scrollTop\r\n                const filterHeader = sidebar.querySelector('.sidebar-header')\r\n                if (filterHeader.classList.contains('show')) filter = filterHeader.querySelector(' input').value.trim()\r\n            }\r\n\r\n            popup = this.popup[0]\r\n            if (popup) popupScrollTop = popup.scrollTop\r\n        }\r\n\r\n        await super._render(force, options)\r\n        ui.windows[this.appId] = this\r\n\r\n        if (sidebarType) {\r\n            const sidebar = await this.#openSidebar(sidebarType, filter)\r\n            if (sidebarScrolltop > 0) sidebar.scrollTop(sidebarScrolltop)\r\n        }\r\n\r\n        if (popup) {\r\n            this.element.append(popup)\r\n            if (popupScrollTop > 0) popup.scrollTop = popupScrollTop\r\n        }\r\n\r\n        this.#lastToken = this.#token\r\n\r\n        if (!this.inner.length) return\r\n        if (getSetting('autolock') === 'render') this.lock()\r\n    }\r\n\r\n    render() {\r\n        if (this.actor) super.render(true)\r\n    }\r\n\r\n    _injectHTML(html) {\r\n        $('body').append(html)\r\n        this._element = html\r\n    }\r\n\r\n    setPosition() {\r\n        const token = this.#token\r\n        if (!token) return\r\n\r\n        const element = this.element[0]\r\n        const scale = token.worldTransform.a\r\n        const hud = element.getBoundingClientRect()\r\n        const targetCoords = canvas.clientCoordinatesFromCanvas(token.document._source)\r\n        const target = {\r\n            x: targetCoords.x,\r\n            y: targetCoords.y,\r\n            width: token.hitArea.width * scale,\r\n            height: token.hitArea.height * scale,\r\n            get right() {\r\n                return this.x + this.width\r\n            },\r\n            get bottom() {\r\n                return this.y + this.height\r\n            },\r\n        }\r\n\r\n        let coords\r\n\r\n        const positions = this.#isObserved\r\n            ? POSITIONS[getSetting('position')].slice()\r\n            : POSITIONS[getSetting('small-position')].slice()\r\n\r\n        while (positions.length && !coords) {\r\n            const position = positions.shift()\r\n\r\n            if (position === 'left') {\r\n                coords = {\r\n                    x: target.x - hud.width,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x < 0) coords = undefined\r\n            } else if (position === 'right') {\r\n                coords = {\r\n                    x: target.right,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x + hud.width > window.innerWidth) coords = undefined\r\n            } else if (position === 'top') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.y - hud.height,\r\n                }\r\n                if (coords.y < 0) coords = undefined\r\n            } else if (position === 'bottom') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.bottom,\r\n                }\r\n                if (coords.y + hud.height > window.innerHeight) coords = undefined\r\n            }\r\n        }\r\n\r\n        if (coords) {\r\n            element.style.left = `${coords.x}px`\r\n            element.style.top = `${coords.y}px`\r\n        }\r\n\r\n        return coords\r\n    }\r\n\r\n    lock() {\r\n        this.#lock = true\r\n    }\r\n\r\n    unlock(force) {\r\n        if (!force && (this.sidebar.length || getSetting('autolock') !== 'none')) return\r\n        this.#lock = false\r\n    }\r\n\r\n    activateListeners(html) {\r\n        const token = this.#token\r\n        const actor = token?.actor\r\n        if (!actor) return\r\n\r\n        const isOwner = token.isOwner\r\n        const ChatMessagePF2e = getChatMessageClass()\r\n\r\n        if (getSetting('tooltips')) {\r\n            html.find('.inner [data-tooltip]').attr('data-tooltip', '')\r\n        }\r\n\r\n        html.find('[data-action=show-notes').on('click', async event => {\r\n            event.preventDefault()\r\n\r\n            const { publicNotes, privateNotes, blurb } = actor.system.details\r\n            const traits = actor.system.traits.value.map(trait => ({\r\n                label: game.i18n.localize(CONFIG.PF2E.monsterTraits[trait]) ?? trait,\r\n                description: game.i18n.localize(CONFIG.PF2E.traitsDescriptions[trait]) ?? '',\r\n            }))\r\n\r\n            const content = await renderTemplate(templatePath('show-notes'), {\r\n                traits,\r\n                blurb: blurb.trim(),\r\n                publicNotes: publicNotes.trim(),\r\n                privateNotes: isOwner && privateNotes.trim(),\r\n            })\r\n\r\n            popup(`${actor.name} - ${game.i18n.localize('PF2E.NPC.NotesTab')}`, content, actor)\r\n        })\r\n\r\n        html.on('mousedown', () => this.bringToTop())\r\n\r\n        html.on('mouseenter', () => {\r\n            if (!html.find('.inner').length) return\r\n            if (getSetting('autolock') === 'hover') this.lock()\r\n            this.#softLock = true\r\n        })\r\n\r\n        html.on('mouseleave', () => {\r\n            this.#softLock = false\r\n            if (this.#lock || this.#hoveredToken) return\r\n            this.close()\r\n        })\r\n\r\n        html.on('dragover', () => {\r\n            if (token.isOwner && html.find('> .sidebar.extras').length && !html.find('> .popup').length) return\r\n            html.css('opacity', 0.1)\r\n            html.css('pointerEvents', 'none')\r\n            window.addEventListener(\r\n                'dragend',\r\n                () => {\r\n                    html.css('opacity', 1)\r\n                    html.css('pointerEvents', '')\r\n                },\r\n                { once: true }\r\n            )\r\n        })\r\n\r\n        const infos = html.find('[data-action=show-info]')\r\n        infos.tooltipster({\r\n            position: ['top', 'bottom', 'left', 'right'],\r\n            theme: 'crb-hover',\r\n            arrow: false,\r\n            animationDuration: 0,\r\n            contentAsHTML: true,\r\n            trigger: 'click',\r\n        })\r\n\r\n        infos\r\n            .filter('.stealth')\r\n            .tooltipster('option', 'interactive', true)\r\n            .tooltipster('option', 'functionReady', (tooltipster, { origin, tooltip }) => {\r\n                this.lock()\r\n                $(tooltip)\r\n                    .find('.content-link')\r\n                    .on('click', () => setTimeout(() => tooltipster.close(), 10))\r\n            })\r\n            .tooltipster('option', 'functionAfter', () => this.unlock())\r\n\r\n        const infosToLeave = isOwner ? infos.filter(':not(.speeds):not(.stealth)') : infos\r\n        infosToLeave.on('mouseleave', event => {\r\n            $(event.currentTarget).tooltipster('hide')\r\n        })\r\n\r\n        html.find('[data-action=open-sidebar]').on('click', this.#openSidebar.bind(this))\r\n\r\n        // IS OWNER\r\n        if (!isOwner) return\r\n\r\n        html.find('[data-action=toggle-adjustment]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n            const adjustment = event.type === 'click' ? 'elite' : 'weak'\r\n            actor.applyAdjustment(actor.system.attributes.adjustment === adjustment ? null : adjustment)\r\n        })\r\n\r\n        html.find('[data-action=toggle-alliance]').tooltipster({\r\n            position: ['bottom', 'top', 'left', 'right'],\r\n            theme: 'crb-hover',\r\n            arrow: false,\r\n            animationDuration: 0,\r\n            contentAsHTML: true,\r\n            trigger: 'click',\r\n            interactive: true,\r\n            functionReady: (tooltipster, { origin, tooltip }) => {\r\n                this.lock()\r\n                tooltip.querySelectorAll('[data-alliance]').forEach(alliance => {\r\n                    alliance.addEventListener('click', async event => {\r\n                        event.preventDefault()\r\n                        const value = alliance.dataset.alliance\r\n                        if (value === 'default') actor.update({ 'system.details.-=alliance': null })\r\n                        else actor.update({ 'system.details.alliance': value === 'neutral' ? null : value })\r\n                    })\r\n                })\r\n            },\r\n            functionAfter: () => this.unlock(),\r\n        })\r\n\r\n        html.find('[data-action=collision-dc]').on('click', event => {\r\n            event.preventDefault()\r\n            const dc = actor.system.attributes.collisionDC.value || 15\r\n            ChatMessagePF2e.create({\r\n                content: `@Check[type:reflex|dc:${dc}]`,\r\n                speaker: ChatMessagePF2e.getSpeaker({ actor }),\r\n            })\r\n        })\r\n\r\n        html.find('[data-action=collision-damage]').on('click', async event => {\r\n            event.preventDefault()\r\n            let formula = (actor.system.attributes.collisionDamage.value || '1d6').trim()\r\n            if (!isNaN(Number(formula.at(-1)))) formula += '[bludgeoning]'\r\n            const DamageRoll = getDamageRollClass()\r\n            const roll = await new DamageRoll(formula).evaluate({ async: true })\r\n            ChatMessagePF2e.create({\r\n                flavor: `<strong>${game.i18n.localize('PF2E.vehicle.collisionDamageLabel')}</strong>`,\r\n                speaker: ChatMessagePF2e.getSpeaker({ actor }),\r\n                type: CONST.CHAT_MESSAGE_TYPES.ROLL,\r\n                sound: 'sounds/dice.wav',\r\n                rolls: [roll],\r\n            })\r\n        })\r\n\r\n        html.find('input').on('change', async event => {\r\n            const target = event.currentTarget\r\n            const value = target.valueAsNumber\r\n            const attr = target.name\r\n\r\n            target.blur()\r\n\r\n            if (attr !== 'shield.value') await actor.update({ [attr]: value })\r\n            else await actor.heldShield.update({ 'system.hp.value': value })\r\n        })\r\n\r\n        html.find('[data-action=toggle-hero]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n            let { max, value } = actor.heroPoints\r\n\r\n            const change = event.type === 'click' ? 1 : -1\r\n            const newValue = Math.clamped(value + change, 0, max)\r\n\r\n            if (newValue !== value) actor.update({ 'system.resources.heroPoints.value': newValue })\r\n        })\r\n\r\n        html.find('[data-action=raise-shield]').on('click', event => {\r\n            event.preventDefault()\r\n            game.pf2e.actions.raiseAShield({ actors: [actor], tokens: [token] })\r\n        })\r\n\r\n        html.find('[data-action=take-cover]').on('click', async event => {\r\n            event.preventDefault()\r\n            game.pf2e.actions.get('take-cover').use({ actors: [actor], tokens: [token] })\r\n        })\r\n\r\n        html.find('[data-action=roll-save]').on('click', event => {\r\n            event.preventDefault()\r\n            const save = event.currentTarget.dataset.save\r\n            actor.saves[save].roll({ event })\r\n        })\r\n\r\n        html.find('[data-action=roll-other]').on('click', event => {\r\n            event.preventDefault()\r\n            const slug = event.currentTarget.dataset.slug\r\n            if (slug !== 'athletics') {\r\n                const { ctrlKey, metaKey, shiftKey } = event\r\n                event = new MouseEvent('click', { ctrlKey: !ctrlKey, metaKey, shiftKey })\r\n            }\r\n            actor.getStatistic(slug)?.roll({ event })\r\n        })\r\n\r\n        html.find('[data-action=recovery-check]').on('click', event => {\r\n            event.preventDefault()\r\n            actor.rollRecovery(event)\r\n        })\r\n\r\n        html.find('[data-action=toggle-dying], [data-action=toggle-wounded]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n\r\n            const condition = event.currentTarget.dataset.action === 'toggle-dying' ? 'dying' : 'wounded'\r\n            const max = actor.system.attributes[condition]?.max\r\n\r\n            if (!max) return\r\n            if (event.type === 'click') actor.increaseCondition(condition, { max })\r\n            else actor.decreaseCondition(condition)\r\n        })\r\n\r\n        html.find('[data-action=use-resolve]').on('click', event => {\r\n            event.preventDefault()\r\n            useResolve(actor)\r\n        })\r\n\r\n        infos\r\n            .filter('.speeds')\r\n            .tooltipster('option', 'interactive', true)\r\n            .tooltipster('option', 'functionReady', (tooltipster, { origin, tooltip }) => {\r\n                this.lock()\r\n                tooltip.querySelectorAll('[data-index]').forEach(speed => {\r\n                    speed.addEventListener('click', async event => {\r\n                        event.preventDefault()\r\n                        await setFlag(actor, `speeds.selected.${game.user.id}`, Number(speed.dataset.index))\r\n                    })\r\n                })\r\n            })\r\n            .tooltipster('option', 'functionAfter', () => this.unlock())\r\n    }\r\n\r\n    async showFilter() {\r\n        let sidebar = this.sidebar\r\n        if (!sidebar.length) return\r\n        if (!sidebar.find('.sidebar-header').hasClass('show')) sidebar = await this.#openSidebar(sidebar.data().type, '')\r\n        sidebar.find('.sidebar-header').find('input').focus().select()\r\n        sidebar.scrollTop(0)\r\n    }\r\n\r\n    async #openSidebar(type, filter) {\r\n        type = typeof type === 'string' ? type : type.currentTarget.dataset.type\r\n\r\n        let element = this.element\r\n        let sidebar = this.sidebar\r\n        const action = sidebar[0]?.dataset.type\r\n\r\n        sidebar.remove()\r\n        element.find('[data-action=open-sidebar]').removeClass('active')\r\n\r\n        if (action === type && filter === undefined) {\r\n            this.unlock()\r\n            return\r\n        }\r\n\r\n        const token = this.#token\r\n        const actor = token.actor\r\n        const showFilter = filter !== undefined || getSetting('filter')\r\n        const { getData, addListeners } = SIDEBARS[type]\r\n        const data = (await getData(actor, token, filter?.toLowerCase())) ?? {}\r\n        if (!data.contentData && !showFilter) return ui.notifications.warn(localize(`${type}.empty`, { name: this.#token.name }))\r\n\r\n        const contentData = {\r\n            ...(data.contentData ?? {}),\r\n            isGM: game.user.isGM,\r\n            isCharacter: this.isCharacter,\r\n            isOwner: actor.isOwner,\r\n        }\r\n\r\n        this.lock()\r\n\r\n        element.find(`[data-action=open-sidebar][data-type=${type}]`).addClass('active')\r\n        element = element[0]\r\n\r\n        const classes = data.classes ?? []\r\n        classes.push(type)\r\n        if (!getSetting('scrollbar')) classes.push('no-scrollbar')\r\n        if (data.doubled) classes.push('doubled')\r\n\r\n        const style = data.style ?? {}\r\n        style['--max-height'] = getSetting('height').trim() || '100%'\r\n\r\n        const tmp = document.createElement('div')\r\n        tmp.innerHTML = await renderTemplate(templatePath('sidebar'), {\r\n            classes: classes.join(' '),\r\n            style: Object.entries(style)\r\n                .map(([key, value]) => `${key}: ${value}`)\r\n                .join('; '),\r\n            type,\r\n            filter,\r\n            filterLabel: localize('filter'),\r\n            showFilter,\r\n            content: (await renderTemplate(templatePath(`sidebars/${type}`), contentData)).trim(),\r\n        })\r\n\r\n        sidebar = tmp.firstElementChild\r\n        element.append(sidebar)\r\n\r\n        const rect = sidebar.getBoundingClientRect()\r\n        const target = element.getBoundingClientRect()\r\n\r\n        let left\r\n        const position = getSetting('position')\r\n        if (position === 'left') {\r\n            left = target.x - rect.width\r\n            if (left < 0) left = target.right\r\n        } else {\r\n            left = target.right\r\n            if (left + rect.width > window.innerWidth) left = target.x - rect.width\r\n        }\r\n\r\n        const elPadding = parseInt(window.getComputedStyle(element).padding)\r\n        let top = postionFromTargetY(rect, target, elPadding)\r\n\r\n        sidebar.style.left = `${left}px`\r\n        sidebar.style.top = `${top}px`\r\n\r\n        sidebar = $(sidebar)\r\n        sidebar.find('.sidebar-header [data-action=sidebar-filter-clear]').on('click', event => {\r\n            event.preventDefault()\r\n            sidebar.find('.sidebar-header [data-action=sidebar-filter]').val('')\r\n            this.#openSidebar(type, '')\r\n        })\r\n        sidebar.find('.sidebar-header [data-action=sidebar-filter]').on('keydown', event => {\r\n            if (event.key === 'Enter') this.#openSidebar(type, event.currentTarget.value.trim())\r\n        })\r\n        addListeners(sidebar, actor, token)\r\n\r\n        Hooks.callAll('renderHUDSidebar', type, sidebar, this)\r\n\r\n        return sidebar\r\n    }\r\n}\r\n\r\nfunction postionFromTargetY(el, target, margin = 0) {\r\n    let y = target.y + target.height / 2 - el.height / 2\r\n    if (y + el.height > window.innerHeight) y = window.innerHeight - el.height - margin\r\n    if (y < 0) y = margin\r\n    return y\r\n}\r\n\r\nfunction postionFromTargetX(el, target) {\r\n    let x = target.x + target.width / 2 - el.width / 2\r\n    if (x + el.width > window.innerWidth) y = window.innerWidth - el.width\r\n    if (x < 0) x = 0\r\n    return x\r\n}\r\n", "import { HUD } from './hud.js'\r\n\r\nexport const MODULE_ID = 'pf2e-token-hud'\r\n\r\nlet hud = null\r\nexport function getHud(element = false) {\r\n    return element ? hud?.element : hud\r\n}\r\n\r\nexport function enableModule(enabled) {\r\n    if (enabled && !hud) {\r\n        hud = new HUD()\r\n    } else if (!enabled && hud) {\r\n        hud.delete()\r\n        hud = null\r\n    }\r\n}\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function hasFeat(actor, uuid) {\r\n    return actor.itemTypes.feat.some(feat => feat.sourceId === uuid)\r\n}\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function modifier(mod) {\r\n    return mod >= 0 ? `+${mod}` : mod\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n\r\nexport async function enrichHTML(str, actor, { isOwner = actor.isOwner, rollData = actor.getRollData() } = {}) {\r\n    str = str?.trim()\r\n    if (!str) return ''\r\n    const enriched = await TextEditor.enrichHTML(str, { async: true, secrets: isOwner, rollData })\r\n    return enriched\r\n}\r\n\r\nexport function isInstanceOf(obj, name) {\r\n    if (typeof obj !== 'object') return false\r\n\r\n    while ((obj = Reflect.getPrototypeOf(obj))) {\r\n        if (obj.constructor.name === name) return true\r\n    }\r\n\r\n    return false\r\n}\r\n", "import { getHud, getSetting, MODULE_ID } from './module.js'\r\n\r\nexport function registerKeybindings() {\r\n    register('hold', {\r\n        onDown: () => {\r\n            if (getSetting('use-holding') !== 'none') getHud()?.setHolding(true)\r\n        },\r\n        onUp: () => {\r\n            getHud()?.setHolding(false)\r\n        },\r\n    })\r\n\r\n    register('filter', {\r\n        onUp: () => {\r\n            getHud()?.showFilter()\r\n        },\r\n        editable: [\r\n            {\r\n                key: 'KeyQ',\r\n                modifiers: ['Control'],\r\n            },\r\n        ],\r\n    })\r\n}\r\n\r\nfunction path(bind, key) {\r\n    return `${MODULE_ID}.keybinds.${bind}.${key}`\r\n}\r\n\r\nfunction register(name, extras = {}) {\r\n    game.keybindings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        precedence: CONST.KEYBINDING_PRECEDENCE.PRIORITY,\r\n        ...extras,\r\n    })\r\n}\r\n", "import { enableModule, localize, MODULE_ID } from './module.js'\r\n\r\nexport function registerSettings() {\r\n    const isGM = game.data.users.find(x => x._id === game.data.userId).role >= CONST.USER_ROLES.GAMEMASTER\r\n\r\n    /**\r\n     * GM\r\n     */\r\n    const statuses = ['first', 'second', 'third', 'fourth'].map(x => localize(`settings.status.statuses.${x}`)).join(', ')\r\n    register('status', String, statuses, { scope: 'world' })\r\n\r\n    register('last-status', Boolean, false, { scope: 'world' })\r\n\r\n    register('party', Boolean, false, { scope: 'world' })\r\n\r\n    /**\r\n     * CLIENT\r\n     */\r\n    register('enabled', Boolean, true, { onChange: enableModule })\r\n\r\n    register('position', String, 'right', {\r\n        choices: {\r\n            left: path('position', 'choices.left'),\r\n            right: path('position', 'choices.right'),\r\n            top: path('position', 'choices.top'),\r\n            bottom: path('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    register('small-position', String, 'top', {\r\n        choices: {\r\n            left: path('position', 'choices.left'),\r\n            right: path('position', 'choices.right'),\r\n            top: path('position', 'choices.top'),\r\n            bottom: path('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    register('delay', Number, 250, {\r\n        range: {\r\n            min: 0,\r\n            max: 2000,\r\n            step: 50,\r\n        },\r\n    })\r\n\r\n    register('scale', Number, 14, {\r\n        range: {\r\n            min: 10,\r\n            max: 30,\r\n            step: 1,\r\n        },\r\n    })\r\n\r\n    register('use-holding', String, 'none', {\r\n        hint: path('use-holding', isGM ? 'choices.gm.hint' : 'choices.player.hint'),\r\n        choices: {\r\n            none: path('use-holding', 'choices.none'),\r\n            half: path('use-holding', isGM ? 'choices.gm.half' : 'choices.player.half'),\r\n            all: path('use-holding', isGM ? 'choices.gm.all' : 'choices.player.all'),\r\n        },\r\n    })\r\n\r\n    register('autolock', String, 'none', {\r\n        choices: {\r\n            none: path('autolock', 'choices.none'),\r\n            hover: path('autolock', 'choices.hover'),\r\n            render: path('autolock', 'choices.render'),\r\n        },\r\n    })\r\n\r\n    register('observer', Boolean, true)\r\n\r\n    register('see-status', Boolean, false)\r\n\r\n    // tooltip\r\n\r\n    register('saves', String, 'bonus', {\r\n        choices: {\r\n            none: path('saves', 'choices.none'),\r\n            bonus: path('saves', 'choices.bonus'),\r\n            dc: path('saves', 'choices.dc'),\r\n        },\r\n    })\r\n\r\n    register('others', String, 'none', {\r\n        choices: {\r\n            none: path('saves', 'choices.none'),\r\n            bonus: path('saves', 'choices.bonus'),\r\n            dc: path('saves', 'choices.dc'),\r\n        },\r\n    })\r\n\r\n    register('ranks', Boolean, false)\r\n\r\n    register('show-death', String, 'always', {\r\n        choices: {\r\n            none: path('show-death', 'choices.none'),\r\n            always: path('show-death', 'choices.always'),\r\n            only: path('show-death', 'choices.only'),\r\n        },\r\n    })\r\n\r\n    register('force-speed', Boolean, false)\r\n\r\n    register('tooltips', Boolean, false)\r\n\r\n    register('pips', Boolean, false)\r\n\r\n    // distance\r\n\r\n    register('distance', String, 'all', {\r\n        choices: {\r\n            none: path('distance', 'choices.none'),\r\n            self: path('distance', 'choices.self'),\r\n            all: path('distance', 'choices.all'),\r\n        },\r\n    })\r\n\r\n    register('unit', String, '')\r\n\r\n    // sidebar\r\n\r\n    register('height', String, '')\r\n\r\n    register('filter', Boolean, false)\r\n\r\n    register('scrollbar', Boolean, true)\r\n\r\n    register('hazard-width', Number, 32, {\r\n        range: {\r\n            min: 14,\r\n            max: 50,\r\n            step: 1,\r\n        },\r\n    })\r\n\r\n    register('actions-columns', Boolean, false)\r\n\r\n    register('items-columns', Boolean, false)\r\n\r\n    register('spells-columns', Boolean, false)\r\n\r\n    register('skills-columns', Boolean, false)\r\n\r\n    // actions\r\n\r\n    register('actions', String, 'split', {\r\n        choices: {\r\n            name: path('actions', 'choices.name'),\r\n            type: path('actions', 'choices.type'),\r\n            split: path('actions', 'choices.split'),\r\n        },\r\n    })\r\n\r\n    register('actions-colors', Boolean, true)\r\n\r\n    // items\r\n\r\n    register('containers', Boolean, false)\r\n\r\n    // spells\r\n\r\n    register('spells', Boolean, false)\r\n\r\n    register('tradition', Boolean, false)\r\n\r\n    // skills\r\n\r\n    register('untrained', Boolean, true)\r\n}\r\n\r\nexport function renderSettingsConfig(_, html) {\r\n    const tab = html.find(`.tab[data-tab=${MODULE_ID}]`)\r\n\r\n    function beforeGroup(name, key, dom = 'h3') {\r\n        const localized = localize(`menu.${key}`)\r\n        tab.find(`[name=\"${MODULE_ID}.${name}\"]`).closest('.form-group').before(`<${dom}>${localized}</${dom}>`)\r\n    }\r\n\r\n    if (game.user.isGM) {\r\n        beforeGroup('enabled', 'client.header', 'h2')\r\n    }\r\n\r\n    beforeGroup('saves', 'client.tooltip')\r\n    beforeGroup('distance', 'client.distance')\r\n    beforeGroup('height', 'client.sidebar')\r\n    beforeGroup('actions', 'client.actions')\r\n    beforeGroup('containers', 'client.items')\r\n    beforeGroup('spells', 'client.spells')\r\n    beforeGroup('untrained', 'client.skills')\r\n}\r\n\r\nfunction path(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction register(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        scope: 'client',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n", "import { registerKeybindings } from './keybindings.js'\r\nimport { enableModule, getSetting, localize, MODULE_ID, templatePath, getHud } from './module.js'\r\nimport { registerSettings, renderSettingsConfig } from './settings.js'\r\nimport { deleteMacro, getMacros, onDroppedMacro } from './shared.js'\r\n\r\nHooks.once('setup', async () => {\r\n    registerSettings()\r\n    registerKeybindings()\r\n\r\n    await loadTemplates({\r\n        creature: templatePath('tooltips/creature'),\r\n        hazard: templatePath('tooltips/hazard'),\r\n        vehicle: templatePath('tooltips/vehicle'),\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (getSetting('enabled')) enableModule(true)\r\n\r\n    game.modules.get('pf2e-token-hud').api = {\r\n        getHud,\r\n    }\r\n})\r\n\r\nHooks.on('renderSettingsConfig', renderSettingsConfig)\r\n\r\nHooks.on('drawMeasuredTemplate', template => {\r\n    if (template.isPreview) getHud()?.close()\r\n})\r\n\r\nHooks.on('getActorDirectoryEntryContext', (_, data) => {\r\n    data.unshift({\r\n        icon: '<i class=\"fa-solid fa-code\"></i>',\r\n        name: `${MODULE_ID}.actor.macros.contextmenu`,\r\n        condition: html => {\r\n            const { documentId } = html.data()\r\n            return getSetting('enabled') && game.actors.get(documentId)?.isOwner\r\n        },\r\n        callback: html => {\r\n            const { documentId } = html.data()\r\n            openMacrosDialog(documentId)\r\n        },\r\n    })\r\n})\r\n\r\nclass DataDialog extends Dialog {\r\n    async getData(options = {}) {\r\n        const data = super.getData(options)\r\n        if (typeof data.content === 'function') data.content = await data.content()\r\n        return data\r\n    }\r\n}\r\n\r\nfunction openMacrosDialog(actorId) {\r\n    const actor = game.actors.get(actorId)\r\n    if (!actor) return\r\n\r\n    const dialog = new DataDialog(\r\n        {\r\n            title: `${actor.name} - ${localize('actor.macros.title')}`,\r\n            content: async () => {\r\n                const macros = getMacros(actor) ?? []\r\n                return renderTemplate(templatePath('dialogs/macros'), {\r\n                    macros,\r\n                    noMacro: localize('extras.no-macro'),\r\n                })\r\n            },\r\n            buttons: {},\r\n            render: html => {\r\n                actor.apps[dialog.appId] = dialog\r\n                html.on('drop', event => onDroppedMacro(event, actor))\r\n                html.find('[data-action=delete-macro]').on('click', event => deleteMacro(event, actor))\r\n            },\r\n            close: () => {\r\n                delete actor.apps[dialog.appId]\r\n            },\r\n        },\r\n        { height: 'auto' }\r\n    ).render(true)\r\n}\r\n"],
  "mappings": "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",
  "names": ["RESOLVE_UUID", "useResolve", "actor", "toChat", "content", "__name", "name", "attributes", "sp", "resolve", "fullStamina", "localize", "noResolve", "hasSteel", "item", "templatePath", "str", "html", "selected", "ratio", "newSP", "getDamageRollClass", "R", "__name", "getChatMessageClass", "__name", "getMeasuredTemplateDocumentClass", "getMeasuredTemplateObjectClass", "dcAdjustments", "dcByLevel", "adjustDC", "dc", "adjustment", "__name", "rarityToDCAdjustment", "rarity", "adjustDCByRarity", "calculateDC", "level", "proficiencyWithoutLevel", "pwlSetting", "htmlQueryAll", "parent", "selectors", "__name", "htmlClosest", "child", "actionImgMap", "actionGlyphMap", "getActionIcon", "action", "fallback", "value", "sanitized", "__name", "getActionGlyph", "ErrorPF2e", "message", "tupleHasValue", "array", "value", "__name", "objectHasKey", "obj", "key", "wordCharacter", "nonWordCharacter", "nonWordCharacterRE", "wordBoundary", "nonWordBoundary", "lowerCaseLetter", "upperCaseLetter", "lowerCaseThenUpperCaseRE", "nonWordCharacterHyphenOrSpaceRE", "upperOrWordBoundariedLowerRE", "sluggify", "text", "camel", "dromedary", "part", "index", "ErrorPF2e", "traitSlugToObject", "trait", "dictionary", "traitObject", "objectHasKey", "__name", "isRelevantEvent", "event", "__name", "eventToRollParams", "skipDefault", "params", "SAVE_TYPES", "inlineSelector", "keyword", "injectRepostElement", "links", "foundryDoc", "link", "repostButtons", "htmlQueryAll", "button", "newButton", "icon", "event", "target", "parent", "document", "resolveDocument", "repostAction", "__name", "flavorDamageRolls", "html", "actor", "rollLink", "itemId", "htmlClosest", "item", "makeRepostHtml", "defaultVisibility", "flavor", "d", "resolveActor", "content", "ChatMessagePF2e", "getChatMessageClass", "speaker", "message", "flags", "listenInlineRoll", "l", "pf2Action", "pf2Glyph", "pf2Variant", "pf2Dc", "pf2ShowDc", "pf2Skill", "action", "sluggify", "visibility", "pf2Check", "pf2Traits", "pf2Label", "pf2Defense", "pf2Adjustment", "pf2Roller", "pf2RollOptions", "actors", "extraRollOptions", "o", "eventRollParams", "eventToRollParams", "flatCheck", "dc", "isSavingThrow", "tupleHasValue", "traits", "t", "statistic", "bestSpellcasting", "c", "s", "a", "b", "ErrorPF2e", "targetActor", "dcValue", "adjustment", "calculateDC", "defenseStat", "itemFromDoc", "args", "subtitleLocKey", "getActionGlyph", "templateConversion", "pf2EffectArea", "pf2Distance", "pf2TemplateData", "pf2Width", "templateData", "distance", "templateDoc", "getMeasuredTemplateDocumentClass", "getMeasuredTemplateObjectClass", "anchor", "isInstanceOf", "itemUuid", "itemByUUID", "RANKS", "getItemSummary", "el", "actor", "dataset", "item", "data", "description", "listenInlineRoll", "__name", "addNameTooltipListeners", "event", "target", "width", "name", "editItem", "getItemFromEvent", "deleteItem", "localize", "itemId", "getMacros", "getFlag", "uuid", "macro", "onDroppedMacro", "type", "flag", "macros", "setFlag", "deleteMacro", "index", "getUniqueTarget", "condition", "targets", "filterIn", "value", "filter", "localeCompare", "a", "b", "popup", "title", "content", "actor", "hud", "getHud", "el", "tmp", "localize", "enrichHTML", "__name", "showItemSummary", "description", "getItemSummary", "unownedItemToMessage", "event", "item", "actor", "rollMode", "create", "data", "template", "token", "nearestItem", "ChatMessagePF2e", "getChatMessageClass", "contextualData", "templateData", "chatData", "u", "__name", "createSelfEffectMessage", "ErrorPF2e", "actionCost", "speaker", "flavor", "getActionGlyph", "t", "traitSlugToObject", "previewLength", "descriptionPreview", "tempDiv", "documentTypes", "linkPattern", "_match", "args", "description", "content", "flags", "toggleWeaponTrait", "weapon", "trait", "selection", "item", "r", "__name", "DEGREE_OF_SUCCESS", "DEGREE_ADJUSTMENT_AMOUNTS", "adjustDegreeOfSuccess", "amount", "degreeOfSuccess", "__name", "adjustDegreeByDieValue", "dieResult", "degree", "calculateDegreeOfSuccess", "rollTotal", "dc", "SKILLS", "SUCCESS", "rollRecallKnowledges", "actor", "dieResult", "dieSuccess", "lores", "skill", "target", "getUniqueTarget", "data", "str", "localize", "standard", "skills", "lore", "skillsDCs", "loresDCs", "progression", "dcs", "slug", "rollSkill", "flavor", "templatePath", "__name", "rank", "label", "roll", "mod", "total", "modifier", "RANKS", "dc", "success", "calculateDegreeOfSuccess", "MODULE_ID", "UNTRAINED_IMPROVISATION", "CROWBAR_UUIDS", "BON_MOT_UUID", "NATURAL_MEDICINE_UUID", "FOLLOW_THE_EXPERT_UUID", "LABELS", "ACTIONS_UUIDS", "DUPLICATE_SKILLS", "SKILLS", "actor", "item", "hasFeat", "skill", "action", "slug", "actions", "unslugged", "_", "c", "variant", "modifiers", "modifier", "SKILLS_SLUGS", "SKILLS_MAP", "skills", "skillActionsUUIDS", "getSkillLabel", "__name", "getSkillsData", "token", "filter", "isCharacter", "noUntrained", "getSetting", "feat", "i", "label", "rank", "mod", "name", "actionsList", "condition", "trained", "passedFilter", "filterIn", "filteredActions", "variants", "a", "b", "localeCompare", "lores", "lore", "loresModifierWidth", "width", "localize", "isFollowingAnExpert", "addSkillsListeners", "el", "event", "showItemSummary", "following", "source", "target", "skillSlug", "map", "variantsDialog", "rollAction", "uuid", "unownedItemToMessage", "effect", "base", "dc", "content", "templatePath", "str", "html", "type", "rollOptions", "options", "extrasUUIDS", "getExtrasData", "actor", "token", "filter", "attributes", "initiative", "localize", "getMacros", "macro", "filterIn", "SKILLS_SLUGS", "slug", "getSkillLabel", "__name", "addExtrasListeners", "el", "action", "callback", "type", "event", "showItemSummary", "addNameTooltipListeners", "getMacro", "uuid", "deleteMacro", "onDroppedMacro", "item", "unownedItemToMessage", "target", "value", "dailies", "rollRecallKnowledges", "variants", "variantsDialog", "note", "multipleAttackPenalty", "SECTIONS_TYPES", "TOOLTIPS", "getActionsData", "actor", "token", "filter", "isCharacter", "toggles", "sorting", "getSetting", "stances", "getStancesModuleApi", "a", "b", "localeCompare", "heroActions", "getHeroActionsApi", "heroDiff", "isOwner", "rollData", "strikes", "strike", "index", "enrichHTML", "altUsage", "blast", "blasts", "config", "damageType", "damage", "formulaFor", "__name", "outcome", "melee", "sections", "actions", "getCharacterActions", "getNpcActions", "action", "filterIn", "type", "getActionIcon", "orderA", "orderB", "nb", "canTradeHeroActions", "str", "localize", "label", "addActionsListeners", "el", "addNameTooltipListeners", "callback", "x", "event", "getStrike", "strikeEl", "s", "getUuid", "showItemSummary", "uuid", "description", "name", "popup", "templatePath", "trait", "stance", "item", "getItemFromEvent", "createSelfEffectMessage", "effectUuid", "toggle", "domain", "option", "itemId", "suboption", "modular", "weapon", "target", "value", "baseType", "selection", "toggleWeaponTrait", "ammo", "selectors", "_", "blastEl", "element", "dataset", "mapIncreases", "getToolBeltModule", "setting", "module", "getToolBeltApi", "stancesUUIDS", "actionUUID", "actionsUUIDS", "skillActionsUUIDS", "extrasUUIDS", "feats", "traits", "actionCost", "actionType", "hasAura", "r", "getHazardData", "actor", "system", "details", "traits", "attributes", "stealth", "description", "disable", "routine", "reset", "isComplex", "rollData", "isOwner", "enrich", "__name", "str", "enrichHTML", "trait", "modifier", "getSetting", "addHazardListeners", "el", "event", "action", "showItemSummary", "listenInlineRoll", "MAGIC_TRADITIONS", "setHasElement", "set", "value", "__name", "getDcRarity", "item", "getMagicTraditions", "traits", "t", "getIdentifyMagicDCs", "baseDC", "notMatchingTraditionModifier", "result", "traditions", "key", "getItemIdentificationDCs", "proficiencyWithoutLevel", "calculateDC", "rarity", "dc", "adjustDCByRarity", "objectHasKey", "obj", "IdentifyItemPopup", "dcs", "$form", "event", "$button", "itemImg", "itemName", "identifiedName", "skills", "row", "slug", "name", "actionOption", "content", "getChatMessageClass", "_event", "formData", "status", "ITEMS_TYPES", "getItemsData", "actor", "token", "filter", "contents", "coins", "totalWealth", "bulk", "invested", "openedContainers", "getSetting", "getFlag", "containers", "categories", "item", "containerId", "type", "items", "a", "b", "localeCompare", "i", "container", "contained", "filterIn", "category", "str", "localize", "__name", "addItemsListeners", "el", "addNameTooltipListeners", "event", "showItemSummary", "flag", "index", "setFlag", "getItemFromEvent", "target", "itemType", "uuid", "img", "itemId", "IdentifyItemPopup", "editItem", "deleteItem", "tooltipster", "origin", "tmp", "content", "$content", "current", "carryType", "handsHeld", "inSlot", "rows", "getSpellsData", "actor", "token", "filter", "focusPool", "entries", "showTradition", "getSetting", "stavesActive", "spells", "focuses", "hasFocusCantrips", "entry", "entryId", "tradition", "data", "isFocus", "isCharge", "isStaff", "charges", "slot", "slotSpells", "isCantrip", "actives", "x", "slotId", "spell", "expended", "virtual", "uses", "castLevel", "filterIn", "MODULE_ID", "sort", "a", "b", "localeCompare", "rituals", "attacks", "getSpellAttacks", "nb", "hasSingleSpellAttack", "__name", "statistic", "name", "id", "modifier", "mod", "addSpellsListeners", "el", "addNameTooltipListeners", "event", "showItemSummary", "localize", "html", "templatePath", "rollParams", "eventToRollParams", "map", "getItemFromEvent", "change", "points", "slotLevel", "itemId", "collection", "inputPath", "value", "COVER_UUID", "POSITIONS", "ALLIANCES", "SPEEDS", "SIDEBARS", "getActionsData", "addActionsListeners", "getItemsData", "addItemsListeners", "getSpellsData", "addSpellsListeners", "getSkillsData", "addSkillsListeners", "getExtrasData", "addExtrasListeners", "getHazardData", "addHazardListeners", "SAVES", "SKILLS", "HUD", "#token", "#lastToken", "#hoveredToken", "#delay", "#holding", "#closing", "#mousedown", "#lock", "#softLock", "#isObserved", "#hoverTokenHandler", "#mouseeventHandler", "#deleteTokenHandler", "token", "hover", "#tokenEnter", "#tokenLeave", "event", "button", "target", "el", "popup", "#cancelDelay", "isObserved", "actor", "#checkIfObserved", "held", "holding", "getSetting", "isParty", "#cancelClosing", "delay", "close", "templatePath", "effect", "distance", "savesSetting", "othersSetting", "isCharacter", "attributes", "hp", "sp", "ac", "useStamina", "showDistance", "fontSize", "unitSplit", "multiplier", "unit", "decimals", "selected", "isTarget", "getUniqueTarget", "status", "statuses", "x", "max", "current", "ratio", "pick", "length", "sharedData", "level", "saves", "isOwner", "system", "itemTypes", "resistances", "weaknesses", "immunities", "action", "showRanks", "getStatistic", "stat", "type", "stats", "slug", "value", "modifier", "RANKS", "__name", "toIWR", "category", "header", "rows", "toInfo", "hardness", "emitsSound", "stealth", "enrichHTML", "save", "MODULE_ID", "collisionDC", "collisionDamage", "details", "crew", "passengers", "pilotingCheck", "speed", "showDeath", "heroPoints", "_source", "traits", "wounded", "dying", "shield", "resolve", "adjustment", "str", "sort", "a", "b", "localeCompare", "languages", "senses", "speeds", "icon", "index", "s", "selectedSpeed", "getFlag", "mainSpeed", "base", "prev", "otherSpeeds", "label", "allianceSource", "alliance", "defaultAlliance", "alliances", "options", "states", "cls", "force", "sidebarType", "sidebarScrolltop", "popupScrollTop", "filter", "sidebar", "filterHeader", "#openSidebar", "html", "element", "scale", "hud", "targetCoords", "coords", "positions", "position", "postionFromTargetY", "postionFromTargetX", "ChatMessagePF2e", "getChatMessageClass", "publicNotes", "privateNotes", "blurb", "trait", "content", "infos", "tooltipster", "origin", "tooltip", "dc", "formula", "DamageRoll", "getDamageRollClass", "roll", "attr", "change", "newValue", "ctrlKey", "metaKey", "shiftKey", "condition", "useResolve", "setFlag", "showFilter", "getData", "addListeners", "data", "localize", "contentData", "classes", "style", "tmp", "key", "rect", "left", "elPadding", "top", "margin", "y", "MODULE_ID", "hud", "getHud", "element", "__name", "enableModule", "enabled", "HUD", "getSetting", "setting", "localize", "args", "data", "useFormat", "keys", "hasFeat", "actor", "uuid", "feat", "templatePath", "template", "modifier", "mod", "getFlag", "doc", "flag", "setFlag", "value", "enrichHTML", "str", "isOwner", "rollData", "isInstanceOf", "obj", "name", "registerKeybindings", "register", "getSetting", "getHud", "__name", "path", "bind", "key", "MODULE_ID", "name", "extras", "registerSettings", "isGM", "x", "statuses", "localize", "register", "enableModule", "path", "__name", "renderSettingsConfig", "_", "html", "tab", "MODULE_ID", "beforeGroup", "name", "key", "dom", "localized", "setting", "type", "defValue", "extra", "registerSettings", "registerKeybindings", "templatePath", "getSetting", "enableModule", "getHud", "renderSettingsConfig", "template", "_", "data", "MODULE_ID", "html", "documentId", "openMacrosDialog", "DataDialog", "options", "__name", "actorId", "actor", "dialog", "localize", "macros", "getMacros", "event", "onDroppedMacro", "deleteMacro"]
}
