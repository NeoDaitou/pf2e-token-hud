{
  "version": 3,
  "sources": ["../src/actions/use-resolve.js", "../src/pf2e/classes.js", "../src/pf2e/dc.js", "../src/pf2e/dom.js", "../src/pf2e/misc.js", "../src/pf2e/scripts.js", "../src/pf2e/inline-roll.js", "../src/shared.js", "../src/popup.js", "../src/pf2e/item.js", "../src/pf2e/weapon.js", "../src/pf2e/success.js", "../src/actions/recall-knowledge.js", "../src/sidebars/skills.js", "../src/sidebars/extras.js", "../src/sidebars/actions.js", "../src/sidebars/hazard.js", "../src/pf2e/identify.js", "../src/tooltip.js", "../src/sidebars/items.js", "../src/sidebars/spells.js", "../src/hud.js", "../src/module.js", "../src/keybindings.js", "../src/settings.js", "../src/main.js"],
  "sourcesContent": ["import { localize, templatePath } from '../module.js'\r\n\r\nconst RESOLVE_UUID = 'Compendium.pf2e.feats-srd.Item.jFmdevE4nKevovzo'\r\n\r\nexport async function useResolve(actor) {\r\n    function toChat(content) {\r\n        ChatMessage.create({\r\n            user: game.user.id,\r\n            content,\r\n            speaker: ChatMessage.getSpeaker({ actor }),\r\n        })\r\n    }\r\n\r\n    const { name, attributes, system } = actor\r\n    const sp = attributes.hp.sp\r\n    const resolve = system.resources.resolve\r\n    const fullStamina = localize('hud.resolve.full', { name })\r\n    const noResolve = game.i18n.format('PF2E.Actions.SteelYourResolve.NoStamina', { name })\r\n\r\n    if (sp.value === sp.max) return ui.notifications.warn(fullStamina)\r\n    if (resolve.value < 1) return ui.notifications.warn(noResolve)\r\n\r\n    const hasSteel = actor.itemTypes.feat.find(item => item.sourceId === RESOLVE_UUID)\r\n    const content = await renderTemplate(templatePath('dialogs/resolve'), {\r\n        hasSteel,\r\n        i18n: str => localize(`hud.resolve.${str}`),\r\n    })\r\n\r\n    new Dialog({\r\n        title: localize('hud.resolve.title'),\r\n        content,\r\n        buttons: {\r\n            yes: {\r\n                icon: \"<i class='fas fa-check'></i>\",\r\n                label: localize('hud.resolve.yes'),\r\n                callback: async html => {\r\n                    const { attributes, system } = actor\r\n                    const sp = attributes.hp.sp\r\n                    const resolve = system.resources.resolve\r\n\r\n                    if (sp.value === sp.max) return toChat(fullStamina)\r\n                    if (resolve.value < 1) return toChat(noResolve)\r\n\r\n                    const selected = html.find('input:checked').val()\r\n                    const ratio = `${sp.value}/${sp.max}`\r\n\r\n                    if (selected === 'breather') {\r\n                        toChat(localize('hud.resolve.breather.used', { name, ratio }))\r\n                        await actor.update({\r\n                            'system.attributes.hp.sp.value': sp.max,\r\n                            'system.resources.resolve.value': resolve.value - 1,\r\n                        })\r\n                    } else {\r\n                        toChat(game.i18n.format('PF2E.Actions.SteelYourResolve.RecoverStamina', { name, ratio }))\r\n                        const newSP = sp.value + Math.floor(sp.max / 2)\r\n                        await actor.update({\r\n                            'system.attributes.hp.sp.value': Math.min(newSP, sp.max),\r\n                            'system.resources.resolve.value': resolve.value - 1,\r\n                        })\r\n                    }\r\n                },\r\n            },\r\n            no: {\r\n                icon: \"<i class='fas fa-times'></i>\",\r\n                label: localize('hud.resolve.no'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n", "export function getDamageRollClass() {\r\n    return CONFIG.Dice.rolls.find(Roll => Roll.name === 'DamageRoll')\r\n}\r\n\r\nexport function getDamageInstanceClass() {\r\n    return CONFIG.Dice.rolls.find(Roll => Roll.name === 'DamageInstance')\r\n}\r\n\r\nexport function getChatMessageClass() {\r\n    return CONFIG.ChatMessage.documentClass\r\n}\r\n\r\nexport function getMeasuredTemplateDocumentClass() {\r\n    return CONFIG.MeasuredTemplate.documentClass\r\n}\r\n\r\nexport function getMeasuredTemplateObjectClass() {\r\n    return CONFIG.MeasuredTemplate.objectClass\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nconst dcAdjustments = new Map([\r\n    ['incredibly-easy', -10],\r\n    ['very-easy', -5],\r\n    ['easy', -2],\r\n    ['normal', 0],\r\n    ['hard', 2],\r\n    ['very-hard', 5],\r\n    ['incredibly-hard', 10],\r\n])\r\n\r\nconst dcByLevel = new Map([\r\n    [-1, 13],\r\n    [0, 14],\r\n    [1, 15],\r\n    [2, 16],\r\n    [3, 18],\r\n    [4, 19],\r\n    [5, 20],\r\n    [6, 22],\r\n    [7, 23],\r\n    [8, 24],\r\n    [9, 26],\r\n    [10, 27],\r\n    [11, 28],\r\n    [12, 30],\r\n    [13, 31],\r\n    [14, 32],\r\n    [15, 34],\r\n    [16, 35],\r\n    [17, 36],\r\n    [18, 38],\r\n    [19, 39],\r\n    [20, 40],\r\n    [21, 42],\r\n    [22, 44],\r\n    [23, 46],\r\n    [24, 48],\r\n    [25, 50],\r\n])\r\n\r\nfunction adjustDC(dc, adjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nfunction rarityToDCAdjustment(rarity = 'common') {\r\n    switch (rarity) {\r\n        case 'uncommon':\r\n            return 'hard'\r\n        case 'rare':\r\n            return 'very-hard'\r\n        case 'unique':\r\n            return 'incredibly-hard'\r\n        default:\r\n            return 'normal'\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc, rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function calculateDC(level, { proficiencyWithoutLevel, rarity = 'common' } = {}) {\r\n    const pwlSetting = game.settings.get('pf2e', 'proficiencyVariant')\r\n    proficiencyWithoutLevel ??= pwlSetting === 'ProficiencyWithoutLevel'\r\n\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n", "export function htmlQueryAll(parent, selectors) {\r\n    if (!(parent instanceof Element || parent instanceof Document)) return []\r\n    return Array.from(parent.querySelectorAll(selectors))\r\n}\r\n\r\nexport function htmlClosest(child, selectors) {\r\n    if (!(child instanceof Element)) return null\r\n    return child.closest(selectors)\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nconst actionImgMap = {\r\n    0: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    free: 'systems/pf2e/icons/actions/FreeAction.webp',\r\n    1: 'systems/pf2e/icons/actions/OneAction.webp',\r\n    2: 'systems/pf2e/icons/actions/TwoActions.webp',\r\n    3: 'systems/pf2e/icons/actions/ThreeActions.webp',\r\n    '1 or 2': 'systems/pf2e/icons/actions/OneTwoActions.webp',\r\n    '1 to 3': 'systems/pf2e/icons/actions/OneThreeActions.webp',\r\n    '2 or 3': 'systems/pf2e/icons/actions/TwoThreeActions.webp',\r\n    reaction: 'systems/pf2e/icons/actions/Reaction.webp',\r\n    passive: 'systems/pf2e/icons/actions/Passive.webp',\r\n}\r\n\r\nconst actionGlyphMap = {\r\n    0: 'F',\r\n    free: 'F',\r\n    1: 'A',\r\n    2: 'D',\r\n    3: 'T',\r\n    '1 or 2': 'A/D',\r\n    '1 to 3': 'A - T',\r\n    '2 or 3': 'D/T',\r\n    reaction: 'R',\r\n}\r\n\r\nexport function getActionIcon(action, fallback = 'systems/pf2e/icons/actions/Empty.webp') {\r\n    if (action === null) return actionImgMap['passive']\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n    return actionImgMap[sanitized] ?? fallback\r\n}\r\n\r\nexport function getActionGlyph(action) {\r\n    if (!action && action !== 0) return ''\r\n\r\n    const value = typeof action !== 'object' ? action : action.type === 'action' ? action.value : action.type\r\n    const sanitized = String(value ?? '')\r\n        .toLowerCase()\r\n        .trim()\r\n\r\n    return actionGlyphMap[sanitized] ?? ''\r\n}\r\n\r\nexport function ErrorPF2e(message) {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\nexport function getSelectedOrOwnActors(types, useOwnCharacter = true) {\r\n    const actors = canvas.tokens.controlled\r\n        .flatMap(token => (token.actor ? token.actor : []))\r\n        .filter(actor => actor.isOwner)\r\n        .filter(actor => !types || actor.isOfType(...types))\r\n\r\n    if (actors.length === 0 && game.user.character && useOwnCharacter) actors.push(game.user.character)\r\n\r\n    return actors\r\n}\r\n\r\nexport function tupleHasValue(array, value) {\r\n    return array.includes(value)\r\n}\r\n\r\nexport function objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nconst wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text, { camel = null } = {}) {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    // A hyphen by its lonesome would be wiped: return it as-is\r\n    if (text === '-') return text\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['\u2019]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\n/**\r\n * Given an array and a key function, create a map where the key is the value that\r\n * gets returned when each item is pushed into the function. Accumulate\r\n * items in an array that have the same key\r\n * @param array\r\n * @param criterion\r\n * @return\r\n */\r\nexport function groupBy(array, criterion) {\r\n    const result = new Map()\r\n    for (const elem of array) {\r\n        const key = criterion(elem)\r\n        const group = result.get(key)\r\n        if (group) {\r\n            group.push(elem)\r\n        } else {\r\n            result.set(key, [elem])\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport function sortBy(mapping) {\r\n    return (a, b) => {\r\n        const value1 = mapping(a)\r\n        const value2 = mapping(b)\r\n        return value1 < value2 ? -1 : value1 === value2 ? 0 : 1\r\n    }\r\n}\r\n\r\nexport function sum(values) {\r\n    return values.reduce((a, b) => a + b, 0)\r\n}\r\n\r\nexport function setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nexport function traitSlugToObject(trait, dictionary) {\r\n    // Look up trait labels from `npcAttackTraits` instead of `weaponTraits` in case a battle form attack is\r\n    // in use, which can include what are normally NPC-only traits\r\n    const traitObject = {\r\n        name: trait,\r\n        label: game.i18n.localize(dictionary[trait] ?? trait),\r\n    }\r\n    if (objectHasKey(CONFIG.PF2E.traitsDescriptions, trait)) {\r\n        traitObject.description = CONFIG.PF2E.traitsDescriptions[trait]\r\n    }\r\n\r\n    return traitObject\r\n}\r\n\r\nexport function ordinalString(value) {\r\n    const pluralRules = new Intl.PluralRules(game.i18n.lang, { type: 'ordinal' })\r\n    const suffix = game.i18n.localize(`PF2E.OrdinalSuffixes.${pluralRules.select(value)}`)\r\n    return game.i18n.format('PF2E.OrdinalNumber', { value, suffix })\r\n}\r\n", "function isRelevantEvent(event) {\r\n    return !!event && 'ctrlKey' in event && 'metaKey' in event && 'shiftKey' in event\r\n}\r\n\r\nexport function eventToRollParams(event) {\r\n    const skipDefault = !game.user.settings.showRollDialogs\r\n    if (!isRelevantEvent(event)) return { skipDialog: skipDefault }\r\n\r\n    const params = { skipDialog: event.shiftKey ? !skipDefault : skipDefault }\r\n    if (event.ctrlKey || event.metaKey) {\r\n        params.rollMode = game.user.isGM ? 'gmroll' : 'blindroll'\r\n    }\r\n\r\n    return params\r\n}\r\n", "import { isInstanceOf } from '../module.js'\r\nimport { getChatMessageClass, getMeasuredTemplateDocumentClass, getMeasuredTemplateObjectClass } from './classes.js'\r\nimport { calculateDC } from './dc.js'\r\nimport { htmlClosest, htmlQueryAll } from './dom.js'\r\nimport { ErrorPF2e, getActionGlyph, sluggify, tupleHasValue } from './misc.js'\r\nimport { eventToRollParams } from './scripts.js'\r\n\r\nconst SAVE_TYPES = ['fortitude', 'reflex', 'will']\r\n\r\nconst inlineSelector = ['action', 'check', 'effect-area'].map(keyword => `[data-pf2-${keyword}]`).join(',')\r\n\r\nfunction injectRepostElement(links, foundryDoc) {\r\n    for (const link of links) {\r\n        if (!foundryDoc || foundryDoc.isOwner) link.classList.add('with-repost')\r\n\r\n        const repostButtons = htmlQueryAll(link, 'i[data-pf2-repost]')\r\n        if (repostButtons.length > 0) {\r\n            if (foundryDoc && !foundryDoc.isOwner) {\r\n                for (const button of repostButtons) {\r\n                    button.remove()\r\n                }\r\n                link.classList.remove('with-repost')\r\n            }\r\n            continue\r\n        }\r\n\r\n        if (foundryDoc && !foundryDoc.isOwner) continue\r\n\r\n        const newButton = document.createElement('i')\r\n        const icon = link.parentElement?.dataset?.pf2Checkgroup !== undefined ? 'fa-comment-alt-dots' : 'fa-comment-alt'\r\n        newButton.classList.add('fa-solid', icon)\r\n        newButton.dataset.pf2Repost = ''\r\n        newButton.title = game.i18n.localize('PF2E.Repost')\r\n        link.appendChild(newButton)\r\n\r\n        newButton.addEventListener('click', event => {\r\n            event.stopPropagation()\r\n            const target = event.target\r\n            if (!(target instanceof HTMLElement)) return\r\n            const parent = target?.parentElement\r\n            if (!parent) return\r\n\r\n            const document = resolveDocument(target, foundryDoc)\r\n            repostAction(parent, document)\r\n        })\r\n    }\r\n}\r\n\r\nfunction flavorDamageRolls(html, actor = null) {\r\n    for (const rollLink of htmlQueryAll(html, 'a.inline-roll[data-damage-roll]')) {\r\n        const itemId = htmlClosest(rollLink, '[data-item-id]')?.dataset.itemId\r\n        const item = actor?.items.get(itemId ?? '')\r\n        if (item) rollLink.dataset.flavor ||= item.name\r\n    }\r\n}\r\n\r\nfunction makeRepostHtml(target, defaultVisibility) {\r\n    const flavor = target.attributes.getNamedItem('data-pf2-repost-flavor')?.value ?? ''\r\n    const showDC = target.attributes.getNamedItem('data-pf2-show-dc')?.value ?? defaultVisibility\r\n    return `<span data-visibility=\"${showDC}\">${flavor}</span> ${target.outerHTML}`.trim()\r\n}\r\n\r\nfunction repostAction(target, foundryDoc = null) {\r\n    if (!['pf2Action', 'pf2Check', 'pf2EffectArea'].some(d => d in target.dataset)) {\r\n        return\r\n    }\r\n\r\n    const actor = resolveActor(foundryDoc, target)\r\n    const defaultVisibility = (actor ?? foundryDoc)?.hasPlayerOwner ? 'all' : 'gm'\r\n    const content = (() => {\r\n        if (target.parentElement?.dataset?.pf2Checkgroup !== undefined) {\r\n            const content = htmlQueryAll(target.parentElement, inlineSelector)\r\n                .map(target => makeRepostHtml(target, defaultVisibility))\r\n                .join('<br>')\r\n\r\n            return `<div data-pf2-checkgroup>${content}</div>`\r\n        } else {\r\n            return makeRepostHtml(target, defaultVisibility)\r\n        }\r\n    })()\r\n\r\n    const ChatMessagePF2e = getChatMessageClass()\r\n    const speaker = actor\r\n        ? ChatMessagePF2e.getSpeaker({ actor, token: actor.getActiveTokens(false, true).shift() })\r\n        : ChatMessagePF2e.getSpeaker()\r\n\r\n    // If the originating document is a journal entry, include its UUID as a flag. If a chat message, copy over\r\n    // the origin flag.\r\n    const message = game.messages.get(htmlClosest(target, '[data-message-id]')?.dataset.messageId ?? '')\r\n    const flags =\r\n        foundryDoc instanceof JournalEntry\r\n            ? { pf2e: { journalEntry: foundryDoc.uuid } }\r\n            : message?.flags.pf2e.origin\r\n            ? { pf2e: { origin: deepClone(message.flags.pf2e.origin) } }\r\n            : {}\r\n\r\n    ChatMessagePF2e.create({\r\n        speaker,\r\n        content,\r\n        flags,\r\n    })\r\n}\r\n\r\n/**\r\n * actions & checks use the actor directly instead of selections\r\n */\r\nexport function listenInlineRoll(html, foundryDoc) {\r\n    foundryDoc ??= resolveDocument(html, foundryDoc)\r\n\r\n    const links = htmlQueryAll(html, inlineSelector).filter(l => ['A', 'SPAN'].includes(l.nodeName))\r\n    injectRepostElement(links, foundryDoc)\r\n\r\n    flavorDamageRolls(html, foundryDoc instanceof Actor ? foundryDoc : null)\r\n\r\n    for (const link of links.filter(l => l.dataset.pf2Action)) {\r\n        const { pf2Action, pf2Glyph, pf2Variant, pf2Dc, pf2ShowDc, pf2Skill } = link.dataset\r\n        link.addEventListener('click', event => {\r\n            const action = game.pf2e.actions[pf2Action ? sluggify(pf2Action, { camel: 'dromedary' }) : '']\r\n            const visibility = pf2ShowDc ?? 'all'\r\n            if (pf2Action && action) {\r\n                action({\r\n                    event,\r\n                    glyph: pf2Glyph,\r\n                    variant: pf2Variant,\r\n                    difficultyClass: pf2Dc ? { scope: 'check', value: Number(pf2Dc) || 0, visibility } : undefined,\r\n                    skill: pf2Skill,\r\n                })\r\n            } else {\r\n                console.warn(`PF2e System | Skip executing unknown action '${pf2Action}'`)\r\n            }\r\n        })\r\n    }\r\n\r\n    for (const link of links.filter(l => l.dataset.pf2Check && !l.dataset.invalid)) {\r\n        const { pf2Check, pf2Dc, pf2Traits, pf2Label, pf2Defense, pf2Adjustment, pf2Roller, pf2RollOptions } = link.dataset\r\n\r\n        if (!pf2Check) return\r\n\r\n        link.addEventListener('click', async event => {\r\n            const parent = resolveActor(foundryDoc, link)\r\n            const actors = [parent]\r\n            const extraRollOptions = [\r\n                ...(pf2Traits?.split(',').map(o => o.trim()) ?? []),\r\n                ...(pf2RollOptions?.split(',').map(o => o.trim()) ?? []),\r\n            ]\r\n            const eventRollParams = eventToRollParams(event)\r\n\r\n            switch (pf2Check) {\r\n                case 'flat': {\r\n                    for (const actor of actors) {\r\n                        const flatCheck = new Statistic(actor, {\r\n                            label: '',\r\n                            slug: 'flat',\r\n                            modifiers: [],\r\n                            check: { type: 'flat-check' },\r\n                        })\r\n                        const dc = Number.isInteger(Number(pf2Dc)) ? { label: pf2Label, value: Number(pf2Dc) } : null\r\n                        flatCheck.roll({ ...eventRollParams, extraRollOptions, dc })\r\n                    }\r\n                    break\r\n                }\r\n                default: {\r\n                    const isSavingThrow = tupleHasValue(SAVE_TYPES, pf2Check)\r\n\r\n                    // Get actual traits for display in chat cards\r\n                    const traits = isSavingThrow ? [] : extraRollOptions.filter(t => t in CONFIG.PF2E.actionTraits) ?? []\r\n\r\n                    for (const actor of actors) {\r\n                        const statistic = (() => {\r\n                            if (pf2Check in CONFIG.PF2E.magicTraditions) {\r\n                                const bestSpellcasting =\r\n                                    actor.spellcasting\r\n                                        .filter(c => c.tradition === pf2Check)\r\n                                        .flatMap(s => s.statistic ?? [])\r\n                                        .sort((a, b) => b.check.mod - a.check.mod)\r\n                                        .shift() ?? null\r\n                                if (bestSpellcasting) return bestSpellcasting\r\n                            }\r\n                            return actor.getStatistic(pf2Check)\r\n                        })()\r\n\r\n                        if (!statistic) {\r\n                            console.warn(ErrorPF2e(`Skip rolling unknown statistic ${pf2Check}`).message)\r\n                            continue\r\n                        }\r\n\r\n                        const targetActor = pf2Defense ? game.user.targets.first()?.actor : null\r\n\r\n                        const dcValue = (() => {\r\n                            const adjustment = Number(pf2Adjustment) || 0\r\n                            if (pf2Dc === '@self.level') {\r\n                                return calculateDC(actor.level) + adjustment\r\n                            }\r\n                            return Number(pf2Dc ?? 'NaN') + adjustment\r\n                        })()\r\n\r\n                        const dc = (() => {\r\n                            if (Number.isInteger(dcValue)) {\r\n                                return { label: pf2Label, value: dcValue }\r\n                            } else if (pf2Defense) {\r\n                                const defenseStat = targetActor?.getStatistic(pf2Defense)\r\n                                return defenseStat\r\n                                    ? {\r\n                                          statistic: defenseStat.dc,\r\n                                          scope: 'check',\r\n                                          value: defenseStat.dc.value,\r\n                                      }\r\n                                    : null\r\n                            }\r\n                            return null\r\n                        })()\r\n\r\n                        // Retrieve the item if:\r\n                        // (2) The item is an action or,\r\n                        // (1) The check is a saving throw and the item is not a weapon.\r\n                        // Exclude weapons so that roll notes on strikes from incapacitation abilities continue to work.\r\n                        const item = (() => {\r\n                            const itemFromDoc =\r\n                                foundryDoc instanceof Item\r\n                                    ? foundryDoc\r\n                                    : foundryDoc instanceof ChatMessage\r\n                                    ? foundryDoc.item\r\n                                    : null\r\n\r\n                            return itemFromDoc?.isOfType('action', 'feat', 'campaignFeature') ||\r\n                                (isSavingThrow && !itemFromDoc?.isOfType('weapon'))\r\n                                ? itemFromDoc\r\n                                : null\r\n                        })()\r\n\r\n                        const args = {\r\n                            ...eventRollParams,\r\n                            extraRollOptions,\r\n                            origin: isSavingThrow && parent instanceof Actor ? parent : null,\r\n                            dc,\r\n                            target: !isSavingThrow && dc?.statistic ? targetActor : null,\r\n                            item,\r\n                            traits,\r\n                        }\r\n\r\n                        // Use a special header for checks against defenses\r\n                        const itemIsEncounterAction = !!(item?.isOfType('action', 'feat') && item.actionCost)\r\n                        if (itemIsEncounterAction && pf2Defense) {\r\n                            const subtitleLocKey =\r\n                                pf2Check in CONFIG.PF2E.magicTraditions\r\n                                    ? 'PF2E.ActionsCheck.spell'\r\n                                    : statistic.check.type === 'attack-roll'\r\n                                    ? 'PF2E.ActionsCheck.x-attack-roll'\r\n                                    : 'PF2E.ActionsCheck.x'\r\n                            args.label = await renderTemplate('systems/pf2e/templates/chat/action/header.hbs', {\r\n                                glyph: getActionGlyph(item.actionCost),\r\n                                subtitle: game.i18n.format(subtitleLocKey, { type: statistic.label }),\r\n                                title: item.name,\r\n                            })\r\n                        }\r\n\r\n                        statistic.roll(args)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const templateConversion = {\r\n        burst: 'circle',\r\n        cone: 'cone',\r\n        cube: 'rect',\r\n        emanation: 'circle',\r\n        line: 'ray',\r\n        rect: 'rect',\r\n        square: 'rect',\r\n    }\r\n\r\n    for (const link of links.filter(l => l.hasAttribute('data-pf2-effect-area'))) {\r\n        const { pf2EffectArea, pf2Distance, pf2TemplateData, pf2Traits, pf2Width } = link.dataset\r\n        link.addEventListener('click', () => {\r\n            if (typeof pf2EffectArea !== 'string') {\r\n                console.warn(`PF2e System | Could not create template'`)\r\n                return\r\n            }\r\n\r\n            const templateData = JSON.parse(pf2TemplateData ?? '{}')\r\n            templateData.distance ||= Number(pf2Distance)\r\n            templateData.fillColor ||= game.user.color\r\n            templateData.t = templateConversion[pf2EffectArea]\r\n\r\n            switch (templateData.t) {\r\n                case 'ray':\r\n                    templateData.width =\r\n                        Number(pf2Width) || CONFIG.MeasuredTemplate.defaults.width * (canvas.dimensions?.distance ?? 1)\r\n                    break\r\n                case 'cone':\r\n                    templateData.angle = CONFIG.MeasuredTemplate.defaults.angle\r\n                    break\r\n                case 'rect': {\r\n                    const distance = templateData.distance ?? 0\r\n                    templateData.distance = Math.hypot(distance, distance)\r\n                    templateData.width = distance\r\n                    templateData.direction = 45\r\n                    break\r\n                }\r\n            }\r\n\r\n            if (pf2Traits) {\r\n                templateData.flags = {\r\n                    pf2e: {\r\n                        origin: {\r\n                            traits: pf2Traits.split(','),\r\n                        },\r\n                    },\r\n                }\r\n            }\r\n\r\n            const templateDoc = new (getMeasuredTemplateDocumentClass())(templateData, { parent: canvas.scene })\r\n            new (getMeasuredTemplateObjectClass())(templateDoc).drawPreview()\r\n        })\r\n    }\r\n\r\n    for (const link of html.querySelectorAll('a[data-damage-roll]')) {\r\n        link.dataset.itemUuid = foundryDoc.uuid\r\n    }\r\n}\r\n\r\n/** If the provided document exists returns it, otherwise attempt to derive it from the sheet */\r\nfunction resolveDocument(html, foundryDoc) {\r\n    if (foundryDoc) return foundryDoc\r\n\r\n    const sheet = ui.windows[Number(html.closest('.app.sheet')?.dataset.appid)] ?? null\r\n\r\n    const document = sheet?.document\r\n    return document instanceof Actor || document instanceof JournalEntry ? document : null\r\n}\r\n\r\n/** Retrieves the actor for the given document, or the document itself if its already an actor */\r\nfunction resolveActor(foundryDoc, anchor) {\r\n    if (isInstanceOf(foundryDoc, 'ActorPF2e')) return foundryDoc\r\n    if (isInstanceOf(foundryDoc, 'ItemPF2e') || isInstanceOf(foundryDoc, 'ChatMessagePF2e')) return foundryDoc.actor\r\n\r\n    // Retrieve item/actor from anywhere via UUID\r\n    const itemUuid = anchor.dataset.itemUuid\r\n    const itemByUUID = itemUuid && !itemUuid.startsWith('Compendium.') ? fromUuidSync(itemUuid) : null\r\n    return itemByUUID instanceof Item ? itemByUUID.actor : null\r\n}\r\n", "import { getFlag, localize, setFlag } from './module.js'\r\nimport { listenInlineRoll } from './pf2e/inline-roll.js'\r\n\r\nexport const RANKS = ['U', 'T', 'E', 'M', 'L']\r\n\r\nconst COVER_UUID = 'Compendium.pf2e.other-effects.Item.I9lfZUiCwMiGogVi'\r\n\r\nexport async function getItemSummary(el, actor) {\r\n    const dataset = el.data()\r\n    const item = dataset.itemId ? actor.items.get(dataset.itemId) : await fromUuid(dataset.uuid)\r\n    const data = await item?.getChatData({ secrets: actor.isOwner }, dataset)\r\n    if (!data) return\r\n\r\n    const description = document.createElement('div')\r\n    description.classList.add('description')\r\n\r\n    await actor.sheet.itemRenderer.renderItemSummary(description, item, data)\r\n    listenInlineRoll(description, item)\r\n\r\n    return description\r\n}\r\n\r\nexport function addNameTooltipListeners(el) {\r\n    el.on('mouseenter', event => {\r\n        event.preventDefault()\r\n\r\n        const target = event.currentTarget.querySelector('.name')\r\n        const { width } = target.getBoundingClientRect()\r\n        if (target.scrollWidth <= Math.ceil(width)) return\r\n\r\n        const name = target.innerHTML.trim()\r\n        game.tooltip.activate(event.currentTarget, { text: name })\r\n    })\r\n\r\n    el.on('mouseleave', event => {\r\n        event.preventDefault()\r\n        game.tooltip.deactivate()\r\n    })\r\n\r\n    el.on('mousedown', event => {\r\n        game.tooltip.deactivate()\r\n    })\r\n}\r\n\r\nexport function editItem(event, actor) {\r\n    event.preventDefault()\r\n    const item = getItemFromEvent(event, actor)\r\n    item?.sheet.render(true, { focus: true })\r\n}\r\n\r\nexport async function deleteItem(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const item = getItemFromEvent(event, actor)\r\n    if (!item) return\r\n\r\n    if (event.ctrlKey) return item.delete()\r\n\r\n    new Dialog({\r\n        title: localize('deleteItem.title'),\r\n        content: `<p>${game.i18n.format('PF2E.DeleteQuestion', { name: item.name })}</p>`,\r\n        buttons: {\r\n            ok: {\r\n                icon: '<i class=\"fa-solid fa-trash\"></i>',\r\n                label: localize('deleteItem.ok'),\r\n                callback: () => item.delete(),\r\n            },\r\n            cancel: {\r\n                icon: '<i class=\"fas fa-times\"></i>',\r\n                label: localize('deleteItem.cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nexport function getItemFromEvent(event, actor) {\r\n    const { itemId } = event.currentTarget.closest('[data-item-id]').dataset\r\n    return actor.items.get(itemId)\r\n}\r\n\r\nexport function getMacros(actor) {\r\n    return actor.isOwner\r\n        ? getFlag(actor, `macros.${game.user.id}`)\r\n              ?.map(uuid => {\r\n                  const macro = fromUuidSync(uuid)\r\n                  if (!macro) return null\r\n                  return { img: macro.img, name: macro.name, uuid }\r\n              })\r\n              .filter(Boolean)\r\n        : undefined\r\n}\r\n\r\nexport function onDroppedMacro(event, actor) {\r\n    const { type, uuid } = TextEditor.getDragEventData(event.originalEvent) ?? {}\r\n    if (type !== 'Macro' || !fromUuidSync(uuid)) return\r\n\r\n    const flag = `macros.${game.user.id}`\r\n    const macros = getFlag(actor, flag)?.slice() ?? []\r\n    if (macros.includes(uuid)) return\r\n\r\n    macros.push(uuid)\r\n    setFlag(actor, flag, macros)\r\n}\r\n\r\nexport function deleteMacro(event, actor) {\r\n    const flag = `macros.${game.user.id}`\r\n    const macros = getFlag(actor, flag)?.slice()\r\n    if (!macros?.length) return\r\n\r\n    const { uuid } = event.currentTarget.closest('.macro').dataset\r\n    const index = macros.indexOf(uuid)\r\n    if (index === -1) return\r\n\r\n    macros.splice(index, 1)\r\n    setFlag(actor, flag, macros)\r\n}\r\n\r\nexport function getUniqueTarget(condition = () => true) {\r\n    const targets = game.user.targets\r\n    const target = targets.size === 1 ? targets.first() : null\r\n    return target && condition(target) ? target : null\r\n}\r\n\r\nexport function filterIn(value, filter) {\r\n    if (!filter) return true\r\n    return value.toLowerCase().includes(filter)\r\n}\r\n\r\nexport function localeCompare(a, b) {\r\n    return a.localeCompare(b, game.i18n.lang)\r\n}\r\n\r\nexport function getCoverEffect(actor) {\r\n    return actor?.itemTypes.effect.find(effect => effect.flags.core?.sourceId === COVER_UUID)\r\n}\r\n", "import { enrichHTML, getHud, localize } from './module.js'\r\nimport { getItemSummary } from './shared.js'\r\n\r\nexport async function popup(title, content, actor) {\r\n    const hud = getHud()\r\n    const el = hud?.element\r\n    if (!el) return\r\n\r\n    el.find('> .popup').remove()\r\n\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = `<div class=\"popup\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">${title}</div>\r\n        <a class=\"observable\" data-action=\"close-popup\"><i class=\"fas fa-times\"></i> ${localize('popup.close')}</a>\r\n    </div>\r\n</div>`\r\n\r\n    const popup = tmp.firstElementChild\r\n    if (typeof content === 'string') {\r\n        content = await enrichHTML(content, actor)\r\n        popup.insertAdjacentHTML('beforeend', content)\r\n    } else {\r\n        popup.append(content)\r\n    }\r\n\r\n    popup.querySelector('[data-action=close-popup]').addEventListener('click', () => popup.remove())\r\n\r\n    el.append(popup)\r\n    hud.lock()\r\n}\r\n\r\nexport async function showItemSummary(el, actor, title) {\r\n    title ??= el.find('.name').html()\r\n    const description = await getItemSummary(el, actor)\r\n    if (description) popup(title.trim(), description, actor)\r\n}\r\n", "/**\r\n * This one is used to create chat message for items directly picked from compendiums\r\n * So it is not technically a direct copy/paste of the system code but a slightly rearanged version\r\n */\r\n\r\nimport { getChatMessageClass } from './classes'\r\nimport { ErrorPF2e, getActionGlyph, traitSlugToObject } from './misc'\r\n\r\nexport async function unownedItemToMessage(event, item, actor, { rollMode = undefined, create = true, data = {} }) {\r\n    const template = `systems/pf2e/templates/chat/${item.type}-card.hbs`\r\n    const token = actor.token\r\n    const nearestItem = event?.currentTarget.closest('.item') ?? {}\r\n    const ChatMessagePF2e = getChatMessageClass()\r\n\r\n    const contextualData = Object.keys(data).length > 0 ? data : nearestItem.dataset || {}\r\n    const templateData = {\r\n        actor: actor,\r\n        tokenId: token ? `${token.parent?.id}.${token.id}` : null,\r\n        item,\r\n        data: await item.getChatData(undefined, contextualData),\r\n    }\r\n\r\n    const chatData = {\r\n        speaker: ChatMessagePF2e.getSpeaker({\r\n            actor: actor,\r\n            token: actor.getActiveTokens(false, true)[0] ?? null,\r\n        }),\r\n        flags: {\r\n            core: {\r\n                canPopout: true,\r\n            },\r\n            pf2e: {\r\n                origin: { uuid: item.uuid, type: item.type },\r\n            },\r\n        },\r\n        type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n    }\r\n\r\n    rollMode ??= event?.ctrlKey || event?.metaKey ? 'blindroll' : game.settings.get('core', 'rollMode')\r\n    if (['gmroll', 'blindroll'].includes(rollMode)) chatData.whisper = ChatMessagePF2e.getWhisperRecipients('GM').map(u => u.id)\r\n    if (rollMode === 'blindroll') chatData.blind = true\r\n\r\n    chatData.content = await renderTemplate(template, templateData)\r\n    return create ? ChatMessagePF2e.create(chatData, { renderSheet: false }) : new ChatMessagePF2e(chatData)\r\n}\r\n\r\nexport async function createSelfEffectMessage(item) {\r\n    if (!item.system.selfEffect) {\r\n        throw ErrorPF2e(\r\n            [\r\n                'Only actions with self-applied effects can be passed to `ActorPF2e#useAction`.',\r\n                'Support will be expanded at a later time.',\r\n            ].join(' ')\r\n        )\r\n    }\r\n\r\n    const { actor, actionCost } = item\r\n    const token = actor.getActiveTokens(true, true).shift() ?? null\r\n\r\n    const ChatMessagePF2e = getChatMessageClass()\r\n    const speaker = ChatMessagePF2e.getSpeaker({ actor, token })\r\n    const flavor = await renderTemplate('systems/pf2e/templates/chat/action/flavor.hbs', {\r\n        action: {\r\n            glyph: getActionGlyph(actionCost),\r\n            title: item.name,\r\n        },\r\n        item,\r\n        traits: item.system.traits.value.map(t => traitSlugToObject(t, CONFIG.PF2E.actionTraits)),\r\n    })\r\n\r\n    // Get a preview slice of the message\r\n    const previewLength = 100\r\n    const descriptionPreview = (() => {\r\n        if (item.actor.pack) return null\r\n        const tempDiv = document.createElement('div')\r\n        const documentTypes = [...CONST.DOCUMENT_LINK_TYPES, 'Compendium', 'UUID']\r\n        const linkPattern = new RegExp(`@(${documentTypes.join('|')})\\\\[([^#\\\\]]+)(?:#([^\\\\]]+))?](?:{([^}]+)})?`, 'g')\r\n        tempDiv.innerHTML = item.description.replace(linkPattern, (_match, ...args) => args[3])\r\n\r\n        return tempDiv.innerText.slice(0, previewLength)\r\n    })()\r\n    const description = {\r\n        full: descriptionPreview && descriptionPreview.length < previewLength ? item.description : null,\r\n        preview: descriptionPreview,\r\n    }\r\n    const content = await renderTemplate('systems/pf2e/templates/chat/action/self-effect.hbs', {\r\n        actor: item.actor,\r\n        description,\r\n    })\r\n    const flags = { pf2e: { context: { type: 'self-effect', item: item.id } } }\r\n\r\n    return ChatMessagePF2e.create({ speaker, flavor, content, flags })\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nexport async function toggleWeaponTrait({ weapon, trait, selection }) {\r\n    const current = weapon.system.traits.toggles[trait].selection\r\n    if (current === selection) return false\r\n\r\n    const item = weapon.actor?.items.get(weapon.id)\r\n    if (item?.isOfType('weapon') && item === weapon) {\r\n        await item.update({ [`system.traits.toggles.${trait}.selection`]: selection })\r\n    } else if (item?.isOfType('weapon') && weapon.altUsageType === 'melee') {\r\n        await item.update({ [`system.meleeUsage.traitToggles.${trait}`]: selection })\r\n    } else {\r\n        const rule = item?.rules.find(r => r.key === 'Strike' && !r.ignored && r.slug === weapon.slug)\r\n        await rule?.toggleTrait({ trait, selection })\r\n    }\r\n\r\n    return true\r\n}\r\n", "/**\r\n * Those are copied from the PF2e system because they are not accesible to us in the global\r\n * adjusted to be independent function\r\n */\r\n\r\nexport const DEGREE_OF_SUCCESS = {\r\n    CRITICAL_FAILURE: 0,\r\n    FAILURE: 1,\r\n    SUCCESS: 2,\r\n    CRITICAL_SUCCESS: 3,\r\n}\r\n\r\nconst DEGREE_ADJUSTMENT_AMOUNTS = {\r\n    LOWER_BY_TWO: -2,\r\n    LOWER: -1,\r\n    INCREASE: 1,\r\n    INCREASE_BY_TWO: 2,\r\n    TO_CRITICAL_FAILURE: 'criticalFailure',\r\n    TO_FAILURE: 'failure',\r\n    TO_SUCCESS: 'success',\r\n    TO_CRITICAL_SUCCESS: 'criticalSuccess',\r\n}\r\n\r\nfunction adjustDegreeOfSuccess(amount, degreeOfSuccess) {\r\n    switch (amount) {\r\n        case 'criticalFailure':\r\n            return 0\r\n        case 'failure':\r\n            return 1\r\n        case 'success':\r\n            return 2\r\n        case 'criticalSuccess':\r\n            return 3\r\n        default:\r\n            return Math.clamped(degreeOfSuccess + amount, 0, 3)\r\n    }\r\n}\r\n\r\nfunction adjustDegreeByDieValue(dieResult, degree) {\r\n    if (dieResult === 20) {\r\n        return adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.INCREASE, degree)\r\n    } else if (dieResult === 1) {\r\n        return adjustDegreeOfSuccess(DEGREE_ADJUSTMENT_AMOUNTS.LOWER, degree)\r\n    }\r\n\r\n    return degree\r\n}\r\n\r\nexport function calculateDegreeOfSuccess(rollTotal, dieResult, dc) {\r\n    if (rollTotal - dc >= 10) {\r\n        return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.CRITICAL_SUCCESS)\r\n    } else if (dc - rollTotal >= 10) {\r\n        return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.CRITICAL_FAILURE)\r\n    } else if (rollTotal >= dc) {\r\n        return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.SUCCESS)\r\n    }\r\n\r\n    return adjustDegreeByDieValue(dieResult, DEGREE_OF_SUCCESS.FAILURE)\r\n}\r\n", "import { localize, modifier, templatePath } from '../module.js'\r\nimport { calculateDegreeOfSuccess } from '../pf2e/success.js'\r\nimport { getUniqueTarget, RANKS } from '../shared.js'\r\n\r\nconst SKILLS = ['arcana', 'crafting', 'medicine', 'nature', 'occultism', 'religion', 'society']\r\n\r\nconst SUCCESS = {\r\n    0: { icon: '<i class=\"fa-solid fa-xmark-large\"></i><i class=\"fa-solid fa-xmark-large\"></i>', name: 'criticalFailure' },\r\n    1: { icon: '<i class=\"fa-solid fa-xmark-large\"></i>', name: 'failure' },\r\n    2: { icon: '<i class=\"fa-solid fa-check\"></i>', name: 'success' },\r\n    3: { icon: '<i class=\"fa-solid fa-check\"></i><i class=\"fa-solid fa-check\"></i>', name: 'criticalSuccess' },\r\n}\r\n\r\nexport async function rollRecallKnowledges(actor) {\r\n    const roll = await new Roll('1d20').evaluate({ async: true })\r\n    const dieResult = roll.dice[0].total\r\n    const dieSuccess = dieResult === 1 ? '0' : dieResult === 20 ? '3' : ''\r\n    const lores = Object.values(actor.skills).filter(skill => skill.lore)\r\n    const target = getUniqueTarget(target => target.actor?.identificationDCs)?.actor\r\n\r\n    let data = {\r\n        dieSuccess,\r\n        dieResult,\r\n        target,\r\n        i18n: str => localize(`actions.recall-knowledge.${str}`),\r\n    }\r\n\r\n    if (target) {\r\n        const { standard, skills, lore } = target.identificationDCs\r\n\r\n        let skillsDCs = standard.progression.slice()\r\n        skillsDCs.length = 4\r\n        skillsDCs = [...skillsDCs]\r\n\r\n        const loresDCs = lore.map(({ progression }) => {\r\n            let dcs = progression\r\n            dcs.length = 6\r\n            return [...dcs]\r\n        })\r\n\r\n        data.skillsDCs = skillsDCs\r\n        data.loresDCs = loresDCs\r\n\r\n        data.skills = await Promise.all(\r\n            skills.map(slug => {\r\n                const skill = actor.skills[slug]\r\n                return rollSkill(skill, dieResult, skillsDCs)\r\n            })\r\n        )\r\n\r\n        data.lores = await Promise.all(lores.map(lore => rollSkill(lore, dieResult)))\r\n    } else {\r\n        data.skills = await Promise.all(\r\n            [...SKILLS.map(slug => actor.skills[slug]), ...lores].map(skill => rollSkill(skill, dieResult))\r\n        )\r\n    }\r\n\r\n    const flavor = await renderTemplate(templatePath('chat/recall-knowledge'), data)\r\n\r\n    ChatMessage.create({\r\n        flavor,\r\n        speaker: ChatMessage.getSpeaker({ actor }),\r\n        rollMode: CONST.DICE_ROLL_MODES.BLIND,\r\n        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\r\n    })\r\n}\r\n\r\nasync function rollSkill(skill, dieResult, dcs) {\r\n    const { rank, label } = skill\r\n\r\n    const roll = await skill.roll({\r\n        createMessage: false,\r\n        skipDialog: true,\r\n        extraRollOptions: ['action:recall-knowledge'],\r\n    })\r\n\r\n    const mod = roll.total - roll.dice[0].total\r\n    const total = dieResult + mod\r\n\r\n    return {\r\n        mod,\r\n        rank,\r\n        label,\r\n        total,\r\n        modifier: modifier(mod),\r\n        rankLabel: RANKS[rank],\r\n        checks: dcs?.map(dc => {\r\n            if (!dc) return `-`\r\n            const success = calculateDegreeOfSuccess(total, dieResult, dc)\r\n            return {\r\n                success,\r\n                icon: SUCCESS[success].icon,\r\n                title: SUCCESS[success].name,\r\n            }\r\n        }),\r\n    }\r\n}\r\n", "import { getSetting, hasFeat, localize, modifier, templatePath } from '../module.js'\r\nimport { unownedItemToMessage } from '../pf2e/item.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { filterIn, localeCompare } from '../shared.js'\r\n\r\nconst MODULE_ID = 'pf2e-token-hud'\r\n\r\nconst UNTRAINED_IMPROVISATION = 'Compendium.pf2e.feats-srd.Item.9jGaBxLUtevZYcZO'\r\n\r\nconst CROWBAR_UUIDS = new Set([\r\n    'Compendium.pf2e.equipment-srd.Item.44F1mfJei4GY8f2X',\r\n    'Compendium.pf2e.equipment-srd.Item.4kz3vhkKPUuXBpxk',\r\n])\r\nconst BON_MOT_UUID = 'Compendium.pf2e.feats-srd.Item.0GF2j54roPFIDmXf'\r\nconst NATURAL_MEDICINE_UUID = 'Compendium.pf2e.feats-srd.Item.WC4xLBGmBsdOdHWu'\r\nconst FOLLOW_THE_EXPERT_UUID = 'Compendium.pf2e.other-effects.Item.VCSpuc3Tf3XWMkd3'\r\n\r\nconst LABELS = {\r\n    initiative: 'PF2E.InitiativeLabel',\r\n    'recall-knowledge': 'PF2E.RecallKnowledge.Label',\r\n    'cover-tracks': 'PF2E.TravelSpeed.ExplorationActivities.CoverTracks',\r\n    earnIncome: `${MODULE_ID}.skills.actions.earnIncome`,\r\n    treatWounds: `${MODULE_ID}.skills.actions.treatWounds`,\r\n    'borrow-arcane-spell': `${MODULE_ID}.skills.actions.borrow-arcane-spell`,\r\n    'identify-magic': `${MODULE_ID}.skills.actions.identify-magic`,\r\n    'identify-alchemy': `${MODULE_ID}.skills.actions.identify-alchemy`,\r\n    'learn-spell': `${MODULE_ID}.skills.actions.learn-spell`,\r\n    'crafting-goods': `${MODULE_ID}.skills.actions.crafting-goods`,\r\n    'staging-performance': `${MODULE_ID}.skills.actions.staging-performance`,\r\n}\r\n\r\nconst ACTIONS_UUIDS = {\r\n    aid: 'Compendium.pf2e.actionspf2e.Item.HCl3pzVefiv9ZKQW',\r\n    'sense-motive': 'Compendium.pf2e.actionspf2e.Item.1xRFPTFtWtGJ9ELw',\r\n    seek: 'Compendium.pf2e.actionspf2e.Item.BlAOM2X92SI6HMtJ',\r\n    balance: 'Compendium.pf2e.actionspf2e.Item.M76ycLAqHoAgbcej',\r\n    escape: 'Compendium.pf2e.actionspf2e.Item.SkZAQRkLLkmBQNB9',\r\n    'follow-the-expert': 'Compendium.pf2e.actionspf2e.Item.tfa4Sh7wcxCEqL29',\r\n    'tumble-through': 'Compendium.pf2e.actionspf2e.Item.21WIfSu7Xd7uKqV8',\r\n    'maneuver-in-flight': 'Compendium.pf2e.actionspf2e.Item.Qf1ylAbdVi1rkc8M',\r\n    squeeze: 'Compendium.pf2e.actionspf2e.Item.kMcV8e5EZUxa6evt',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.Item.1OagaWtBpVXExToo',\r\n    'borrow-arcane-spell': 'Compendium.pf2e.actionspf2e.Item.OizxuPb44g3eHPFh',\r\n    'decipher-writing': 'Compendium.pf2e.actionspf2e.Item.d9gbpiQjChYDYA2L',\r\n    'identify-magic': 'Compendium.pf2e.actionspf2e.Item.eReSHVEPCsdkSL4G',\r\n    'learn-spell': 'Compendium.pf2e.actionspf2e.Item.Q5iIYCFdqJFM31GW',\r\n    climb: 'Compendium.pf2e.actionspf2e.Item.pprgrYQ1QnIDGZiy',\r\n    forceOpen: 'Compendium.pf2e.actionspf2e.Item.SjmKHgI7a5Z9JzBx',\r\n    grapple: 'Compendium.pf2e.actionspf2e.Item.PMbdMWc2QroouFGD',\r\n    highJump: 'Compendium.pf2e.actionspf2e.Item.2HJ4yuEFY1Cast4h',\r\n    longJump: 'Compendium.pf2e.actionspf2e.Item.JUvAvruz7yRQXfz2',\r\n    reposition: 'Compendium.pf2e.actionspf2e.Item.lOE4yjUnETTdaf2T',\r\n    shove: 'Compendium.pf2e.actionspf2e.Item.7blmbDrQFNfdT731',\r\n    swim: 'Compendium.pf2e.actionspf2e.Item.c8TGiZ48ygoSPofx',\r\n    trip: 'Compendium.pf2e.actionspf2e.Item.ge56Lu1xXVFYUnLP',\r\n    disarm: 'Compendium.pf2e.actionspf2e.Item.Dt6B1slsBy8ipJu9',\r\n    repair: 'Compendium.pf2e.actionspf2e.Item.bT3skovyLUtP22ME',\r\n    craft: 'Compendium.pf2e.actionspf2e.Item.rmwa3OyhTZ2i2AHl',\r\n    'crafting-goods': '',\r\n    earnIncome: 'Compendium.pf2e.actionspf2e.Item.QyzlsLrqM0EEwd7j',\r\n    'identify-alchemy': 'Compendium.pf2e.actionspf2e.Item.Q4kdWVOf2ztIBFg1',\r\n    createADiversion: 'Compendium.pf2e.actionspf2e.Item.GkmbTGfg8KcgynOA',\r\n    impersonate: 'Compendium.pf2e.actionspf2e.Item.AJstokjdG6iDjVjE',\r\n    lie: 'Compendium.pf2e.actionspf2e.Item.ewwCglB7XOPLUz72',\r\n    feint: 'Compendium.pf2e.actionspf2e.Item.QNAVeNKtHA0EUw4X',\r\n    bonMot: BON_MOT_UUID,\r\n    gatherInformation: 'Compendium.pf2e.actionspf2e.Item.plBGdZhqq5JBl1D8',\r\n    makeAnImpression: 'Compendium.pf2e.actionspf2e.Item.OX4fy22hQgUHDr0q',\r\n    request: 'Compendium.pf2e.actionspf2e.Item.DCb62iCBrJXy0Ik6',\r\n    coerce: 'Compendium.pf2e.actionspf2e.Item.tHCqgwjtQtzNqVvd',\r\n    demoralize: 'Compendium.pf2e.actionspf2e.Item.2u915NdUyQan6uKF',\r\n    'administer-first-aid': 'Compendium.pf2e.actionspf2e.Item.MHLuKy4nQO2Z4Am1',\r\n    'treat-disease': 'Compendium.pf2e.actionspf2e.Item.TC7OcDa7JlWbqMaN',\r\n    'treat-poison': 'Compendium.pf2e.actionspf2e.Item.KjoCEEmPGTeFE4hh',\r\n    treatWounds: 'Compendium.pf2e.actionspf2e.Item.1kGNdIIhuglAjIp9',\r\n    'command-an-animal': 'Compendium.pf2e.actionspf2e.Item.q9nbyIF0PEBqMtYe',\r\n    perform: 'Compendium.pf2e.actionspf2e.Item.EEDElIyin4z60PXx',\r\n    'staging-performance': '',\r\n    subsist: 'Compendium.pf2e.actionspf2e.Item.49y9Ec4bDii8pcD3',\r\n    'create-forgery': 'Compendium.pf2e.actionspf2e.Item.ftG89SjTSa9DYDOD',\r\n    'conceal-an-object': 'Compendium.pf2e.actionspf2e.Item.qVNVSmsgpKFGk9hV',\r\n    hide: 'Compendium.pf2e.actionspf2e.Item.XMcnh4cSI32tljXa',\r\n    sneak: 'Compendium.pf2e.actionspf2e.Item.VMozDqMMuK5kpoX4',\r\n    senseDirection: 'Compendium.pf2e.actionspf2e.Item.fJImDBQfqfjKJOhk',\r\n    'cover-tracks': 'Compendium.pf2e.actionspf2e.Item.SB7cMECVtE06kByk',\r\n    track: 'Compendium.pf2e.actionspf2e.Item.EA5vuSgJfiHH7plD',\r\n    'palm-an-object': 'Compendium.pf2e.actionspf2e.Item.ijZ0DDFpMkWqaShd',\r\n    steal: 'Compendium.pf2e.actionspf2e.Item.RDXXE7wMrSPCLv5k',\r\n    'disable-device': 'Compendium.pf2e.actionspf2e.Item.cYdz2grcOcRt4jk6',\r\n    'pick-a-lock': 'Compendium.pf2e.actionspf2e.Item.2EE4aF4SZpYf0R6H',\r\n}\r\n\r\nconst DUPLICATE_SKILLS = {\r\n    escape: { slug: 'escape', cost: '1', type: 2, noSkill: true },\r\n    'recall-knowledge': { slug: 'recall-knowledge', cost: '1', secret: true },\r\n    'decipher-writing': { slug: 'decipher-writing', type: 2, trained: true },\r\n    'identify-magic': { slug: 'identify-magic', trained: true },\r\n    'learn-spell': { slug: 'learn-spell', trained: true },\r\n}\r\n\r\nconst SKILLS = [\r\n    {\r\n        slug: 'perception',\r\n        actions: [\r\n            { slug: 'sense-motive', cost: '1', type: 2 },\r\n            { slug: 'seek', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'acrobatics',\r\n        actions: [\r\n            { slug: 'balance', cost: '1', type: 2 },\r\n            // 'escape',\r\n            { slug: 'tumble-through', cost: '1', type: 2 },\r\n            { slug: 'maneuver-in-flight', cost: '1', type: 2, trained: true },\r\n            { slug: 'squeeze', type: 2, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'arcana',\r\n        actions: [\r\n            // 'recall-knowledge',\r\n            { slug: 'borrow-arcane-spell', trained: true },\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'athletics',\r\n        actions: [\r\n            { slug: 'climb', cost: '1', type: 1 },\r\n            // 'escape',\r\n            {\r\n                slug: 'forceOpen',\r\n                cost: '1',\r\n                type: 1,\r\n                map: true,\r\n                modifiers: [\r\n                    {\r\n                        condition: actor =>\r\n                            !actor.itemTypes.equipment.some(item => item.isHeld && CROWBAR_UUIDS.has(item.sourceId)),\r\n                        modifiers: [\r\n                            {\r\n                                slug: 'crowbar-missing',\r\n                                modifier: -2,\r\n                                type: 'circumstance',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            { slug: 'grapple', cost: '1', type: 1, map: true },\r\n            { slug: 'highJump', cost: '1', type: 1 },\r\n            { slug: 'longJump', cost: '1', type: 1 },\r\n            { slug: 'reposition', cost: '1', type: 2, map: true },\r\n            { slug: 'shove', cost: '1', type: 1, map: true },\r\n            { slug: 'swim', cost: '1', type: 1 },\r\n            { slug: 'trip', cost: '1', type: 2, map: true },\r\n            { slug: 'disarm', cost: '1', type: 1, map: true, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'crafting',\r\n        actions: [\r\n            // 'recall-knowledge',\r\n            { slug: 'repair', type: 1 },\r\n            { slug: 'craft', type: 1, trained: true },\r\n            { slug: 'crafting-goods', trained: true },\r\n            { slug: 'earnIncome', type: 3, trained: true },\r\n            { slug: 'identify-alchemy', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'deception',\r\n        actions: [\r\n            { slug: 'createADiversion', cost: '1', type: 1, variants: ['distracting-words', 'gesture', 'trick'] },\r\n            { slug: 'impersonate', type: 1 },\r\n            { slug: 'lie', type: 1 },\r\n            { slug: 'feint', cost: '1', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'diplomacy',\r\n        actions: [\r\n            {\r\n                slug: 'bonMot',\r\n                cost: '1',\r\n                type: 1,\r\n                condition: actor => hasFeat(actor, BON_MOT_UUID),\r\n            },\r\n            { slug: 'gatherInformation', type: 1 },\r\n            { slug: 'makeAnImpression', type: 1 },\r\n            { slug: 'request', cost: '1', type: 1 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'intimidation',\r\n        actions: [\r\n            { slug: 'coerce', type: 2 },\r\n            { slug: 'demoralize', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'medicine',\r\n        actions: [\r\n            {\r\n                slug: 'administer-first-aid',\r\n                cost: '2',\r\n                type: 2,\r\n                variants: ['stabilize', 'stop-bleeding'],\r\n                rollOption: 'administer-first-aid',\r\n            },\r\n            { slug: 'treat-disease', type: 2, trained: true },\r\n            { slug: 'treat-poison', cost: '1', type: 2, trained: true },\r\n            { slug: 'treatWounds', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'nature',\r\n        actions: [\r\n            { slug: 'command-an-animal', cost: '1', type: 2 }, //\r\n            // 'recall-knowledge',\r\n            'identify-magic',\r\n            'learn-spell',\r\n            { slug: 'treatWounds', type: 1, trained: true, condition: actor => hasFeat(actor, NATURAL_MEDICINE_UUID) },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'occultism',\r\n        actions: [\r\n            // 'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'performance',\r\n        actions: [\r\n            {\r\n                slug: 'perform',\r\n                cost: '1',\r\n                type: 1,\r\n                variants: ['acting', 'comedy', 'dance', 'keyboards', 'oratory', 'percussion', 'singing', 'strings', 'winds'],\r\n            },\r\n            { slug: 'staging-performance', trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'religion',\r\n        actions: [\r\n            // 'recall-knowledge', //\r\n            'decipher-writing',\r\n            'identify-magic',\r\n            'learn-spell',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'society',\r\n        actions: [\r\n            // 'recall-knowledge', //\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'create-forgery', type: 2, trained: true },\r\n            'decipher-writing',\r\n        ],\r\n    },\r\n    {\r\n        slug: 'stealth',\r\n        actions: [\r\n            { slug: 'conceal-an-object', cost: '1', type: 2 },\r\n            { slug: 'hide', cost: '1', type: 2 },\r\n            { slug: 'sneak', cost: '1', type: 2 },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'survival',\r\n        actions: [\r\n            { slug: 'senseDirection', type: 1 },\r\n            { slug: 'subsist', type: 2 },\r\n            { slug: 'cover-tracks', trained: true },\r\n            { slug: 'track', type: 1, trained: true },\r\n        ],\r\n    },\r\n    {\r\n        slug: 'thievery',\r\n        actions: [\r\n            { slug: 'palm-an-object', cost: '1', type: 2 },\r\n            { slug: 'steal', cost: '1', type: 2 },\r\n            { slug: 'disable-device', cost: '2', type: 2, trained: true },\r\n            { slug: 'pick-a-lock', cost: '2', type: 2, trained: true },\r\n        ],\r\n    },\r\n]\r\n\r\nSKILLS.forEach(skill => {\r\n    skill.actions = skill.actions.map(action => (typeof action === 'string' ? DUPLICATE_SKILLS[action] : action))\r\n\r\n    const { slug, actions } = skill\r\n    for (let action of actions) {\r\n        const unslugged = action.slug.replace(/-(.)/g, (_, c) => c.toUpperCase()).capitalize()\r\n\r\n        action.skillSlug = slug\r\n        action.uuid = ACTIONS_UUIDS[action.slug]\r\n        action.label = LABELS[action.slug] ?? `PF2E.Actions.${unslugged}.Title`\r\n\r\n        if (action.variants) {\r\n            action.variants = action.variants.map(variant => ({\r\n                slug: variant,\r\n                label: `${MODULE_ID}.skills.actions.${variant}`,\r\n            }))\r\n        } else if (action.map) {\r\n            action.variants = [\r\n                { label: 'PF2E.Roll.Normal' },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -5 },\r\n                { label: 'PF2E.MAPAbbreviationLabel', map: -10 },\r\n            ]\r\n        }\r\n\r\n        action.modifiers?.forEach(({ modifiers }) => {\r\n            modifiers.forEach(modifier => {\r\n                modifier.label = `${MODULE_ID}.skills.modifiers.${modifier.slug}`\r\n            })\r\n        })\r\n    }\r\n})\r\n\r\nexport const SKILLS_SLUGS = SKILLS.map(skill => skill.slug)\r\n\r\nconst SKILLS_MAP = SKILLS.reduce((skills, { slug, actions }) => {\r\n    skills[slug] = {\r\n        slug,\r\n        actions: actions.reduce((actions, action) => {\r\n            actions[action.slug] = action\r\n            return actions\r\n        }, {}),\r\n    }\r\n    return skills\r\n}, {})\r\n\r\nexport const skillActionsUUIDS = new Set(Object.values(ACTIONS_UUIDS).filter(Boolean))\r\n\r\nexport function getSkillLabel(slug) {\r\n    return game.i18n.localize(slug === 'perception' ? 'PF2E.PerceptionLabel' : CONFIG.PF2E.skillList[slug])\r\n}\r\n\r\nexport async function getSkillsData({ actor, filter }) {\r\n    const skills = []\r\n    const isCharacter = actor.isOfType('character')\r\n\r\n    const noUntrained =\r\n        isCharacter && getSetting('untrained') && !actor.itemTypes.feat.some(feat => feat.sourceId === UNTRAINED_IMPROVISATION)\r\n\r\n    for (let i = 0; i < SKILLS.length; i++) {\r\n        const { slug, actions } = SKILLS[i]\r\n        const { label, rank, mod } = actor.getStatistic(slug)\r\n\r\n        const name = game.i18n.localize(label)\r\n        const actionsList = actions\r\n            .filter(\r\n                ({ condition, trained }) =>\r\n                    (!noUntrained || !isCharacter || !trained || actor.skills[slug].rank >= 1) && (!condition || condition(actor))\r\n            )\r\n            .map(action => ({\r\n                ...action,\r\n                name: game.i18n.localize(action.label),\r\n                variants: action.variants?.map(variant => ({\r\n                    ...variant,\r\n                    name: game.i18n.localize(variant.label),\r\n                })),\r\n            }))\r\n\r\n        const passedFilter = filterIn(name, filter)\r\n        let filteredActions = actionsList\r\n        if (!passedFilter) {\r\n            filteredActions = actionsList.filter(\r\n                ({ name, variants }) => filterIn(name, filter) || variants?.some(variant => filterIn(variant.name, filter))\r\n            )\r\n            if (!filteredActions.length) continue\r\n        }\r\n\r\n        skills[i] = {\r\n            slug,\r\n            name,\r\n            rank,\r\n            modifier: modifier(mod),\r\n            actions: passedFilter ? actionsList : filteredActions,\r\n        }\r\n    }\r\n\r\n    skills.sort((a, b) => (a.slug === 'perception' ? -1 : b.slug === 'perception' ? 1 : localeCompare(a.name, b.name)))\r\n\r\n    const lores = Object.values(actor.skills)\r\n        .filter(({ lore, label }) => lore && filterIn(label, filter))\r\n        .map(({ label, rank, mod, slug }) => ({\r\n            slug,\r\n            label,\r\n            rank,\r\n            modifier: modifier(mod),\r\n        }))\r\n\r\n    const loresModifierWidth = lores.reduce((width, lore) => (lore.modifier.length > width ? lore.modifier.length : width), 2)\r\n\r\n    return {\r\n        contentData: {\r\n            follow: localize(`skills.actions.${isFollowingAnExpert(actor) ? 'following' : 'follow'}`),\r\n            skills,\r\n            lores,\r\n            loresModifierWidth,\r\n        },\r\n        doubled: getSetting('skills-columns'),\r\n    }\r\n}\r\n\r\nexport function addSkillsListeners({ el, actor, token, hud }) {\r\n    el.find('[data-action=action-description]').on('click', event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        showItemSummary(action, actor, action.find('.name').children().html())\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    el.find('[data-action=follow-the-expert]').on('click', async event => {\r\n        event.preventDefault()\r\n\r\n        const following = isFollowingAnExpert(actor)\r\n        if (following) return await following.delete()\r\n\r\n        const source = (await fromUuid(FOLLOW_THE_EXPERT_UUID)).toObject()\r\n        setProperty(source, 'flags.core.sourceId', FOLLOW_THE_EXPERT_UUID)\r\n        await actor.createEmbeddedDocuments('Item', [source])\r\n    })\r\n\r\n    el.find('[data-action=roll-skill]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slug } = event.currentTarget.dataset\r\n        actor.getStatistic(slug)?.roll({ event })\r\n    })\r\n\r\n    el.find('[data-action=roll-action]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const { skillSlug, slug } = target.closest('.action').data()\r\n        const { variant, map } = target.data()\r\n        const variants = event.type === 'contextmenu' ? await variantsDialog(skillSlug) : undefined\r\n        if (variants !== null) rollAction({ event, actor, token, skillSlug, slug, variant, map, skill: variants?.selected })\r\n    })\r\n\r\n    el.find('[data-action=action-chat]').on('click', async event => {\r\n        event.preventDefault()\r\n\r\n        const { uuid } = event.currentTarget.closest('.action').dataset\r\n        const item = await fromUuid(uuid)\r\n        if (!item) return\r\n\r\n        unownedItemToMessage(event, item, actor, { create: true })\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n}\r\n\r\nfunction isFollowingAnExpert(actor) {\r\n    return actor.itemTypes.effect.find(effect => effect.sourceId === FOLLOW_THE_EXPERT_UUID)\r\n}\r\n\r\nexport async function variantsDialog(base, dc) {\r\n    const skills = SKILLS_SLUGS.map(slug => ({ slug, label: getSkillLabel(slug) }))\r\n\r\n    const content = await renderTemplate(templatePath('dialogs/variant'), {\r\n        i18n: str => localize(`skills.variant.${str}`),\r\n        dc,\r\n        skills,\r\n        selected: base,\r\n    })\r\n\r\n    return Dialog.prompt({\r\n        title: localize('skills.variant.title'),\r\n        label: localize('skills.variant.button'),\r\n        callback: html => ({ selected: html.find('select').val(), dc: Number(html.find('input').val()) }),\r\n        rejectClose: false,\r\n        content,\r\n        options: { width: 280 },\r\n    })\r\n}\r\n\r\nfunction rollAction({ event, actor, skillSlug, slug, variant, map, skill, token }) {\r\n    const action = SKILLS_MAP[skillSlug].actions[slug]\r\n    const type = action.type === 3 ? 3 : game.pf2e.actions.has(slug) ? 2 : 1\r\n\r\n    skill ??= action.noSkill ? undefined : skillSlug\r\n\r\n    const rollOptions = action.rollOption ? [`action:${action.rollOption}`] : undefined\r\n    if (rollOptions && variant) rollOptions.push(`action:${action.rollOption}:${variant}`)\r\n\r\n    const options = {\r\n        event,\r\n        actors: [actor],\r\n        tokens: [token],\r\n        variant,\r\n        rollOptions,\r\n        rollMode: action.secret ? 'blindroll' : 'roll',\r\n    }\r\n\r\n    options.modifiers = []\r\n\r\n    if (action.modifiers) {\r\n        for (const { condition, modifiers } of action.modifiers) {\r\n            if (condition && !condition(actor)) continue\r\n            for (const modifier of modifiers) {\r\n                options.modifiers.push(new game.pf2e.Modifier(modifier))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action.custom) {\r\n        action.custom(actor, options)\r\n        return\r\n    } else if (!type) {\r\n        actor.getStatistic(skill)?.roll(options)\r\n        return\r\n    }\r\n\r\n    // old actions\r\n    if (type === 1) {\r\n        options.skill = skill\r\n        if (map) options.modifiers.push(new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: map }))\r\n        game.pf2e.actions[slug](options)\r\n    }\r\n    // new actions\r\n    else if (type === 2) {\r\n        options.statistic = skill\r\n        if (map) options.multipleAttackPenalty = map / -5\r\n        game.pf2e.actions.get(slug).use(options)\r\n    }\r\n    // exception for old actions that only accept one actor argument\r\n    else if (type === 3) {\r\n        game.pf2e.actions[slug](actor)\r\n    }\r\n}\r\n", "import { rollRecallKnowledges } from '../actions/recall-knowledge.js'\r\nimport { getSetting, localize } from '../module.js'\r\nimport { unownedItemToMessage } from '../pf2e/item.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, deleteMacro, filterIn, getMacros, onDroppedMacro } from '../shared.js'\r\nimport { variantsDialog, getSkillLabel, SKILLS_SLUGS } from './skills.js'\r\n\r\nexport const extrasUUIDS = {\r\n    aid: 'Compendium.pf2e.actionspf2e.Item.HCl3pzVefiv9ZKQW',\r\n    escape: 'Compendium.pf2e.actionspf2e.Item.SkZAQRkLLkmBQNB9',\r\n    'recall-knowledge': 'Compendium.pf2e.actionspf2e.Item.1OagaWtBpVXExToo',\r\n    'point-out': 'Compendium.pf2e.actionspf2e.Item.sn2hIy1iIJX9Vpgj',\r\n}\r\n\r\nexport async function getExtrasData({ actor, filter }) {\r\n    const { attributes } = actor\r\n    const { initiative } = attributes\r\n\r\n    return {\r\n        contentData: {\r\n            noMacro: localize('extras.no-macro'),\r\n            macros: getMacros(actor)?.filter(macro => filterIn(macro.name, filter)),\r\n            initiative: initiative && {\r\n                selected: initiative.statistic,\r\n                skills: SKILLS_SLUGS.map(slug => ({ slug, label: getSkillLabel(slug) })),\r\n            },\r\n            hasDailies: game.modules.get('pf2e-dailies')?.active,\r\n            hasPerception: game.modules.get('pf2e-perception')?.active,\r\n            uuids: extrasUUIDS,\r\n        },\r\n    }\r\n}\r\n\r\nexport function addExtrasListeners({ el, actor, token, hud }) {\r\n    function action(action, callback, type = 'click') {\r\n        el.find(`[data-action=${action}]`).on(type, event => {\r\n            event.preventDefault()\r\n            callback(event)\r\n        })\r\n    }\r\n\r\n    action('action-description', event => {\r\n        const action = $(event.currentTarget).closest('.row')\r\n        showItemSummary(action, actor)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    addNameTooltipListeners(el.find('.macro'))\r\n\r\n    async function getMacro(event) {\r\n        const { uuid } = event.currentTarget.closest('.macro').dataset\r\n        return fromUuid(uuid)\r\n    }\r\n\r\n    action('delete-macro', event => deleteMacro(event, actor))\r\n\r\n    action('edit-macro', async event => {\r\n        const macro = await getMacro(event)\r\n        macro?.sheet.render(true)\r\n    })\r\n\r\n    action('use-macro', async event => {\r\n        const macro = await getMacro(event)\r\n        macro?.execute({ actor, token })\r\n    })\r\n\r\n    el.on('drop', event => onDroppedMacro(event, actor))\r\n\r\n    action('action-chat', async event => {\r\n        const { uuid } = event.currentTarget.closest('.row').dataset\r\n        const item = await fromUuid(uuid)\r\n        if (!item) return\r\n\r\n        unownedItemToMessage(event, item, actor, { create: true })\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n\r\n    el.find('input[name], select[name]').on('change', async event => {\r\n        const target = event.currentTarget\r\n        const value = target.type === 'number' ? target.valueAsNumber : target.value\r\n        await actor.update({ [target.name]: value })\r\n    })\r\n\r\n    action('roll-initiative', async event => {\r\n        await actor.initiative.roll({ event })\r\n    })\r\n\r\n    action('prepare-dailies', event => {\r\n        const dailies = game.modules.get('pf2e-dailies')\r\n        if (dailies?.active) dailies.api.openDailiesInterface(actor)\r\n    })\r\n\r\n    action('rest-for-the-night', event => {\r\n        game.pf2e.actions.restForTheNight({ actors: [actor], tokens: [token] })\r\n    })\r\n\r\n    action('roll-recall-knowledge', event => {\r\n        rollRecallKnowledges(actor)\r\n    })\r\n\r\n    action(\r\n        'roll-aid',\r\n        async event => {\r\n            const variants = await variantsDialog(null, 15)\r\n            const note = { text: '@UUID[Compendium.pf2e.other-effects.Item.AHMUpMbaVkZ5A1KX]' }\r\n            if (variants !== null) {\r\n                game.pf2e.actions.get('aid').use({\r\n                    event,\r\n                    actors: [actor],\r\n                    tokens: [token],\r\n                    statistic: variants?.selected,\r\n                    difficultyClass: { value: variants?.dc },\r\n                    notes: [note],\r\n                })\r\n            }\r\n        },\r\n        'click contextmenu'\r\n    )\r\n\r\n    action('roll-point-out', event => {\r\n        game.pf2e.actions.get('point-out').use({ event, actors: [actor], tokens: [token] })\r\n    })\r\n\r\n    action(\r\n        'roll-escape',\r\n        async event => {\r\n            const variants = event.type === 'contextmenu' ? await variantsDialog() : undefined\r\n            const multipleAttackPenalty = $(event.currentTarget).data().map\r\n            if (variants === null) return\r\n            game.pf2e.actions\r\n                .get('escape')\r\n                .use({ event, actors: [actor], tokens: [token], statistic: variants?.selected, multipleAttackPenalty })\r\n        },\r\n        'click contextmenu'\r\n    )\r\n}\r\n", "import { enrichHTML, getSetting, localize, templatePath } from '../module.js'\r\nimport { createSelfEffectMessage } from '../pf2e/item.js'\r\nimport { getActionIcon } from '../pf2e/misc.js'\r\nimport { toggleWeaponTrait } from '../pf2e/weapon.js'\r\nimport { popup, showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, filterIn, getItemFromEvent, localeCompare } from '../shared.js'\r\nimport { extrasUUIDS } from './extras.js'\r\nimport { skillActionsUUIDS } from './skills.js'\r\n\r\nconst SECTIONS_TYPES = {\r\n    action: { order: 0, label: 'PF2E.ActionsActionsHeader', actionLabel: 'PF2E.ActionTypeAction' },\r\n    reaction: { order: 1, label: 'PF2E.ActionsReactionsHeader', actionLabel: 'PF2E.ActionTypeReaction' },\r\n    free: { order: 2, label: 'PF2E.ActionsFreeActionsHeader', actionLabel: 'PF2E.ActionTypeFree' },\r\n    passive: { order: 3, label: 'PF2E.NPC.PassivesLabel', actionLabel: 'PF2E.ActionTypePassive' },\r\n    exploration: { order: 3, label: 'PF2E.TravelSpeed.ExplorationActivity', actionLabel: 'PF2E.TabActionsExplorationLabel' },\r\n}\r\n\r\nexport async function getActionsData({ hud, actor, filter }) {\r\n    const isCharacter = actor.isOfType('character')\r\n    const toggles = actor.synthetics.toggles.slice()\r\n    const sorting = getSetting('actions')\r\n\r\n    const stances = (await getStancesModuleApi()?.getStances(actor))?.sort((a, b) => localeCompare(a.name, b.name))\r\n\r\n    const heroActions = isCharacter ? await getHeroActionsApi()?.getHeroActions(actor) : undefined\r\n    const heroDiff = heroActions ? actor.heroPoints.value - heroActions.length : undefined\r\n\r\n    const isOwner = actor.isOwner\r\n    const rollData = actor.getRollData()\r\n\r\n    const strikes = actor.system.actions\r\n        ? await Promise.all(\r\n              actor.system.actions.map(async (strike, index) => ({\r\n                  ...strike,\r\n                  index,\r\n                  visible: !isCharacter || strike.visible,\r\n                  damageFormula: await strike.damage?.({ getFormula: true }),\r\n                  criticalFormula: await strike.critical?.({ getFormula: true }),\r\n                  description: strike.description\r\n                      ? await enrichHTML(strike.description, actor, { rollData, isOwner })\r\n                      : undefined,\r\n                  altUsages:\r\n                      strike.altUsages &&\r\n                      (await Promise.all(\r\n                          strike.altUsages.map(async altUsage => ({\r\n                              ...altUsage,\r\n                              usage: altUsage.item.isThrown ? 'thrown' : 'melee',\r\n                              damageFormula: await altUsage.damage?.({ getFormula: true }),\r\n                              criticalFormula: await altUsage.critical?.({ getFormula: true }),\r\n                          }))\r\n                      )),\r\n              }))\r\n          )\r\n        : undefined\r\n\r\n    const blast = isCharacter ? new game.pf2e.ElementalBlast(actor) : undefined\r\n    const blasts = blast\r\n        ? (\r\n              await Promise.all(\r\n                  blast.configs.map(async config => {\r\n                      const damageType = config.damageTypes.find(damage => damage.selected)?.value ?? 'untyped'\r\n\r\n                      const formulaFor = (outcome, melee = true) => {\r\n                          return blast.damage({\r\n                              element: config.element,\r\n                              damageType,\r\n                              melee,\r\n                              outcome,\r\n                              getFormula: true,\r\n                          })\r\n                      }\r\n\r\n                      return {\r\n                          ...config,\r\n                          damageType,\r\n                          formula: {\r\n                              melee: {\r\n                                  damage: await formulaFor('success'),\r\n                                  critical: await formulaFor('criticalSuccess'),\r\n                              },\r\n                              ranged: {\r\n                                  damage: await formulaFor('success', false),\r\n                                  critical: await formulaFor('criticalSuccess', false),\r\n                              },\r\n                          },\r\n                      }\r\n                  })\r\n              )\r\n          ).sort((a, b) => localeCompare(a.label, b.label))\r\n        : undefined\r\n\r\n    let sections = {}\r\n\r\n    const actions = isCharacter ? getCharacterActions(actor, stances) : getNpcActions(actor)\r\n    for (const action of actions) {\r\n        if (!filterIn(action.name, filter)) continue\r\n\r\n        if (sorting !== 'split') {\r\n            sections.action ??= []\r\n            sections.action.push(action)\r\n        } else {\r\n            sections[action.type] ??= []\r\n            sections[action.type].push(action)\r\n        }\r\n    }\r\n\r\n    sections = Object.entries(sections).map(([type, actions]) => {\r\n        actions.forEach(action => {\r\n            action.img = getActionIcon(action.cost)\r\n            action.typeLabel = SECTIONS_TYPES[action.type].actionLabel\r\n        })\r\n\r\n        if (sorting !== 'type') {\r\n            actions.sort((a, b) => localeCompare(a.name, b.name))\r\n        } else {\r\n            actions.sort((a, b) => {\r\n                const orderA = SECTIONS_TYPES[a.type].order\r\n                const orderB = SECTIONS_TYPES[b.type].order\r\n                return orderA === orderB ? localeCompare(a.name, b.name) : orderA - orderB\r\n            })\r\n        }\r\n\r\n        return { type, actions, label: SECTIONS_TYPES[type].label }\r\n    })\r\n\r\n    if (sorting === 'split') sections.sort((a, b) => SECTIONS_TYPES[a.type].order - SECTIONS_TYPES[b.type].order)\r\n\r\n    if (toggles.length || stances?.length || strikes?.length || blasts?.length || sections.length || heroActions?.length) {\r\n        const nb =\r\n            Number((stances?.length ?? 0) > 0) +\r\n            Number((strikes?.length ?? 0) > 0) +\r\n            Number((blasts?.length ?? 0) > 0) +\r\n            sections.length +\r\n            Number((heroActions?.length ?? 0) > 0)\r\n\r\n        return {\r\n            contentData: {\r\n                toggles,\r\n                stances,\r\n                strikes,\r\n                blasts,\r\n                sections,\r\n                heroActions: heroActions && {\r\n                    actions: heroActions,\r\n                    draw: Math.max(heroDiff, 0),\r\n                    discard: Math.abs(Math.min(heroDiff, 0)),\r\n                    canTrade: heroActions.length && canTradeHeroActions(),\r\n                },\r\n                i18n: str => localize(`actions.${str}`),\r\n                variantLabel: label => label.replace(/.+\\((.+)\\)/, '$1'),\r\n                damageTypes: CONFIG.PF2E.damageTypes,\r\n            },\r\n            doubled: nb > 1 && getSetting('actions-columns'),\r\n            classes: [getSetting('actions-colors') ? 'attack-damage-system-colors' : ''],\r\n        }\r\n    }\r\n}\r\n\r\nexport function addActionsListeners({ el, actor, hud }) {\r\n    addNameTooltipListeners(el.find('.toggle'))\r\n    addNameTooltipListeners(el.find('.strike'))\r\n    addNameTooltipListeners(el.find('.action'))\r\n\r\n    function action(action, callback, type = 'click') {\r\n        action = typeof action === 'string' ? [action] : action\r\n        action = action.map(x => `[data-action=${x}]`).join(', ')\r\n        return el.find(action).on(type, event => {\r\n            event.preventDefault()\r\n            callback(event)\r\n        })\r\n    }\r\n\r\n    function getStrike(event) {\r\n        const strikeEl = event.currentTarget.closest('.strike')\r\n        const strike = actor.system.actions[strikeEl.dataset.index]\r\n        if (!strike) return null\r\n\r\n        const { altUsage } = event.currentTarget.dataset\r\n        return ['melee', 'thrown'].includes(altUsage)\r\n            ? strike.altUsages?.find(s => (altUsage === 'thrown' ? s.item.isThrown : s.item.isMelee)) ?? null\r\n            : strike\r\n    }\r\n\r\n    function getUuid(event) {\r\n        return $(event.currentTarget).closest('.action').data().uuid\r\n    }\r\n\r\n    action('action-description', async event => {\r\n        const action = $(event.currentTarget).closest('.action')\r\n        showItemSummary(action, actor)\r\n    })\r\n\r\n    action('hero-action-description', async event => {\r\n        const uuid = getUuid(event)\r\n        const { description, name } = (await getHeroActionsApi()?.getHeroActionDetails(uuid)) ?? {}\r\n        if (description) popup(name, description, actor)\r\n    })\r\n\r\n    action('strike-description', async event => {\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const description = document.createElement('div')\r\n        description.classList.add('description')\r\n        // this one is a copy of the system template, there is nothing to generate it\r\n        description.innerHTML = await renderTemplate(templatePath('strike-description'), strike)\r\n\r\n        popup(strike.label, description, actor)\r\n    })\r\n\r\n    action('blast-description', async event => {\r\n        const blast = event.currentTarget.closest('.blast')\r\n        showItemSummary($(blast), actor)\r\n    })\r\n\r\n    action('trait-description', event => {\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const trait = strike.traits[index]\r\n        if (!trait) return\r\n\r\n        const description = game.i18n.localize(trait.description)\r\n        if (description) popup(game.i18n.localize(trait.label), description, actor)\r\n    })\r\n\r\n    action('stance-description', event => {\r\n        const stance = $(event.currentTarget).closest('.action')\r\n        showItemSummary(stance, actor, stance.data().itemName)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    action('use-action', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item?.isOfType('action', 'feat')) {\r\n            createSelfEffectMessage(item)\r\n        }\r\n    })\r\n\r\n    action('stance-chat', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n\r\n        item.toMessage(event, { create: true })\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n\r\n    action('stance-toggle', event => {\r\n        const { effectUuid } = event.currentTarget.closest('.action').dataset\r\n        getStancesModuleApi()?.toggleStance(actor, effectUuid)\r\n    })\r\n\r\n    action('exploration-toggle', event => {\r\n        const actionId = event.currentTarget.closest('.action').dataset.itemId\r\n\r\n        const exploration = actor.system.exploration.filter(id => actor.items.has(id))\r\n        if (!exploration.findSplice(id => id === actionId)) {\r\n            exploration.push(actionId)\r\n        }\r\n\r\n        actor.update({ 'system.exploration': exploration })\r\n    })\r\n\r\n    action('action-chat', event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n\r\n        item.toMessage(event, { create: true })\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n\r\n    action('hero-action-chat', async event => {\r\n        const api = getHeroActionsApi()\r\n        if (!api) return\r\n\r\n        api.sendActionToChat(actor, getUuid(event))\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n\r\n    action('draw-hero-action', async event => {\r\n        await getHeroActionsApi()?.drawHeroActions(actor)\r\n    })\r\n\r\n    action('use-hero-action', async event => {\r\n        await getHeroActionsApi()?.useHeroAction(actor, getUuid(event))\r\n    })\r\n\r\n    action('discard-hero-action', async event => {\r\n        await getHeroActionsApi()?.discardHeroActions(actor, getUuid(event))\r\n    })\r\n\r\n    action('trade-hero-action', async event => {\r\n        getHeroActionsApi()?.tradeHeroAction(actor)\r\n    })\r\n\r\n    action('strike-attack', event => {\r\n        const { index, altUsage } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n\r\n        strike?.variants[index].roll({ event, altUsage })\r\n        if (getSetting('attack-close')) hud.close()\r\n    })\r\n\r\n    action(['strike-damage', 'strike-critical'], event => {\r\n        const { action } = event.currentTarget.dataset\r\n        const strike = getStrike(event)\r\n\r\n        strike?.[action === 'strike-damage' ? 'damage' : 'critical']({ event })\r\n        if (getSetting('attack-close')) hud.close()\r\n    })\r\n\r\n    action(['toggle-roll-option', 'set-suboption'], event => {\r\n        const toggle = event.currentTarget.closest('.toggle')\r\n        const { domain, option, itemId } = toggle.dataset\r\n        const suboption = toggle.querySelector('select')?.value ?? null\r\n        actor.toggleRollOption(domain, option, itemId ?? null, toggle.querySelector('input').checked, suboption)\r\n    })\r\n\r\n    action('strike-auxiliary', event => {\r\n        if (event.currentTarget !== event.target) return\r\n\r\n        const strike = getStrike(event)\r\n        if (!strike) return\r\n\r\n        const { index } = event.currentTarget.dataset\r\n        const modular = event.currentTarget.querySelector('select')?.value ?? null\r\n\r\n        strike.auxiliaryActions?.[index]?.execute({ selection: modular })\r\n    })\r\n\r\n    action('toggle-versatile', event => {\r\n        const weapon = getStrike(event)?.item\r\n        if (!weapon) return\r\n\r\n        const target = event.currentTarget\r\n        const { value } = target.dataset\r\n        const baseType = weapon?.system.damage.damageType ?? null\r\n        const selection = target.classList.contains('selected') || value === baseType ? null : value\r\n\r\n        toggleWeaponTrait({ trait: 'versatile', weapon, selection })\r\n    })\r\n\r\n    action(\r\n        'strike-ammo',\r\n        async event => {\r\n            const weapon = getStrike(event)?.item\r\n            if (!weapon) return\r\n\r\n            const ammo = actor.items.get(event.currentTarget.value)\r\n            await weapon.update({ system: { selectedAmmoId: ammo?.id ?? null } })\r\n        },\r\n        'change'\r\n    )\r\n\r\n    if (!actor.isOfType('character')) return\r\n\r\n    const selectors = ['roll-attack', 'roll-damage', 'set-damage-type'].map(s => `[data-action=${s}]`).join(',')\r\n    el.find('.blast').each((_, blastEl) => {\r\n        const { element, damageType } = blastEl.dataset\r\n        const blast = new game.pf2e.ElementalBlast(actor)\r\n\r\n        $(blastEl)\r\n            .find(selectors)\r\n            .on('click', async event => {\r\n                event.preventDefault()\r\n\r\n                const dataset = event.currentTarget.dataset\r\n                const melee = dataset.melee === 'true'\r\n\r\n                switch (dataset.action) {\r\n                    case 'roll-attack': {\r\n                        const mapIncreases = Math.clamped(Number(dataset.mapIncreases), 0, 2)\r\n                        blast.attack({ mapIncreases: Math.clamped(mapIncreases, 0, 2), element, damageType, melee, event })\r\n                        break\r\n                    }\r\n                    case 'roll-damage': {\r\n                        blast.damage({ element, damageType, melee, outcome: dataset.outcome, event })\r\n                        break\r\n                    }\r\n                    case 'set-damage-type': {\r\n                        blast.setDamageType({ element, damageType: dataset.value })\r\n                    }\r\n                }\r\n\r\n                if (['roll-attack', 'roll-damage'].includes(dataset.action) && getSetting('attack-close')) hud.close()\r\n            })\r\n    })\r\n}\r\n\r\nfunction getToolBeltModule(setting) {\r\n    const module = game.modules.get('pf2e-toolbelt')\r\n    return module?.active && game.settings.get('pf2e-toolbelt', setting) ? module : undefined\r\n}\r\n\r\nfunction getToolBeltApi(setting) {\r\n    return getToolBeltModule(setting)?.api\r\n}\r\n\r\nfunction getStancesModuleApi() {\r\n    const module = game.modules.get('pf2e-stances')\r\n    return module?.active ? module.api : getToolBeltApi('stances')?.stances\r\n}\r\n\r\nfunction getHeroActionsApi() {\r\n    const module = game.modules.get('pf2e-hero-actions')\r\n    return module?.active ? module.api : getToolBeltApi('hero')?.heroActions\r\n}\r\n\r\nfunction canTradeHeroActions() {\r\n    if (game.modules.get('pf2e-hero-actions')?.active) return game.settings.get('pf2e-hero-actions', 'trade')\r\n    if (getToolBeltModule('hero')) return game.settings.get('pf2e-toolbelt', 'hero-trade')\r\n}\r\n\r\nfunction getCharacterActions(actor, stances) {\r\n    const stancesUUIDS =\r\n        getStancesModuleApi()?.getActionsUUIDS?.() ??\r\n        (stances?.some(stance => stance.actionUUID) ? new Set(stances.map(({ actionUUID }) => actionUUID)) : undefined) ??\r\n        new Set()\r\n\r\n    const actionsUUIDS = new Set([...stancesUUIDS, ...skillActionsUUIDS, ...Object.values(extrasUUIDS)])\r\n    const actions = actor.itemTypes.action\r\n    const feats = actor.itemTypes.feat.filter(item => item.actionCost)\r\n    const inParty = actor.parties.size > 0\r\n    const explorations = actor.system.exploration\r\n\r\n    return [...actions, ...feats]\r\n        .map(action => {\r\n            const sourceId = action.sourceId\r\n            const actionId = action.id\r\n            const actionCost = action.actionCost\r\n            const traits = action.system.traits.value\r\n            const isExploration = traits.includes('exploration')\r\n\r\n            return {\r\n                sourceId,\r\n                id: actionId,\r\n                type: actionCost?.type ?? (isExploration ? 'exploration' : 'free'),\r\n                cost: actionCost,\r\n                name: action.name,\r\n                isExploration,\r\n                isDowntime: traits.includes('downtime'),\r\n                isActive: isExploration && explorations.includes(actionId),\r\n                hasEffect: !!action.system.selfEffect,\r\n            }\r\n        })\r\n        .filter(\r\n            action =>\r\n                !action.isDowntime &&\r\n                (inParty || !action.isExploration) &&\r\n                (action.isExploration || !actionsUUIDS.has(action.sourceId))\r\n        )\r\n}\r\n\r\nfunction getNpcActions(actor) {\r\n    return actor.itemTypes.action.map(item => {\r\n        const actionCost = item.actionCost\r\n        const actionType = actionCost?.type ?? 'passive'\r\n        const hasAura =\r\n            actionType === 'passive' &&\r\n            (item.system.traits.value.includes('aura') || !!item.system.rules.find(r => r.key === 'Aura'))\r\n\r\n        return {\r\n            id: item.id,\r\n            type: actionType,\r\n            cost: actionCost,\r\n            name: item.name,\r\n            hasDeathNote: item.system.deathNote,\r\n            hasAura,\r\n            hasEffect: !!item.system.selfEffect,\r\n        }\r\n    })\r\n}\r\n", "import { enrichHTML, getSetting, modifier } from '../module.js'\r\nimport { listenInlineRoll } from '../pf2e/inline-roll.js'\r\nimport { showItemSummary } from '../popup.js'\r\n\r\nexport async function getHazardData({ actor }) {\r\n    const { system } = actor\r\n    const { details, traits, attributes } = system\r\n    const { stealth } = attributes\r\n    const { description, disable, routine, reset, isComplex } = details\r\n    const rollData = actor.getRollData()\r\n    const isOwner = actor.isOwner\r\n\r\n    const enrich = async str => {\r\n        return enrichHTML(str, actor, { isOwner, rollData })\r\n    }\r\n\r\n    return {\r\n        contentData: {\r\n            description: await enrich(description),\r\n            disable: await enrich(disable),\r\n            routine: await enrich(routine),\r\n            reset: await enrich(reset),\r\n            isComplex,\r\n            rarity: { value: traits.rarity, label: CONFIG.PF2E.rarityTraits[traits.rarity] },\r\n            traits: traits.value.map(trait => CONFIG.PF2E.hazardTraits[trait]),\r\n            stealth: modifier(stealth.value),\r\n        },\r\n        style: { ['--max-width']: getSetting('hazard-width') + 'em' },\r\n    }\r\n}\r\n\r\nexport function addHazardListeners({ el, actor }) {\r\n    el.find('[data-action=action-description]').on('click', event => {\r\n        event.preventDefault()\r\n        const action = $(event.currentTarget).closest('.action')\r\n        showItemSummary(action, actor)\r\n    })\r\n\r\n    listenInlineRoll(el[0], actor)\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    el.find('[data-action=roll-initiative').on('click', event => {\r\n        event.preventDefault()\r\n        actor.initiative.roll({ event })\r\n    })\r\n}\r\n", "/**\r\n * Those are directly copied from the PF2e system because they are not accesible to us in the global\r\n */\r\n\r\nimport { getChatMessageClass } from './classes.js'\r\nimport { adjustDCByRarity, calculateDC } from './dc.js'\r\n\r\nconst MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'])\r\n\r\nfunction setHasElement(set, value) {\r\n    return set.has(value)\r\n}\r\n\r\nfunction getDcRarity(item) {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction getMagicTraditions(item) {\r\n    const traits = item.system.traits.value\r\n    return new Set(traits.filter(t => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\r\n    const result = {\r\n        occult: baseDC,\r\n        primal: baseDC,\r\n        divine: baseDC,\r\n        arcane: baseDC,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDC + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arcana: result.arcane, nature: result.primal, religion: result.divine, occultism: result.occult }\r\n}\r\n\r\nfunction getItemIdentificationDCs(item, { proficiencyWithoutLevel = false, notMatchingTraditionModifier }) {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { crafting: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\nfunction objectHasKey(obj, key) {\r\n    return (typeof key === 'string' || typeof key === 'number') && key in obj\r\n}\r\n\r\nexport class IdentifyItemPopup extends FormApplication {\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            id: 'identify-item',\r\n            title: game.i18n.localize('PF2E.identification.Identify'),\r\n            template: 'systems/pf2e/templates/actors/identify-item.hbs',\r\n            width: 'auto',\r\n            classes: ['identify-popup'],\r\n        }\r\n    }\r\n\r\n    get item() {\r\n        return this.object\r\n    }\r\n\r\n    async getData() {\r\n        const item = this.object\r\n        const notMatchingTraditionModifier = game.settings.get('pf2e', 'identifyMagicNotMatchingTraditionModifier')\r\n        const proficiencyWithoutLevel = game.settings.get('pf2e', 'proficiencyVariant') === 'ProficiencyWithoutLevel'\r\n        const dcs = getItemIdentificationDCs(item, { proficiencyWithoutLevel, notMatchingTraditionModifier })\r\n\r\n        return {\r\n            ...(await super.getData()),\r\n            isMagic: item.isMagical,\r\n            isAlchemical: item.isAlchemical,\r\n            dcs,\r\n        }\r\n    }\r\n\r\n    activateListeners($form) {\r\n        $form.find('button.update-identification').on('click', event => {\r\n            const $button = $(event.delegateTarget)\r\n            this.submit({ updateData: { status: $button.val() } })\r\n        })\r\n        $form.find('button.post-skill-checks').on('click', async () => {\r\n            const item = this.item\r\n            const itemImg = item.system.identification.unidentified.img\r\n            const itemName = item.system.identification.unidentified.name\r\n            const identifiedName = item.system.identification.identified.name\r\n            const skills = $('div#identify-item')\r\n                .find('tr')\r\n                .toArray()\r\n                .flatMap(row => {\r\n                    const slug = row.dataset.skill\r\n                    const dc = Number(row.dataset.dc)\r\n                    if (!(Number.isInteger(dc) && objectHasKey(CONFIG.PF2E.skillList, slug))) {\r\n                        return []\r\n                    }\r\n                    const name = game.i18n.localize(CONFIG.PF2E.skillList[slug])\r\n\r\n                    return { slug, name, dc }\r\n                })\r\n\r\n            const actionOption = item.isMagical ? 'action:identify-magic' : item.isAlchemical ? 'action:identify-alchemy' : null\r\n\r\n            const content = await renderTemplate('systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs', {\r\n                itemImg,\r\n                itemName,\r\n                identifiedName,\r\n                // We don't want to install remeda just for that so we do our own thing\r\n                // rollOptions: R.compact(['concentrate', 'exploration', 'secret', actionOption]),\r\n                rollOptions: ['concentrate', 'exploration', 'secret', actionOption].filter(Boolean),\r\n                skills,\r\n            })\r\n\r\n            await getChatMessageClass().create({ user: game.user.id, content })\r\n        })\r\n    }\r\n\r\n    async _updateObject(_event, formData) {\r\n        const status = formData['status']\r\n        if (status === 'identified') {\r\n            await this.item.setIdentificationStatus(status)\r\n        }\r\n    }\r\n}\r\n", "import { MODULE_ID, getSetting } from './module'\r\n\r\nexport async function createTooltip({\r\n    target,\r\n    selected,\r\n    direction = 'DOWN',\r\n    onCreate,\r\n    onDismiss,\r\n    onClick,\r\n    content,\r\n    cssClass = [],\r\n    locked = false,\r\n}) {\r\n    return new Promise(resolve => {\r\n        const tooltipClass = `${MODULE_ID}-tooltip`\r\n\r\n        const exist = document.body.querySelectorAll(`.${tooltipClass}:not(#tooltip)`)\r\n        for (const el of exist) {\r\n            dismissTooltip(el)\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            cssClass = typeof cssClass === 'string' ? [cssClass] : cssClass\r\n            if (selected) cssClass.push('selection-tooltip')\r\n\r\n            if (Array.isArray(content)) {\r\n                content = content\r\n                    .map(({ value, label }) => {\r\n                        const selectedClass = value === selected ? 'class=\"selected\"' : ''\r\n                        return `<li><a  ${selectedClass} data-value=\"${value}\">${label}</a></li>`\r\n                    })\r\n                    .join('')\r\n            }\r\n\r\n            let tooltip\r\n\r\n            if (content instanceof HTMLElement) {\r\n                tooltip = content\r\n            } else {\r\n                tooltip = document.createElement('ul')\r\n                tooltip.innerHTML = content\r\n            }\r\n\r\n            tooltip.style.setProperty('--font-size', getSetting('scale') + 'px')\r\n\r\n            if (cssClass.length) {\r\n                tooltip.classList.add(...cssClass.map(c => `${MODULE_ID}-${c}`))\r\n            }\r\n\r\n            if (onDismiss) {\r\n                new MutationObserver(function () {\r\n                    if (!document.body.contains(tooltip)) {\r\n                        onDismiss()\r\n                        this.disconnect()\r\n                    }\r\n                }).observe(document.body, { childList: true })\r\n            }\r\n\r\n            if (onClick) {\r\n                locked = true\r\n\r\n                tooltip.querySelectorAll('[data-value]').forEach(el => {\r\n                    el.addEventListener('click', async event => {\r\n                        event.preventDefault()\r\n                        const target = event.currentTarget\r\n                        dismissTooltip(target)\r\n                        onClick?.(target.dataset.value)\r\n                    })\r\n                })\r\n            }\r\n\r\n            game.tooltip.activate(target, { content: tooltip, direction, locked, cssClass: tooltipClass })\r\n\r\n            onCreate?.(tooltip)\r\n\r\n            resolve(tooltip)\r\n        })\r\n    })\r\n}\r\n\r\nexport function dismissTooltip(el) {\r\n    el = el.closest(`.${MODULE_ID}-tooltip`)\r\n    game.tooltip.dismissLockedTooltip(el)\r\n}\r\n", "import { getFlag, getSetting, localize, setFlag } from '../module.js'\r\nimport { IdentifyItemPopup } from '../pf2e/identify.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, deleteItem, editItem, filterIn, getItemFromEvent, localeCompare } from '../shared.js'\r\nimport { createTooltip, dismissTooltip } from '../tooltip.js'\r\n\r\nconst ITEMS_TYPES = {\r\n    weapon: { order: 0, label: 'PF2E.InventoryWeaponsHeader' },\r\n    armor: { order: 1, label: 'PF2E.InventoryArmorHeader' },\r\n    consumable: { order: 2, label: 'PF2E.InventoryConsumablesHeader' },\r\n    equipment: { order: 3, label: 'PF2E.InventoryEquipmentHeader' },\r\n    treasure: { order: 4, label: 'PF2E.InventoryTreasureHeader' },\r\n    backpack: { order: 5, label: 'PF2E.InventoryBackpackHeader' },\r\n}\r\n\r\nexport async function getItemsData({ actor, filter }) {\r\n    const { contents, coins, totalWealth, bulk, invested } = actor.inventory\r\n    const openedContainers = getSetting('containers') || (getFlag(actor, `containers.${game.user.id}`) ?? [])\r\n    const containers = {}\r\n    let categories = {}\r\n\r\n    for (const item of contents) {\r\n        if (!ITEMS_TYPES[item.type]) continue\r\n\r\n        const containerId = item.system.containerId\r\n        if (item.type !== 'backpack' && containerId && (openedContainers === true || openedContainers.includes(containerId))) {\r\n            containers[containerId] ??= []\r\n            containers[containerId].push(item)\r\n        } else {\r\n            categories[item.type] ??= []\r\n            categories[item.type].push(item)\r\n        }\r\n    }\r\n\r\n    categories = Object.entries(categories)\r\n        .map(([type, items]) => {\r\n            items.sort((a, b) => localeCompare(a.name, b.name))\r\n            if (type === 'backpack') {\r\n                for (let i = items.length - 1; i >= 0; i--) {\r\n                    const container = items[i]\r\n                    const contained = containers[container.id]?.filter(item => filterIn(item.name, filter))\r\n                    if (!contained?.length) {\r\n                        if (!filterIn(container.name, filter)) items.splice(i, 1)\r\n                        continue\r\n                    }\r\n                    contained.sort((a, b) => localeCompare(a.name, b.name))\r\n                    items.splice(i + 1, 0, ...contained)\r\n                }\r\n            } else items = items.filter(item => filterIn(item.name, filter))\r\n            return {\r\n                type,\r\n                items,\r\n                label: ITEMS_TYPES[type].label,\r\n            }\r\n        })\r\n        .filter(category => category.items.length)\r\n        .sort((a, b) => ITEMS_TYPES[a.type].order - ITEMS_TYPES[b.type].order)\r\n\r\n    if (categories.length) {\r\n        return {\r\n            doubled: categories.length > 1 && getSetting('items-columns'),\r\n            contentData: {\r\n                canCarry: !!actor.adjustCarryType,\r\n                categories,\r\n                bulk,\r\n                containers: openedContainers,\r\n                i18n: str => localize(`items.${str}`),\r\n                invested: invested ? `${game.i18n.localize('PF2E.InvestedLabel')}: ${invested.value} / ${invested.max}` : '',\r\n                wealth: { coins: coins.goldValue, total: totalWealth.goldValue },\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nexport function addItemsListeners({ el, actor, token, hud }) {\r\n    const item = el.find('.item')\r\n\r\n    addNameTooltipListeners(item)\r\n\r\n    item.find('[data-action=item-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const item = $(event.currentTarget).closest('.item')\r\n        await showItemSummary(item, actor)\r\n    })\r\n\r\n    item.find('[data-action=toggle-contains-items]').on('click', async event => {\r\n        event.preventDefault()\r\n        const flag = `containers.${game.user.id}`\r\n        const containerId = event.currentTarget.closest('.item').dataset.itemId\r\n        const containers = getFlag(actor, flag)?.slice() ?? []\r\n        const index = containers.indexOf(containerId)\r\n        if (index === -1) containers.push(containerId)\r\n        else containers.splice(index, 1)\r\n        await setFlag(actor, flag, containers)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    item.find('[data-action=item-chat]').on('click', async event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n\r\n        item.toMessage(event, { create: true })\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n\r\n    item.on('dragstart', event => {\r\n        const target = event.target.closest('.item')\r\n        const { itemType, uuid } = target.dataset\r\n\r\n        const img = new Image()\r\n        img.src = target.querySelector('.item-img img').src\r\n        img.style.width = '32px'\r\n        img.style.height = '32px'\r\n        img.style.borderRadius = '4px'\r\n        img.style.position = 'absolute'\r\n        img.style.left = '-1000px'\r\n        document.body.append(img)\r\n\r\n        event.originalEvent.dataTransfer.setDragImage(img, 16, 16)\r\n        event.originalEvent.dataTransfer.setData(\r\n            'text/plain',\r\n            JSON.stringify({ type: 'Item', fromInventory: true, itemType, uuid })\r\n        )\r\n\r\n        target.addEventListener('dragend', () => img.remove(), { once: true })\r\n    })\r\n\r\n    el.find('.quantity input').on('change', async event => {\r\n        await getItemFromEvent(event, actor)?.update({ 'system.quantity': event.currentTarget.valueAsNumber })\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-invest]').on('click', event => {\r\n        event.preventDefault()\r\n        const { itemId } = event.currentTarget.closest('.item').dataset\r\n        actor.toggleInvested(itemId)\r\n    })\r\n\r\n    el.find('[data-action=repair-item]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (item) game.pf2e.actions.repair({ item, actors: [actor], tokens: [token] })\r\n    })\r\n\r\n    el.find('[data-action=toggle-identified]').on('click', event => {\r\n        event.preventDefault()\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n        if (item.isIdentified) item.setIdentificationStatus('unidentified')\r\n        else new IdentifyItemPopup(item).render(true)\r\n    })\r\n\r\n    el.find('[data-action=edit-item]').on('click', event => {\r\n        event.preventDefault()\r\n        editItem(event, actor)\r\n    })\r\n\r\n    el.find('[data-action=delete-item]').on('click', event => {\r\n        event.preventDefault()\r\n        deleteItem(event, actor)\r\n    })\r\n\r\n    el.find('[data-action=toggle-item-worn').on('click', async event => {\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n\r\n        const tmp = document.createElement('div')\r\n        tmp.innerHTML = await renderTemplate('systems/pf2e/templates/actors/partials/carry-type.hbs', { item })\r\n\r\n        const content = tmp.children[1].firstElementChild\r\n\r\n        content.querySelectorAll('[data-carry-type]').forEach(el => {\r\n            el.addEventListener('click', async event => {\r\n                const menu = event.currentTarget\r\n                const current = item.system.equipped\r\n                const inSlot = menu.dataset.inSlot === 'true'\r\n                const handsHeld = Number(menu.dataset.handsHeld) || 0\r\n                const carryType = menu.dataset.carryType\r\n\r\n                dismissTooltip(menu)\r\n\r\n                if (\r\n                    carryType !== current.carryType ||\r\n                    inSlot !== current.inSlot ||\r\n                    (carryType === 'held' && handsHeld !== current.handsHeld)\r\n                ) {\r\n                    actor.adjustCarryType(item, { carryType, handsHeld, inSlot })\r\n                }\r\n            })\r\n        })\r\n\r\n        if (item.type !== 'backpack') {\r\n            const containers = actor.itemTypes.backpack.filter(container => container.isIdentified)\r\n            if (containers.length) {\r\n                let rows = ''\r\n                for (const container of containers) {\r\n                    rows += '<li><a class=\"item-control item-location-option'\r\n                    if (container === item.container) rows += ' selected'\r\n                    rows += `\" data-action=\"send-to-container\" data-container-id=\"${container.id}\">`\r\n                    rows += `<i class=\"fas fa-box\"></i>${container.name}</a></li>`\r\n                }\r\n\r\n                content.insertAdjacentHTML('beforeend', rows)\r\n                content.querySelectorAll('[data-action=send-to-container]').forEach(el => {\r\n                    el.addEventListener('click', event => {\r\n                        const menu = event.currentTarget\r\n                        const containerId = menu.dataset.containerId\r\n                        if (!actor.items.has(containerId)) return\r\n\r\n                        dismissTooltip(menu)\r\n                        item.update({ 'system.containerId': containerId })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n        createTooltip({\r\n            target: event.currentTarget,\r\n            content,\r\n            locked: true,\r\n            direction: 'UP',\r\n            selected: true,\r\n        })\r\n    })\r\n}\r\n", "import { getSetting, localize, modifier, MODULE_ID, templatePath } from '../module.js'\r\nimport { ordinalString } from '../pf2e/misc.js'\r\nimport { eventToRollParams } from '../pf2e/scripts.js'\r\nimport { showItemSummary } from '../popup.js'\r\nimport { addNameTooltipListeners, filterIn, getItemFromEvent, localeCompare } from '../shared.js'\r\n\r\nexport async function getSpellsData({ actor, filter }) {\r\n    const focusPool = actor.system.resources.focus ?? { value: 0, max: 0 }\r\n    const entries = actor.spellcasting.regular\r\n    const showTradition = getSetting('tradition')\r\n    const stavesActive = game.modules.get('pf2e-staves')?.active\r\n    const spells = []\r\n    const focuses = []\r\n    let hasFocusCantrips = false\r\n\r\n    await Promise.all(\r\n        entries.map(async entry => {\r\n            const entryId = entry.id\r\n            const tradition = showTradition && entry.statistic.label[0]\r\n            const data = await entry.getSheetData()\r\n            const isFocus = data.isFocusPool\r\n            const isCharge = entry.system?.prepared?.value === 'charge'\r\n            const isStaff = getProperty(entry, 'flags.pf2e-staves.staveID') !== undefined\r\n            const charges = { value: getProperty(entry, 'flags.pf2e-staves.charges') ?? 0 }\r\n\r\n            for (const slot of data.levels) {\r\n                if (!slot.active.length || slot.uses?.max === 0) continue\r\n\r\n                const slotSpells = []\r\n                const isCantrip = slot.isCantrip\r\n                const actives = slot.active.filter(x => x && x.uses?.max !== 0)\r\n\r\n                for (let slotId = 0; slotId < actives.length; slotId++) {\r\n                    const { spell, expended, virtual, uses, castLevel } = actives[slotId]\r\n                    if (!filterIn(spell.name, filter)) continue\r\n\r\n                    slotSpells.push({\r\n                        name: spell.name,\r\n                        img: spell.img,\r\n                        tradition,\r\n                        castLevel: castLevel ?? spell.level,\r\n                        slotId,\r\n                        entryId,\r\n                        itemId: spell.id,\r\n                        inputId: data.isInnate ? spell.id : data.id,\r\n                        inputPath: isCharge\r\n                            ? 'flags.pf2e-staves.charges'\r\n                            : data.isInnate\r\n                            ? 'system.location.uses.value'\r\n                            : `system.slots.slot${slot.level}.value`,\r\n                        isCharge,\r\n                        isActiveCharge: isCharge && stavesActive,\r\n                        isVirtual: virtual,\r\n                        isInnate: data.isInnate,\r\n                        isCantrip: isCantrip,\r\n                        isFocus,\r\n                        isPrepared: data.isPrepared,\r\n                        isSpontaneous: data.isSpontaneous || data.isFlexible,\r\n                        slotLevel: slot.level,\r\n                        uses: uses ?? (isCharge ? charges : slot.uses),\r\n                        expended: expended ?? (isFocus && !isCantrip ? focusPool.value <= 0 : false),\r\n                        action: spell.system.time.value,\r\n                        type: isCharge\r\n                            ? isStaff\r\n                                ? `${MODULE_ID}.spells.staff`\r\n                                : `${MODULE_ID}.spells.charges`\r\n                            : data.isInnate\r\n                            ? 'PF2E.PreparationTypeInnate'\r\n                            : data.isSpontaneous\r\n                            ? 'PF2E.PreparationTypeSpontaneous'\r\n                            : data.isFlexible\r\n                            ? 'PF2E.SpellFlexibleLabel'\r\n                            : isFocus\r\n                            ? 'PF2E.SpellFocusLabel'\r\n                            : 'PF2E.SpellPreparedLabel',\r\n                        order: isCharge ? 0 : data.isPrepared ? 1 : isFocus ? 2 : data.isInnate ? 3 : data.isSpontaneous ? 4 : 5,\r\n                    })\r\n                }\r\n\r\n                if (slotSpells.length) {\r\n                    if (isFocus) {\r\n                        if (isCantrip) hasFocusCantrips = true\r\n                        else {\r\n                            focuses.push(...slotSpells)\r\n                            continue\r\n                        }\r\n                    }\r\n\r\n                    spells[slot.level] ??= []\r\n                    spells[slot.level].push(...slotSpells)\r\n                }\r\n            }\r\n        })\r\n    )\r\n\r\n    if (spells.length) {\r\n        const sort = getSetting('spells')\r\n            ? (a, b) => (a.order === b.order ? localeCompare(a.name, b.name) : a.order - b.order)\r\n            : (a, b) => localeCompare(a.name, b.name)\r\n        spells.forEach(entry => entry.sort(sort))\r\n    }\r\n\r\n    if (focuses.length) {\r\n        focuses.sort((a, b) => localeCompare(a.name, b.name))\r\n        spells[12] = focuses\r\n        hasFocusCantrips = false\r\n    }\r\n\r\n    const ritualData = await actor.spellcasting.ritual?.getSheetData()\r\n    const rituals = ritualData?.levels.flatMap((slot, slotId) =>\r\n        slot.active\r\n            .map(({ spell }) => {\r\n                if (!filterIn(spell.name, filter)) return\r\n                return {\r\n                    name: spell.name,\r\n                    img: spell.img,\r\n                    slotId,\r\n                    itemId: spell.id,\r\n                    level: spell.level,\r\n                    time: spell.system.time.value,\r\n                }\r\n            })\r\n            .filter(Boolean)\r\n    )\r\n\r\n    if (spells.length || rituals?.length) {\r\n        const attacks = getSpellAttacks(actor)\r\n\r\n        const nb = spells.length + Number((rituals?.length ?? 0) > 0)\r\n        return {\r\n            contentData: {\r\n                spells,\r\n                rituals,\r\n                focusPool,\r\n                stavesActive,\r\n                hasFocusCantrips,\r\n                attackMod: hasSingleSpellAttack(attacks) ? attacks[0].mod : null,\r\n                entryRank: rank => game.i18n.format('PF2E.Item.Spell.Rank.Ordinal', { rank: ordinalString(rank) }),\r\n            },\r\n            doubled: nb > 1 && getSetting('spells-columns'),\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSpellAttacks(actor) {\r\n    return actor.spellcasting\r\n        .filter(entry => entry.statistic)\r\n        .map(({ statistic, name, id }) => ({ name, id, mod: modifier(statistic.mod), statistic }))\r\n}\r\n\r\nfunction hasSingleSpellAttack(attacks) {\r\n    return new Set(attacks.map(({ mod }) => mod)).size === 1\r\n}\r\n\r\nexport function addSpellsListeners({ el, actor, hud }) {\r\n    addNameTooltipListeners(el.find('.spell'))\r\n\r\n    el.find('[data-action=spell-description]').on('click', async event => {\r\n        event.preventDefault()\r\n        const spell = $(event.currentTarget).closest('.spell')\r\n        showItemSummary(spell, actor)\r\n    })\r\n\r\n    // IS OWNER\r\n    if (!actor.isOwner) return\r\n\r\n    el.find('[data-action=spell-attack]').on('click', async event => {\r\n        event.preventDefault()\r\n\r\n        const attacks = getSpellAttacks(actor)\r\n        if (!attacks.length) return\r\n\r\n        let statistic\r\n        if (!hasSingleSpellAttack(attacks)) {\r\n            const id = await Dialog.wait({\r\n                buttons: {\r\n                    ok: {\r\n                        icon: '<i class=\"fa-solid fa-dice-d20\"></i>',\r\n                        label: localize('spells.attacks.ok'),\r\n                        callback: html => html.find('input:checked').val(),\r\n                    },\r\n                },\r\n                title: localize('spells.attacks.title'),\r\n                content: await renderTemplate(templatePath('dialogs/spell-attacks'), { attacks }),\r\n                close: () => null,\r\n            })\r\n\r\n            if (id) statistic = actor.items.get(id)?.statistic\r\n        } else {\r\n            statistic = attacks[0].statistic\r\n        }\r\n\r\n        const rollParams = eventToRollParams(event)\r\n        const { map } = event.currentTarget.dataset\r\n        if (map) {\r\n            rollParams.modifiers = [new game.pf2e.Modifier({ label: 'PF2E.MultipleAttackPenalty', modifier: Number(map) })]\r\n        }\r\n\r\n        statistic?.check.roll(rollParams)\r\n    })\r\n\r\n    el.find('[data-action=spell-chat]').on('click', async event => {\r\n        event.preventDefault()\r\n\r\n        const item = getItemFromEvent(event, actor)\r\n        if (!item) return\r\n\r\n        item.toMessage(event, { create: true })\r\n        if (getSetting('chat-close')) hud.close()\r\n    })\r\n\r\n    el.find('[data-action=toggle-pips]').on('click contextmenu', async event => {\r\n        event.preventDefault()\r\n        const change = event.type === 'click' ? 1 : -1\r\n        const points = (actor.system.resources.focus?.value ?? 0) + change\r\n        await actor.update({ 'system.resources.focus.value': points })\r\n    })\r\n\r\n    el.find('[data-action=toggle-prepared]').on('click', event => {\r\n        event.preventDefault()\r\n        const { slotLevel, slotId, entryId, expended } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId)\r\n        collection?.setSlotExpendedState(slotLevel ?? 0, slotId ?? 0, expended !== true)\r\n    })\r\n\r\n    el.find('[data-action=cast-spell]').on('click', event => {\r\n        event.preventDefault()\r\n\r\n        const { slotLevel, slotId, entryId, itemId } = $(event.currentTarget).closest('.spell').data()\r\n        const collection = actor.spellcasting.collections.get(entryId, { strict: true })\r\n        if (!collection) return\r\n\r\n        const spell = collection.get(itemId, { strict: true })\r\n        if (!spell) return\r\n\r\n        collection.entry.cast(spell, { slot: slotId, level: slotLevel })\r\n        if (getSetting('cast-close')) hud.close()\r\n    })\r\n\r\n    el.find('[data-input-path]').on('change', async event => {\r\n        const { inputPath, entryId } = $(event.currentTarget).data()\r\n        const value = event.currentTarget.valueAsNumber\r\n        await actor.updateEmbeddedDocuments('Item', [{ _id: entryId, [inputPath]: value }])\r\n    })\r\n}\r\n", "import { useResolve } from './actions/use-resolve.js'\r\nimport { enrichHTML, getFlag, getSetting, localize, modifier, MODULE_ID, setFlag, templatePath } from './module.js'\r\nimport { getChatMessageClass, getDamageRollClass } from './pf2e/classes.js'\r\nimport { popup } from './popup.js'\r\nimport { getCoverEffect, getUniqueTarget, localeCompare, RANKS } from './shared.js'\r\nimport { addActionsListeners, getActionsData } from './sidebars/actions.js'\r\nimport { addExtrasListeners, getExtrasData } from './sidebars/extras.js'\r\nimport { addHazardListeners, getHazardData } from './sidebars/hazard.js'\r\nimport { addItemsListeners, getItemsData } from './sidebars/items.js'\r\nimport { addSkillsListeners, getSkillsData } from './sidebars/skills.js'\r\nimport { addSpellsListeners, getSpellsData } from './sidebars/spells.js'\r\nimport { createTooltip } from './tooltip.js'\r\n\r\nconst HOVER_EXCEPTIONS = [\r\n    '#combat-popout',\r\n    '#sidebar',\r\n    '#mini-tracker',\r\n    '#combat-dock',\r\n    '#combat-carousel',\r\n    '[id^=pf2e-perception]',\r\n].join(', ')\r\n\r\nconst POSITIONS = {\r\n    left: ['left', 'right', 'top', 'bottom'],\r\n    right: ['right', 'left', 'top', 'bottom'],\r\n    top: ['top', 'bottom', 'left', 'right'],\r\n    bottom: ['bottom', 'top', 'left', 'right'],\r\n}\r\n\r\nconst ALLIANCES = {\r\n    opposition: { icon: 'fa-solid fa-face-angry-horns', label: 'PF2E.Actor.Creature.Alliance.Opposition' },\r\n    party: { icon: 'fa-solid fa-face-smile-halo', label: 'PF2E.Actor.Creature.Alliance.Party' },\r\n    neutral: { icon: 'fa-solid fa-face-meh', label: 'PF2E.Actor.Creature.Alliance.Neutral' },\r\n}\r\n\r\nconst SPEEDS = [\r\n    { type: 'land', icon: 'fa-solid fa-shoe-prints' },\r\n    { type: 'burrow', icon: 'fa-solid fa-chevrons-down' },\r\n    { type: 'climb', icon: 'fa-solid fa-spider' },\r\n    { type: 'fly', icon: 'fa-solid fa-feather' },\r\n    { type: 'swim', icon: 'fa-solid fa-person-swimming' },\r\n]\r\n\r\nconst SIDEBARS = {\r\n    actions: { getData: getActionsData, addListeners: addActionsListeners },\r\n    items: { getData: getItemsData, addListeners: addItemsListeners },\r\n    spells: { getData: getSpellsData, addListeners: addSpellsListeners },\r\n    skills: { getData: getSkillsData, addListeners: addSkillsListeners },\r\n    extras: { getData: getExtrasData, addListeners: addExtrasListeners },\r\n    hazard: { getData: getHazardData, addListeners: addHazardListeners },\r\n}\r\n\r\nconst SAVES = {\r\n    fortitude: { icon: 'fa-solid fa-chess-rook', label: 'PF2E.SavesFortitude' },\r\n    reflex: { icon: 'fa-solid fa-person-running', label: 'PF2E.SavesReflex' },\r\n    will: { icon: 'fa-solid fa-brain', label: 'PF2E.SavesWill' },\r\n}\r\n\r\nconst SKILLS = {\r\n    perception: { icon: 'fa-solid fa-eye', label: 'PF2E.PerceptionLabel' },\r\n    stealth: { icon: 'fa-duotone fa-eye-slash', label: 'PF2E.SkillStealth' },\r\n    athletics: { icon: 'fa-solid fa-hand-fist', label: 'PF2E.SkillAthletics' },\r\n}\r\n\r\nexport class HUD extends Application {\r\n    #token = null\r\n    #lastToken = null\r\n    #hoveredToken = null\r\n    #delay = null\r\n    #holding = false\r\n    #closing = null\r\n    #mousedown = [false, false, false]\r\n    #lock = false\r\n    #softLock = false\r\n    #isObserved = false\r\n    #hoverTokenHandler\r\n    #mouseeventHandler\r\n    #deleteTokenHandler\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.forceClose = () => this.close({ force: true })\r\n\r\n        this.#hoverTokenHandler = (token, hover) => {\r\n            if (hover) this.#tokenEnter(token)\r\n            else this.#tokenLeave(token)\r\n        }\r\n\r\n        this.#mouseeventHandler = event => {\r\n            const button = event.button\r\n            if (![0, 2].includes(button)) return\r\n\r\n            if (event.type === 'mouseup') {\r\n                this.#mousedown[button] = false\r\n                return\r\n            }\r\n\r\n            this.#mousedown[button] = true\r\n\r\n            const target = event.target\r\n            const el = this.element[0]\r\n\r\n            if (el) {\r\n                const popup = el.querySelector('.popup')\r\n\r\n                if (popup && !popup.contains(target)) {\r\n                    if (!el.querySelector('.sidebar')) this.forceClose()\r\n                    else return popup.remove()\r\n                }\r\n\r\n                if (target.closest('canvas')) this.forceClose()\r\n\r\n                return\r\n            } else this.#cancelDelay()\r\n\r\n            this.unlock(true)\r\n        }\r\n\r\n        this.#deleteTokenHandler = token => {\r\n            if (this.#token && token.id === this.#token.id) this.forceClose()\r\n        }\r\n\r\n        window.addEventListener('mousedown', this.#mouseeventHandler)\r\n        window.addEventListener('mouseup', this.#mouseeventHandler)\r\n\r\n        Hooks.on('hoverToken', this.#hoverTokenHandler)\r\n        Hooks.on('deleteToken', this.#deleteTokenHandler)\r\n        Hooks.on('canvasPan', this.forceClose)\r\n    }\r\n\r\n    setToken(token, isObserved) {\r\n        if (token !== this.#token) {\r\n            delete this.#token?.actor?.apps[this.appId]\r\n\r\n            this.#token = token\r\n            const actor = token?.actor\r\n            if (actor) actor.apps[this.appId] = this\r\n        }\r\n        this.#isObserved = isObserved ?? this.#checkIfObserved(token)\r\n    }\r\n\r\n    setHolding(held) {\r\n        const holding = getSetting('use-holding')\r\n        if (holding === 'none') return\r\n\r\n        this.#holding = held\r\n\r\n        if (this.#softLock || this.#lock) return\r\n\r\n        if (held) {\r\n            if (!this.#hoveredToken) return\r\n            const isObserved = this.#checkIfObserved(this.#hoveredToken)\r\n            if (holding === 'half' && !game.user.isGM && !isObserved) {\r\n                this.#cancelDelay()\r\n                this.render()\r\n                return\r\n            }\r\n            this.setToken(this.#hoveredToken, isObserved)\r\n            this.render()\r\n        } else {\r\n            if (holding === 'all') this.close()\r\n            else if (game.user.isGM) {\r\n                this.setToken(this.#hoveredToken)\r\n                this.render()\r\n            } else if (this.#isObserved) this.close()\r\n        }\r\n    }\r\n\r\n    #checkIfObserved(token) {\r\n        const actor = token?.actor\r\n        if (!actor) return false\r\n\r\n        let isObserved\r\n        const isParty = actor.system.details.alliance === 'party'\r\n\r\n        if (game.user.isGM && getSetting('use-holding') === 'half' && !this.#holding) isObserved = false\r\n        else if (actor.isOfType('familiar') && !actor.master) isObserved = false\r\n        else isObserved = token.isOwner || (getSetting('observer') && (token.observer || (isParty && getSetting('party'))))\r\n\r\n        return isObserved\r\n    }\r\n\r\n    #tokenEnter(token) {\r\n        if ($(window.document).find(':hover').filter(HOVER_EXCEPTIONS).length) return\r\n\r\n        const actor = token.actor\r\n        if (!actor || actor.isOfType('loot', 'party')) return\r\n\r\n        if (token.document.disposition === CONST.TOKEN_DISPOSITIONS.SECRET && !actor.isOwner) return\r\n\r\n        this.#hoveredToken = token\r\n\r\n        if (token !== this.#lastToken && !this.#lock) this.close()\r\n\r\n        if (this.mousedown || this.#lock || this.#softLock || token === this.#token) return\r\n\r\n        const holding = getSetting('use-holding')\r\n        const isObserved = this.#checkIfObserved(token)\r\n        if (holding !== 'none' && !this.#holding && (holding === 'all' || isObserved)) return\r\n\r\n        this.#cancelClosing(true)\r\n        this.setToken(token, isObserved)\r\n\r\n        if (holding === 'none' || !this.#holding) this.renderWithDelay()\r\n        else this.render()\r\n    }\r\n\r\n    #tokenLeave(token) {\r\n        this.#hoveredToken = null\r\n\r\n        if (this.mousedown || this.#lock || this.#softLock) return\r\n\r\n        this.#closing = setTimeout(() => {\r\n            this.#closing = null\r\n            if (this.#softLock || this.#lock) return\r\n            this.close()\r\n        }, 10)\r\n    }\r\n\r\n    renderWithDelay() {\r\n        let delay = getSetting('delay')\r\n        if (delay) {\r\n            if (delay < 10) delay = 10\r\n            this.#delay = setTimeout(() => {\r\n                this.#delay = null\r\n                this.render()\r\n            }, delay)\r\n        } else this.render()\r\n    }\r\n\r\n    #cancelClosing(close) {\r\n        if (this.#closing === null) return\r\n        clearTimeout(this.#closing)\r\n        this.#closing = null\r\n        if (close) this.close()\r\n    }\r\n\r\n    #cancelDelay() {\r\n        if (this.#delay === null) return\r\n        clearTimeout(this.#delay)\r\n        this.#delay = null\r\n    }\r\n\r\n    delete() {\r\n        this.forceClose()\r\n\r\n        window.removeEventListener('mousedown', this.#mouseeventHandler)\r\n        window.removeEventListener('mouseup', this.#mouseeventHandler)\r\n\r\n        Hooks.off('hoverToken', this.#hoverTokenHandler)\r\n        Hooks.off('deleteToken', this.#deleteTokenHandler)\r\n        Hooks.off('canvasPan', this.forceClose)\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            popOut: false,\r\n            minimizable: false,\r\n            template: templatePath('hud'),\r\n        })\r\n    }\r\n\r\n    get mousedown() {\r\n        return this.#mousedown[0] || this.#mousedown[2]\r\n    }\r\n\r\n    get token() {\r\n        return this.#token\r\n    }\r\n\r\n    get actor() {\r\n        return this.#token?.actor\r\n    }\r\n\r\n    get hasCover() {\r\n        return !!getCoverEffect(this.actor)\r\n    }\r\n\r\n    get isCharacter() {\r\n        return this.actor?.isOfType('character')\r\n    }\r\n\r\n    get sidebar() {\r\n        return this.element?.find('> .sidebar') ?? []\r\n    }\r\n\r\n    get popup() {\r\n        return this.element?.find('> .popup') ?? []\r\n    }\r\n\r\n    get inner() {\r\n        return this.element?.find('> .inner') ?? []\r\n    }\r\n\r\n    async getData() {\r\n        const token = this.#token\r\n        const actor = this.#token?.actor\r\n        if (!actor) return {}\r\n\r\n        let distance = null\r\n        const savesSetting = getSetting('saves')\r\n        const othersSetting = getSetting('others')\r\n        const isCharacter = this.isCharacter\r\n        const { attributes } = actor\r\n        const { hp, ac } = attributes\r\n        const sp = hp.sp ?? { max: 0, value: 0 }\r\n        const useStamina = game.settings.get('pf2e', 'staminaVariant')\r\n        const showDistance = getSetting('distance')\r\n        const fontSize = getSetting('scale')\r\n\r\n        if (showDistance === 'all' || (showDistance === 'self' && this.#isObserved)) {\r\n            const unitSplit = getSetting('unit').split(',')\r\n            const multiplier = Number(unitSplit[0]?.trim()) || 1\r\n            const unit = unitSplit[1]?.trim() || game.system.gridUnits\r\n            const decimals = Number(unitSplit[2]?.trim()) || 0\r\n            const selected = canvas.tokens.controlled\r\n\r\n            let isTarget = false\r\n            let target = selected.length === 1 ? selected[0] : null\r\n\r\n            if (!target || target === token) {\r\n                target = getUniqueTarget()\r\n                isTarget = true\r\n            }\r\n\r\n            if (target && target !== token) {\r\n                distance = {\r\n                    unit,\r\n                    icon: isTarget ? '<i class=\"fa-solid fa-crosshairs-simple\"></i>' : '<i class=\"fa-solid fa-expand\"></i>',\r\n                    range: (token.distanceTo(target) * multiplier).toFixed(decimals),\r\n                }\r\n            }\r\n        }\r\n\r\n        let status\r\n        if (!this.#isObserved || getSetting('see-status')) {\r\n            const statuses = getSetting('status')\r\n                .split(',')\r\n                .map(x => x.trim())\r\n                .filter(Boolean)\r\n\r\n            if (statuses.length && hp.max) {\r\n                const max = hp.max + (useStamina ? sp.max : 0)\r\n                const current = hp.value + (useStamina ? sp.value : 0)\r\n                const ratio = Math.clamped(current / max, 0, 1)\r\n                const pick = (() => {\r\n                    const length = statuses.length\r\n                    if (getSetting('last-status')) {\r\n                        if (ratio === 1) return length\r\n                        return Math.ceil(ratio * (length - 1))\r\n                    }\r\n                    return Math.ceil(ratio * length)\r\n                })()\r\n\r\n                status = {\r\n                    hue: ratio * ratio * 122 + 3,\r\n                    value: pick === 0 ? game.i18n.localize('EFFECT.StatusDead') : statuses.at(pick - 1),\r\n                }\r\n            }\r\n        }\r\n\r\n        let sharedData = {\r\n            status,\r\n            distance,\r\n            fontSize,\r\n            tokenId: token.id,\r\n            type: actor.isOfType('creature') ? 'creature' : actor.type,\r\n        }\r\n\r\n        if (!this.#isObserved || (actor.isOfType('familiar') && !actor.master)) return sharedData\r\n\r\n        const { level, saves, isOwner, system, itemTypes } = actor\r\n        const { resistances, weaknesses, immunities } = attributes\r\n\r\n        sharedData = {\r\n            ...sharedData,\r\n            isOwner,\r\n            isObserver: this.#isObserved,\r\n            name: token.document.name,\r\n            hp,\r\n            ac: ac.value,\r\n            level,\r\n            hasActions: itemTypes.action.length || system.actions?.filter(action => action.visible !== false).length,\r\n        }\r\n\r\n        const showRanks = getSetting('ranks')\r\n\r\n        function getStatistic(stat, type, stats) {\r\n            const slug = stat.slug\r\n            const value = type === 'bonus' ? modifier(stat.mod) : stat.dc.value\r\n            return { slug, value, label: stats[slug].label, icon: stats[slug].icon, rank: showRanks && RANKS[stat.rank] }\r\n        }\r\n\r\n        function toIWR(category, header) {\r\n            if (!category.length) return ''\r\n            const rows = category.map(x => toInfo(x.label.replace('-', ' ').titleCase())).join('')\r\n            if (!header) return rows\r\n            return `<li>${game.i18n.localize(header)}<ul>` + rows + '</ul></li>'\r\n        }\r\n\r\n        if (actor.isOfType('hazard')) {\r\n            const { hardness, emitsSound, stealth } = attributes\r\n\r\n            return {\r\n                ...sharedData,\r\n                hardness,\r\n                emitsSound: emitsSound.toString().capitalize(),\r\n                immunities: toIWR(immunities),\r\n                weaknesses: toIWR(weaknesses),\r\n                resistances: toIWR(resistances),\r\n                stealth: {\r\n                    value: stealth.value,\r\n                    details: await enrichHTML(stealth.details, actor),\r\n                },\r\n                saves:\r\n                    savesSetting !== 'none' &&\r\n                    ['fortitude', 'reflex', 'will'].map(slug => {\r\n                        const save = saves[slug]\r\n                        if (!save) return { slug, label: SAVES[slug].label, icon: SAVES[slug].icon }\r\n                        return getStatistic(save, savesSetting, SAVES)\r\n                    }),\r\n            }\r\n        }\r\n\r\n        sharedData = {\r\n            ...sharedData,\r\n            sidebarTitles: {\r\n                actions: `${MODULE_ID}.actions.title`,\r\n                items: `${MODULE_ID}.items.title`,\r\n                spells: `${MODULE_ID}.spells.title`,\r\n                skills: `${MODULE_ID}.skills.title`,\r\n                extras: `${MODULE_ID}.extras.title`,\r\n            },\r\n            hasItems: actor.inventory.size,\r\n        }\r\n\r\n        if (actor.isOfType('vehicle')) {\r\n            const { hardness, collisionDC, collisionDamage } = attributes\r\n            const { details } = system\r\n            const { crew, passengers, pilotingCheck, speed } = details\r\n\r\n            return {\r\n                ...sharedData,\r\n                hardness,\r\n                crew,\r\n                passengers,\r\n                pilotingCheck,\r\n                speed,\r\n                collisionDC: collisionDC.value,\r\n                collisionDamage: collisionDamage.value,\r\n                immunities: toIWR(immunities),\r\n                weaknesses: toIWR(weaknesses),\r\n                resistances: toIWR(resistances),\r\n                fortitude: getStatistic(saves.fortitude, savesSetting, SAVES),\r\n            }\r\n        }\r\n\r\n        const showDeath = getSetting('show-death')\r\n        const { heroPoints } = actor\r\n        const { traits, resources } = system\r\n        const { wounded, dying, shield, speed, adjustment } = attributes\r\n\r\n        function toInfo(str) {\r\n            return `<li>${str.trim()}</li>`\r\n        }\r\n\r\n        function sort(a, b) {\r\n            return localeCompare(a, b)\r\n        }\r\n\r\n        const languages = traits?.languages?.value\r\n            .map(x => game.i18n.localize(CONFIG.PF2E.languages[x]))\r\n            .filter(Boolean)\r\n            .sort(sort)\r\n            .map(toInfo)\r\n            .join('')\r\n\r\n        const senses = isCharacter ? traits.senses.map(x => x.label) : traits.senses.value?.split(',')\r\n\r\n        const speeds = SPEEDS.map(({ type, icon }, index) => ({\r\n            index,\r\n            icon,\r\n            label: game.i18n.localize(CONFIG.PF2E.speedTypes[type] ?? 'PF2E.SpeedTypesLand'),\r\n            value: (index === 0 ? speed.total : speed.otherSpeeds.find(s => s.type === type)?.total) || 0,\r\n        }))\r\n\r\n        const selectedSpeed = getFlag(actor, `speeds.selected.${game.user.id}`)\r\n        const mainSpeed = (() => {\r\n            let index = 0\r\n            if (selectedSpeed !== undefined) index = selectedSpeed\r\n            else if (getSetting('force-speed') || speeds[0].value === 0) {\r\n                const base = { index: 0, value: speeds[0].value }\r\n                index = speeds.reduce((prev, { value }, index) => (value > prev.value ? { index, value } : prev), base).index\r\n            }\r\n            return speeds.splice(index, 1)[0]\r\n        })()\r\n\r\n        let otherSpeeds = speeds\r\n            .map(({ value, label, index }) => `<li><a data-value=\"${index}\">${label}: ${value}</a></li>`)\r\n            .join('')\r\n        if (speed.details) otherSpeeds += `<li>${game.i18n.localize('PF2E.DetailsHeading')}: ${speed.details}</li>`\r\n\r\n        return {\r\n            ...sharedData,\r\n            sp: useStamina ? sp : { max: 0 },\r\n            hero: heroPoints,\r\n            dying,\r\n            wounded,\r\n            shield,\r\n            resolve: resources.resolve,\r\n            adjustment,\r\n            alliance: ALLIANCES[getAlliance(actor).alliance],\r\n            isCharacter,\r\n            showDeathLine: isCharacter && (showDeath === 'always' || dying.value || wounded.value),\r\n            digitalPips: getSetting('pips'),\r\n            hasCover: this.hasCover,\r\n            saves:\r\n                savesSetting !== 'none' &&\r\n                ['fortitude', 'reflex', 'will'].map(slug => getStatistic(saves[slug], savesSetting, SAVES)),\r\n            others:\r\n                othersSetting !== 'none' &&\r\n                ['perception', 'stealth', 'athletics'].map(slug => getStatistic(actor.getStatistic(slug), othersSetting, SKILLS)),\r\n            speeds: {\r\n                main: mainSpeed,\r\n                others: otherSpeeds,\r\n            },\r\n            iwr:\r\n                toIWR(immunities, 'PF2E.ImmunitiesLabel') +\r\n                toIWR(weaknesses, 'PF2E.WeaknessesLabel') +\r\n                toIWR(resistances, 'PF2E.ResistancesLabel'),\r\n            senses: senses?.filter(Boolean).map(toInfo).join(''),\r\n            languages,\r\n            hasSpells: actor.spellcasting.some(x => x.category !== 'items'),\r\n            hasNotes: !isCharacter && (system.details.publicNotes || (system.details.privateNotes && isOwner)),\r\n        }\r\n    }\r\n\r\n    close(options = {}) {\r\n        this.setToken(null)\r\n        this.unlock(true)\r\n        this.#softLock = false\r\n\r\n        this.#cancelDelay()\r\n\r\n        const states = Application.RENDER_STATES\r\n        if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) return\r\n\r\n        this._state = states.CLOSING\r\n\r\n        let el = this.element\r\n        if (!el) return (this._state = states.CLOSED)\r\n        el.css({ minHeight: 0 })\r\n\r\n        for (let cls of this.constructor._getInheritanceChain()) {\r\n            Hooks.call(`close${cls.name}`, this, el)\r\n        }\r\n\r\n        el.remove()\r\n\r\n        this._element = null\r\n        this._state = states.CLOSED\r\n        delete ui.windows[this.appId]\r\n    }\r\n\r\n    async _render(force = false, options = {}) {\r\n        let sidebarType\r\n        let sidebarScrolltop\r\n        let popup\r\n        let popupScrollTop\r\n        let filter\r\n\r\n        if (this.#lastToken === this.#token) {\r\n            const sidebar = this.sidebar[0]\r\n            if (sidebar) {\r\n                sidebarType = sidebar.dataset.type\r\n                sidebarScrolltop = sidebar.scrollTop\r\n                const filterHeader = sidebar.querySelector('.sidebar-header')\r\n                if (filterHeader.classList.contains('show')) filter = filterHeader.querySelector(' input').value.trim()\r\n            }\r\n\r\n            popup = this.popup[0]\r\n            if (popup) popupScrollTop = popup.scrollTop\r\n        }\r\n\r\n        await super._render(force, options)\r\n        ui.windows[this.appId] = this\r\n\r\n        if (sidebarType) {\r\n            const sidebar = await this.#openSidebar(sidebarType, filter)\r\n            if (sidebarScrolltop > 0) sidebar.scrollTop(sidebarScrolltop)\r\n        }\r\n\r\n        if (popup) {\r\n            this.element.append(popup)\r\n            if (popupScrollTop > 0) popup.scrollTop = popupScrollTop\r\n        }\r\n\r\n        this.#lastToken = this.#token\r\n\r\n        if (!this.inner.length) return\r\n        if (getSetting('autolock') === 'render') this.lock()\r\n    }\r\n\r\n    render() {\r\n        if (this.actor) super.render(true)\r\n    }\r\n\r\n    _injectHTML(html) {\r\n        $('body').append(html)\r\n        this._element = html\r\n    }\r\n\r\n    setPosition() {\r\n        const token = this.#token\r\n        if (!token) return\r\n\r\n        const element = this.element[0]\r\n        const scale = token.worldTransform.a\r\n        const hud = element.getBoundingClientRect()\r\n        const targetCoords = canvas.clientCoordinatesFromCanvas(token.document._source)\r\n        const target = {\r\n            x: targetCoords.x,\r\n            y: targetCoords.y,\r\n            width: token.hitArea.width * scale,\r\n            height: token.hitArea.height * scale,\r\n            get right() {\r\n                return this.x + this.width\r\n            },\r\n            get bottom() {\r\n                return this.y + this.height\r\n            },\r\n        }\r\n\r\n        let coords\r\n\r\n        const positions = this.#isObserved\r\n            ? POSITIONS[getSetting('position')].slice()\r\n            : POSITIONS[getSetting('small-position')].slice()\r\n\r\n        while (positions.length && !coords) {\r\n            const position = positions.shift()\r\n\r\n            if (position === 'left') {\r\n                coords = {\r\n                    x: target.x - hud.width,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x < 0) coords = undefined\r\n            } else if (position === 'right') {\r\n                coords = {\r\n                    x: target.right,\r\n                    y: postionFromTargetY(hud, target),\r\n                }\r\n                if (coords.x + hud.width > window.innerWidth) coords = undefined\r\n            } else if (position === 'top') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.y - hud.height,\r\n                }\r\n                if (coords.y < 0) coords = undefined\r\n            } else if (position === 'bottom') {\r\n                coords = {\r\n                    x: postionFromTargetX(hud, target),\r\n                    y: target.bottom,\r\n                }\r\n                if (coords.y + hud.height > window.innerHeight) coords = undefined\r\n            }\r\n        }\r\n\r\n        if (coords) {\r\n            element.style.left = `${coords.x}px`\r\n            element.style.top = `${coords.y}px`\r\n        }\r\n\r\n        return coords\r\n    }\r\n\r\n    lock() {\r\n        this.#lock = true\r\n    }\r\n\r\n    unlock(force) {\r\n        if (!force && (this.sidebar.length || getSetting('autolock') !== 'none')) return\r\n        this.#lock = false\r\n    }\r\n\r\n    activateListeners(html) {\r\n        const token = this.#token\r\n        const actor = token?.actor\r\n        if (!actor) return\r\n\r\n        const isOwner = token.isOwner\r\n        const ChatMessagePF2e = getChatMessageClass()\r\n\r\n        if (getSetting('tooltips')) {\r\n            html.find('.inner [data-tooltip]').attr('data-tooltip', '')\r\n        }\r\n\r\n        html.find('[data-action=show-notes').on('click', async event => {\r\n            event.preventDefault()\r\n\r\n            const { publicNotes, privateNotes, blurb } = actor.system.details\r\n            const traits = actor.system.traits.value.map(trait => ({\r\n                label: game.i18n.localize(CONFIG.PF2E.creatureTraits[trait]) ?? trait,\r\n                description: game.i18n.localize(CONFIG.PF2E.traitsDescriptions[trait]) ?? '',\r\n            }))\r\n\r\n            const content = await renderTemplate(templatePath('show-notes'), {\r\n                traits,\r\n                blurb: blurb.trim(),\r\n                publicNotes: publicNotes.trim(),\r\n                privateNotes: isOwner && privateNotes.trim(),\r\n            })\r\n\r\n            popup(`${actor.name} - ${game.i18n.localize('PF2E.NPC.NotesTab')}`, content, actor)\r\n        })\r\n\r\n        html.on('mousedown', () => this.bringToTop())\r\n\r\n        html.on('mouseenter', () => {\r\n            if (!html.find('.inner').length) return\r\n            if (getSetting('autolock') === 'hover') this.lock()\r\n            this.#softLock = true\r\n        })\r\n\r\n        html.on('mouseleave', () => {\r\n            this.#softLock = false\r\n            if (this.#lock || this.#hoveredToken) return\r\n            this.close()\r\n        })\r\n\r\n        html.on('dragover', () => {\r\n            if (token.isOwner && html.find('> .sidebar.extras').length && !html.find('> .popup').length) return\r\n            html.css('opacity', 0.1)\r\n            html.css('pointerEvents', 'none')\r\n            window.addEventListener(\r\n                'dragend',\r\n                () => {\r\n                    html.css('opacity', 1)\r\n                    html.css('pointerEvents', '')\r\n                },\r\n                { once: true }\r\n            )\r\n        })\r\n\r\n        const infos = html.find('[data-action=show-info]')\r\n        const infosElements = isOwner ? infos.filter(':not(.speeds)') : infos\r\n        infosElements.on('click', event => {\r\n            const target = event.currentTarget\r\n            const content = target.dataset.tooltipContent\r\n\r\n            if (target.classList.contains('stealth')) {\r\n                this.#createHUDLockedListTooltip({ content, event, direction: 'DOWN' })\r\n            } else {\r\n                createTooltip({ target, content, direction: 'UP' })\r\n            }\r\n        })\r\n\r\n        html.find('[data-action=open-sidebar]').on('click', this.#openSidebar.bind(this))\r\n\r\n        // IS OWNER\r\n        if (!isOwner) return\r\n\r\n        html.find('[data-action=toggle-adjustment]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n            const adjustment = event.type === 'click' ? 'elite' : 'weak'\r\n            actor.applyAdjustment(actor.system.attributes.adjustment === adjustment ? null : adjustment)\r\n        })\r\n\r\n        html.find('[data-action=toggle-alliance]').on('click', event => {\r\n            const { originalAlliance, defaultAlliance } = getAlliance(actor)\r\n\r\n            const content = [\r\n                {\r\n                    value: 'default',\r\n                    label: game.i18n.format('PF2E.Actor.Creature.Alliance.Default', {\r\n                        alliance: game.i18n.localize(ALLIANCES[defaultAlliance].label),\r\n                    }),\r\n                },\r\n                { value: 'opposition', label: game.i18n.localize(ALLIANCES.opposition.label) },\r\n                { value: 'party', label: game.i18n.localize(ALLIANCES.party.label) },\r\n                { value: 'neutral', label: game.i18n.localize(ALLIANCES.neutral.label) },\r\n            ]\r\n\r\n            this.#createHUDLockedListTooltip({\r\n                content,\r\n                event,\r\n                selected: originalAlliance,\r\n                onClick: value => {\r\n                    if (value === 'default') actor.update({ 'system.details.-=alliance': null })\r\n                    else actor.update({ 'system.details.alliance': value === 'neutral' ? null : value })\r\n                },\r\n            })\r\n        })\r\n\r\n        html.find('[data-action=collision-dc]').on('click', event => {\r\n            event.preventDefault()\r\n            const dc = actor.system.attributes.collisionDC.value || 15\r\n            ChatMessagePF2e.create({\r\n                content: `@Check[type:reflex|dc:${dc}]`,\r\n                speaker: ChatMessagePF2e.getSpeaker({ actor }),\r\n            })\r\n        })\r\n\r\n        html.find('[data-action=collision-damage]').on('click', async event => {\r\n            event.preventDefault()\r\n            let formula = (actor.system.attributes.collisionDamage.value || '1d6').trim()\r\n            if (!isNaN(Number(formula.at(-1)))) formula += '[bludgeoning]'\r\n            const DamageRoll = getDamageRollClass()\r\n            const roll = await new DamageRoll(formula).evaluate({ async: true })\r\n            ChatMessagePF2e.create({\r\n                flavor: `<strong>${game.i18n.localize('PF2E.vehicle.collisionDamageLabel')}</strong>`,\r\n                speaker: ChatMessagePF2e.getSpeaker({ actor }),\r\n                type: CONST.CHAT_MESSAGE_TYPES.ROLL,\r\n                sound: 'sounds/dice.wav',\r\n                rolls: [roll],\r\n            })\r\n        })\r\n\r\n        html.find('input').on('change', async event => {\r\n            const target = event.currentTarget\r\n            const value = target.valueAsNumber\r\n            const attr = target.name\r\n\r\n            target.blur()\r\n\r\n            if (attr !== 'shield.value') await actor.update({ [attr]: value })\r\n            else await actor.heldShield.update({ 'system.hp.value': value })\r\n        })\r\n\r\n        html.find('[data-action=toggle-hero]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n            let { max, value } = actor.heroPoints\r\n\r\n            const change = event.type === 'click' ? 1 : -1\r\n            const newValue = Math.clamped(value + change, 0, max)\r\n\r\n            if (newValue !== value) actor.update({ 'system.resources.heroPoints.value': newValue })\r\n        })\r\n\r\n        html.find('[data-action=raise-shield]').on('click', event => {\r\n            event.preventDefault()\r\n            game.pf2e.actions.raiseAShield({ actors: [actor], tokens: [token] })\r\n        })\r\n\r\n        html.find('[data-action=take-cover]').on('click', async event => {\r\n            event.preventDefault()\r\n\r\n            const existing = getCoverEffect(actor)\r\n\r\n            if (existing) existing.delete()\r\n            else game.pf2e.actions.get('take-cover').use({ actors: [actor], tokens: [token] })\r\n        })\r\n\r\n        html.find('[data-action=roll-save]').on('click', event => {\r\n            event.preventDefault()\r\n            const save = event.currentTarget.dataset.save\r\n            actor.saves[save].roll({ event })\r\n        })\r\n\r\n        html.find('[data-action=roll-other]').on('click', event => {\r\n            event.preventDefault()\r\n            const slug = event.currentTarget.dataset.slug\r\n            if (slug !== 'athletics') {\r\n                const { ctrlKey, metaKey, shiftKey } = event\r\n                event = new MouseEvent('click', { ctrlKey: !ctrlKey, metaKey, shiftKey })\r\n            }\r\n            actor.getStatistic(slug)?.roll({ event })\r\n        })\r\n\r\n        html.find('[data-action=recovery-check]').on('click', event => {\r\n            event.preventDefault()\r\n            actor.rollRecovery(event)\r\n        })\r\n\r\n        html.find('[data-action=toggle-dying], [data-action=toggle-wounded]').on('click contextmenu', event => {\r\n            event.preventDefault()\r\n\r\n            const condition = event.currentTarget.dataset.action === 'toggle-dying' ? 'dying' : 'wounded'\r\n            const max = actor.system.attributes[condition]?.max\r\n\r\n            if (!max) return\r\n            if (event.type === 'click') actor.increaseCondition(condition, { max })\r\n            else actor.decreaseCondition(condition)\r\n        })\r\n\r\n        html.find('[data-action=use-resolve]').on('click', event => {\r\n            event.preventDefault()\r\n            useResolve(actor)\r\n        })\r\n\r\n        infos.filter('.speeds').on('click', event => {\r\n            this.#createHUDLockedListTooltip({\r\n                event,\r\n                content: event.currentTarget.dataset.tooltipContent,\r\n                direction: 'UP',\r\n                onClick: index => {\r\n                    setFlag(actor, `speeds.selected.${game.user.id}`, Number(index))\r\n                },\r\n            })\r\n        })\r\n    }\r\n\r\n    #createHUDLockedListTooltip({ content, event, onClick, selected, direction, locked }) {\r\n        createTooltip({\r\n            content,\r\n            target: event.currentTarget,\r\n            direction,\r\n            selected,\r\n            locked: true,\r\n            onCreate: () => this.lock(),\r\n            onClick,\r\n            onDismiss: () => this.unlock(),\r\n        })\r\n    }\r\n\r\n    async showFilter() {\r\n        let sidebar = this.sidebar\r\n        if (!sidebar.length) return\r\n        if (!sidebar.find('.sidebar-header').hasClass('show')) sidebar = await this.#openSidebar(sidebar.data().type, '')\r\n        sidebar.find('.sidebar-header').find('input').focus().select()\r\n        sidebar.scrollTop(0)\r\n    }\r\n\r\n    async #openSidebar(type, filter) {\r\n        type = typeof type === 'string' ? type : type.currentTarget.dataset.type\r\n\r\n        let element = this.element\r\n        let sidebar = this.sidebar\r\n        const action = sidebar[0]?.dataset.type\r\n\r\n        sidebar.remove()\r\n        element.find('[data-action=open-sidebar]').removeClass('active')\r\n\r\n        if (action === type && filter === undefined) {\r\n            this.unlock()\r\n            return\r\n        }\r\n\r\n        const token = this.#token\r\n        const actor = token.actor\r\n        const showFilter = filter !== undefined || getSetting('filter')\r\n        const { getData, addListeners } = SIDEBARS[type]\r\n        const data = (await getData({ hud: this, actor, token, filter: filter?.toLowerCase() })) ?? {}\r\n        if (!data.contentData && !showFilter) return ui.notifications.warn(localize(`${type}.empty`, { name: this.#token.name }))\r\n\r\n        const contentData = {\r\n            ...(data.contentData ?? {}),\r\n            isGM: game.user.isGM,\r\n            isCharacter: this.isCharacter,\r\n            isOwner: actor.isOwner,\r\n        }\r\n\r\n        this.lock()\r\n\r\n        element.find(`[data-action=open-sidebar][data-type=${type}]`).addClass('active')\r\n        element = element[0]\r\n\r\n        const classes = data.classes ?? []\r\n        classes.push(type)\r\n        if (!getSetting('scrollbar')) classes.push('no-scrollbar')\r\n        if (data.doubled) classes.push('doubled')\r\n\r\n        const style = data.style ?? {}\r\n        style['--max-height'] = getSetting('height').trim() || '100%'\r\n\r\n        const tmp = document.createElement('div')\r\n        tmp.innerHTML = await renderTemplate(templatePath('sidebar'), {\r\n            classes: classes.join(' '),\r\n            style: Object.entries(style)\r\n                .map(([key, value]) => `${key}: ${value}`)\r\n                .join('; '),\r\n            type,\r\n            filter,\r\n            filterLabel: localize('filter'),\r\n            showFilter,\r\n            content: (await renderTemplate(templatePath(`sidebars/${type}`), contentData)).trim(),\r\n        })\r\n\r\n        sidebar = tmp.firstElementChild\r\n        element.append(sidebar)\r\n\r\n        const rect = sidebar.getBoundingClientRect()\r\n        const target = element.getBoundingClientRect()\r\n\r\n        let left\r\n        const position = getSetting('position')\r\n        if (position === 'left') {\r\n            left = target.x - rect.width\r\n            if (left < 0) left = target.right\r\n        } else {\r\n            left = target.right\r\n            if (left + rect.width > window.innerWidth) left = target.x - rect.width\r\n        }\r\n\r\n        const elPadding = parseInt(window.getComputedStyle(element).padding)\r\n        let top = postionFromTargetY(rect, target, elPadding)\r\n\r\n        sidebar.style.left = `${left}px`\r\n        sidebar.style.top = `${top}px`\r\n\r\n        sidebar = $(sidebar)\r\n        sidebar.find('.sidebar-header [data-action=sidebar-filter-clear]').on('click', event => {\r\n            event.preventDefault()\r\n            sidebar.find('.sidebar-header [data-action=sidebar-filter]').val('')\r\n            this.#openSidebar(type, '')\r\n        })\r\n        sidebar.find('.sidebar-header [data-action=sidebar-filter]').on('keydown', event => {\r\n            if (event.key === 'Enter') this.#openSidebar(type, event.currentTarget.value.trim())\r\n        })\r\n        addListeners({ el: sidebar, actor, token, hud: this })\r\n\r\n        Hooks.callAll('renderHUDSidebar', type, sidebar, this)\r\n\r\n        return sidebar\r\n    }\r\n}\r\n\r\nfunction postionFromTargetY(el, target, margin = 0) {\r\n    let y = target.y + target.height / 2 - el.height / 2\r\n    if (y + el.height > window.innerHeight) y = window.innerHeight - el.height - margin\r\n    if (y < 0) y = margin\r\n    return y\r\n}\r\n\r\nfunction postionFromTargetX(el, target) {\r\n    let x = target.x + target.width / 2 - el.width / 2\r\n    if (x + el.width > window.innerWidth) y = window.innerWidth - el.width\r\n    if (x < 0) x = 0\r\n    return x\r\n}\r\n\r\nfunction getAlliance(actor) {\r\n    const allianceSource = actor._source.system.details?.alliance\r\n    const alliance = allianceSource === null ? 'neutral' : allianceSource ?? 'default'\r\n    const defaultAlliance = actor.hasPlayerOwner ? 'party' : 'opposition'\r\n    return {\r\n        defaultAlliance,\r\n        originalAlliance: alliance,\r\n        alliance: alliance === 'default' ? defaultAlliance : alliance,\r\n    }\r\n}\r\n", "import { HUD } from './hud.js'\r\n\r\nexport const MODULE_ID = 'pf2e-token-hud'\r\n\r\nlet hud = null\r\nexport function getHud(element = false) {\r\n    return element ? hud?.element : hud\r\n}\r\n\r\nexport function enableModule(enabled) {\r\n    if (enabled && !hud) {\r\n        hud = new HUD()\r\n    } else if (!enabled && hud) {\r\n        hud.delete()\r\n        hud = null\r\n    }\r\n}\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function localize(...args) {\r\n    const data = args.at(-1)\r\n    const useFormat = typeof data === 'object'\r\n\r\n    const keys = useFormat ? args.slice(0, -1) : args\r\n    keys.unshift(MODULE_ID)\r\n\r\n    return game.i18n[useFormat ? 'format' : 'localize'](keys.join('.'), data)\r\n}\r\n\r\nexport function hasFeat(actor, uuid) {\r\n    return actor.itemTypes.feat.some(feat => feat.sourceId === uuid)\r\n}\r\n\r\nexport function templatePath(template) {\r\n    return `modules/${MODULE_ID}/templates/${template}.hbs`\r\n}\r\n\r\nexport function modifier(mod) {\r\n    return mod >= 0 ? `+${mod}` : mod\r\n}\r\n\r\nexport function getFlag(doc, flag) {\r\n    return doc.getFlag(MODULE_ID, flag)\r\n}\r\n\r\nexport function setFlag(doc, flag, value) {\r\n    return doc.setFlag(MODULE_ID, flag, value)\r\n}\r\n\r\nexport async function enrichHTML(str, actor, { isOwner = actor.isOwner, rollData = actor.getRollData() } = {}) {\r\n    str = str?.trim()\r\n    if (!str) return ''\r\n    const enriched = await TextEditor.enrichHTML(str, { async: true, secrets: isOwner, rollData })\r\n    return enriched\r\n}\r\n\r\nexport function isInstanceOf(obj, name) {\r\n    if (typeof obj !== 'object') return false\r\n\r\n    while ((obj = Reflect.getPrototypeOf(obj))) {\r\n        if (obj.constructor.name === name) return true\r\n    }\r\n\r\n    return false\r\n}\r\n", "import { getHud, getSetting, MODULE_ID } from './module.js'\r\n\r\nexport function registerKeybindings() {\r\n    register('hold', {\r\n        onDown: () => {\r\n            if (getSetting('use-holding') !== 'none') getHud()?.setHolding(true)\r\n        },\r\n        onUp: () => {\r\n            getHud()?.setHolding(false)\r\n        },\r\n    })\r\n\r\n    register('filter', {\r\n        onUp: () => {\r\n            getHud()?.showFilter()\r\n        },\r\n        editable: [\r\n            {\r\n                key: 'KeyQ',\r\n                modifiers: ['Control'],\r\n            },\r\n        ],\r\n    })\r\n}\r\n\r\nfunction path(bind, key) {\r\n    return `${MODULE_ID}.keybinds.${bind}.${key}`\r\n}\r\n\r\nfunction register(name, extras = {}) {\r\n    game.keybindings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        precedence: CONST.KEYBINDING_PRECEDENCE.PRIORITY,\r\n        ...extras,\r\n    })\r\n}\r\n", "import { enableModule, localize, MODULE_ID } from './module.js'\r\n\r\nexport function registerSettings() {\r\n    const isGM = game.data.users.find(x => x._id === game.data.userId).role >= CONST.USER_ROLES.GAMEMASTER\r\n\r\n    /**\r\n     * GM\r\n     */\r\n    const statuses = ['first', 'second', 'third', 'fourth'].map(x => localize(`settings.status.statuses.${x}`)).join(', ')\r\n    register('status', String, statuses, { scope: 'world' })\r\n\r\n    register('last-status', Boolean, false, { scope: 'world' })\r\n\r\n    register('party', Boolean, false, { scope: 'world' })\r\n\r\n    /**\r\n     * CLIENT\r\n     */\r\n    register('enabled', Boolean, true, { onChange: enableModule })\r\n\r\n    register('position', String, 'right', {\r\n        choices: {\r\n            left: path('position', 'choices.left'),\r\n            right: path('position', 'choices.right'),\r\n            top: path('position', 'choices.top'),\r\n            bottom: path('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    register('small-position', String, 'top', {\r\n        choices: {\r\n            left: path('position', 'choices.left'),\r\n            right: path('position', 'choices.right'),\r\n            top: path('position', 'choices.top'),\r\n            bottom: path('position', 'choices.bottom'),\r\n        },\r\n    })\r\n\r\n    register('delay', Number, 250, {\r\n        range: {\r\n            min: 0,\r\n            max: 2000,\r\n            step: 50,\r\n        },\r\n    })\r\n\r\n    register('scale', Number, 14, {\r\n        range: {\r\n            min: 10,\r\n            max: 30,\r\n            step: 1,\r\n        },\r\n    })\r\n\r\n    register('use-holding', String, 'none', {\r\n        hint: path('use-holding', isGM ? 'choices.gm.hint' : 'choices.player.hint'),\r\n        choices: {\r\n            none: path('use-holding', 'choices.none'),\r\n            half: path('use-holding', isGM ? 'choices.gm.half' : 'choices.player.half'),\r\n            all: path('use-holding', isGM ? 'choices.gm.all' : 'choices.player.all'),\r\n        },\r\n    })\r\n\r\n    register('autolock', String, 'none', {\r\n        choices: {\r\n            none: path('autolock', 'choices.none'),\r\n            hover: path('autolock', 'choices.hover'),\r\n            render: path('autolock', 'choices.render'),\r\n        },\r\n    })\r\n\r\n    register('chat-close', Boolean, false)\r\n\r\n    register('observer', Boolean, true)\r\n\r\n    register('see-status', Boolean, false)\r\n\r\n    // tooltip\r\n\r\n    register('saves', String, 'bonus', {\r\n        choices: {\r\n            none: path('saves', 'choices.none'),\r\n            bonus: path('saves', 'choices.bonus'),\r\n            dc: path('saves', 'choices.dc'),\r\n        },\r\n    })\r\n\r\n    register('others', String, 'none', {\r\n        choices: {\r\n            none: path('saves', 'choices.none'),\r\n            bonus: path('saves', 'choices.bonus'),\r\n            dc: path('saves', 'choices.dc'),\r\n        },\r\n    })\r\n\r\n    register('ranks', Boolean, false)\r\n\r\n    register('show-death', String, 'always', {\r\n        choices: {\r\n            none: path('show-death', 'choices.none'),\r\n            always: path('show-death', 'choices.always'),\r\n            only: path('show-death', 'choices.only'),\r\n        },\r\n    })\r\n\r\n    register('force-speed', Boolean, false)\r\n\r\n    register('tooltips', Boolean, false)\r\n\r\n    register('pips', Boolean, false)\r\n\r\n    // distance\r\n\r\n    register('distance', String, 'all', {\r\n        choices: {\r\n            none: path('distance', 'choices.none'),\r\n            self: path('distance', 'choices.self'),\r\n            all: path('distance', 'choices.all'),\r\n        },\r\n    })\r\n\r\n    register('unit', String, '')\r\n\r\n    // sidebar\r\n\r\n    register('height', String, '')\r\n\r\n    register('filter', Boolean, false)\r\n\r\n    register('scrollbar', Boolean, true)\r\n\r\n    register('hazard-width', Number, 32, {\r\n        range: {\r\n            min: 14,\r\n            max: 50,\r\n            step: 1,\r\n        },\r\n    })\r\n\r\n    register('actions-columns', Boolean, false)\r\n\r\n    register('items-columns', Boolean, false)\r\n\r\n    register('spells-columns', Boolean, false)\r\n\r\n    register('skills-columns', Boolean, false)\r\n\r\n    // actions\r\n\r\n    register('actions', String, 'split', {\r\n        choices: {\r\n            name: path('actions', 'choices.name'),\r\n            type: path('actions', 'choices.type'),\r\n            split: path('actions', 'choices.split'),\r\n        },\r\n    })\r\n\r\n    register('actions-colors', Boolean, true)\r\n\r\n    register('attack-close', Boolean, false)\r\n\r\n    // items\r\n\r\n    register('containers', Boolean, false)\r\n\r\n    // spells\r\n\r\n    register('spells', Boolean, false)\r\n\r\n    register('tradition', Boolean, false)\r\n\r\n    register('cast-close', Boolean, false)\r\n\r\n    // skills\r\n\r\n    register('untrained', Boolean, true)\r\n}\r\n\r\nexport function renderSettingsConfig(_, html) {\r\n    const tab = html.find(`.tab[data-tab=${MODULE_ID}]`)\r\n\r\n    function beforeGroup(name, key, dom = 'h3') {\r\n        const localized = localize(`menu.${key}`)\r\n        tab.find(`[name=\"${MODULE_ID}.${name}\"]`).closest('.form-group').before(`<${dom}>${localized}</${dom}>`)\r\n    }\r\n\r\n    if (game.user.isGM) {\r\n        beforeGroup('enabled', 'client.header', 'h2')\r\n    }\r\n\r\n    beforeGroup('saves', 'client.tooltip')\r\n    beforeGroup('distance', 'client.distance')\r\n    beforeGroup('height', 'client.sidebar')\r\n    beforeGroup('actions', 'client.actions')\r\n    beforeGroup('containers', 'client.items')\r\n    beforeGroup('spells', 'client.spells')\r\n    beforeGroup('untrained', 'client.skills')\r\n}\r\n\r\nfunction path(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction register(name, type, defValue, extra = {}) {\r\n    game.settings.register(MODULE_ID, name, {\r\n        name: path(name, 'name'),\r\n        hint: path(name, 'hint'),\r\n        scope: 'client',\r\n        config: true,\r\n        type,\r\n        default: defValue,\r\n        ...extra,\r\n    })\r\n}\r\n", "import { registerKeybindings } from './keybindings.js'\r\nimport { enableModule, getSetting, localize, MODULE_ID, templatePath, getHud } from './module.js'\r\nimport { registerSettings, renderSettingsConfig } from './settings.js'\r\nimport { deleteMacro, getMacros, onDroppedMacro } from './shared.js'\r\n\r\nHooks.once('setup', async () => {\r\n    registerSettings()\r\n    registerKeybindings()\r\n\r\n    await loadTemplates({\r\n        creature: templatePath('tooltips/creature'),\r\n        hazard: templatePath('tooltips/hazard'),\r\n        vehicle: templatePath('tooltips/vehicle'),\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    if (getSetting('enabled')) enableModule(true)\r\n\r\n    game.modules.get('pf2e-token-hud').api = {\r\n        getHud,\r\n    }\r\n})\r\n\r\nHooks.on('renderSettingsConfig', renderSettingsConfig)\r\n\r\nHooks.on('drawMeasuredTemplate', template => {\r\n    if (template.isPreview) getHud()?.close()\r\n})\r\n\r\nHooks.on('getActorDirectoryEntryContext', (_, data) => {\r\n    data.unshift({\r\n        icon: '<i class=\"fa-solid fa-code\"></i>',\r\n        name: `${MODULE_ID}.actor.macros.contextmenu`,\r\n        condition: html => {\r\n            const { documentId } = html.data()\r\n            return getSetting('enabled') && game.actors.get(documentId)?.isOwner\r\n        },\r\n        callback: html => {\r\n            const { documentId } = html.data()\r\n            openMacrosDialog(documentId)\r\n        },\r\n    })\r\n})\r\n\r\nclass DataDialog extends Dialog {\r\n    async getData(options = {}) {\r\n        const data = super.getData(options)\r\n        if (typeof data.content === 'function') data.content = await data.content()\r\n        return data\r\n    }\r\n}\r\n\r\nfunction openMacrosDialog(actorId) {\r\n    const actor = game.actors.get(actorId)\r\n    if (!actor) return\r\n\r\n    const dialog = new DataDialog(\r\n        {\r\n            title: `${actor.name} - ${localize('actor.macros.title')}`,\r\n            content: async () => {\r\n                const macros = getMacros(actor) ?? []\r\n                return renderTemplate(templatePath('dialogs/macros'), {\r\n                    macros,\r\n                    noMacro: localize('extras.no-macro'),\r\n                })\r\n            },\r\n            buttons: {},\r\n            render: html => {\r\n                actor.apps[dialog.appId] = dialog\r\n                html.on('drop', event => onDroppedMacro(event, actor))\r\n                html.find('[data-action=delete-macro]').on('click', event => deleteMacro(event, actor))\r\n            },\r\n            close: () => {\r\n                delete actor.apps[dialog.appId]\r\n            },\r\n        },\r\n        { height: 'auto' }\r\n    ).render(true)\r\n}\r\n"],
  "mappings": "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",
  "names": ["content", "attributes", "system", "sp", "resolve", "Roll", "document", "content", "target", "hud", "popup", "target", "lore", "SKILLS", "modifier", "actions", "name", "hud", "hud", "action", "hud", "actions", "action", "objectHasKey", "MODULE_ID", "target", "hud", "item", "el", "event", "MODULE_ID", "hud", "SKILLS", "popup", "MODULE_ID", "speed", "index", "hud", "y", "MODULE_ID", "MODULE_ID", "register", "path", "MODULE_ID", "MODULE_ID"]
}
